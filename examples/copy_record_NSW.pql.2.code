#!/usr/bin/perl
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# vim: syntax=perl ts=4 sw=4
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Generated By: pequel Version 2.4-5, Build: Wednesday November 16 21:56:42 GMT 2005
#            : http://sourceforge.net/projects/pequel/
#Script Name : copy_record_NSW.pql
#Created On  : Wed Nov 16 14:01:01 2005
#Perl Version: /usr/bin/perl 5.6.1 on solaris
#For         : 
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Options:
#prefix(examples) directory pathname prefix.
#dumpcode(1) Dump the generated Perl code for pequel script
#noverbose(1) do not progress counter
#script_name(examples/copy_record_NSW.pql) script filename
#optimize(1) optimize generated code.
#hash(1) Generate in memory. Input data can be unsorted.
#doc_title(Copy Record Example Script) document title.
#doc_email(sample@youraddress.com) document email entry.
#doc_version(2.3) document version for pequel script.
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
use strict;
use constant _I_LOCATION         => int    0;
use constant _I_PRODUCT_CODE     => int    1;
use constant _I_SALES_TOTAL      => int    2;
use constant _I_LOCATION_NAME    => int    3;
use constant _O_LOCATION_NAME    => int    1;
use constant _O_PRODUCT_CODE     => int    2;
use constant _O_SALES_TOTAL      => int    3;
local $\="\n";
local $,="|";
use constant LAST_ICELL => int 3;
my @I_VAL;
my %O_VAL;
my $key;
while (<STDIN>)
{
    chomp;
    @I_VAL = split("[|]", $_);
    $key = ( $I_VAL[_I_PRODUCT_CODE] );
    $I_VAL[_I_LOCATION_NAME] = 'New South Wales';
    $O_VAL{$key}{_O_LOCATION_NAME} = $I_VAL[_I_LOCATION_NAME];
    $O_VAL{$key}{_O_PRODUCT_CODE} = $I_VAL[_I_PRODUCT_CODE];
    $O_VAL{$key}{_O_SALES_TOTAL} += $I_VAL[_I_SALES_TOTAL] unless ($I_VAL[_I_SALES_TOTAL] eq '');
}

foreach $key (sort  keys %O_VAL)
{
    print STDOUT
        $O_VAL{$key}{_O_LOCATION_NAME},
        $O_VAL{$key}{_O_PRODUCT_CODE},
        $O_VAL{$key}{_O_SALES_TOTAL}
    ;
}

close(STDIN);
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
