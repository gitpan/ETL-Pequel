#!/usr/bin/perl
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# vim: syntax=perl ts=4 sw=4
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Generated By: pequel Version 2.3-6, Build: Wednesday October  26 23:16:49 BST 2005
#            : http://sourceforge.net/projects/pequel/
#Script Name : examples/apachelog.pql
#Created On  : Wed Oct 26 13:25:42 2005
#Perl Version: /usr/bin/perl 5.6.1 on solaris
#For         : 
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Options:
#prefix(examples) directory pathname prefix.
#dumpcode(1) Dump the generated Perl code for pequel script
#noverbose(1) do not progress counter
#script_name(examples/apachelog.pql) script filename
#header(1) write header record to output.
#optimize(1) optimize generated code.
#nulls(1) print zero for null numeric/decimal.
#transfer(1) Copy input (including calculated fields) to output.
#doc_title(Apache CLF Log Input Example Script) document title.
#doc_email(sample@youraddress.com) document email entry.
#doc_version(2.2) document version for pequel script.
#input_file(apachelog.data) input data filename
#input_delimiter( ) input file field delimiter
#input_delimiter_extra("[) Extra input field delimiter(s)
#inline_cc(CC) Inline: CC
#inline_optimize(-xO5 -xinline=%auto) Inline: OPTIMIZE
#inline_ccflags(-xchip=ultra3 -DSS_64BIT_SERVER -DBIT64 -DMACHINE64) Inline: CCFLAGS
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
use strict;
use constant _I_IP_ADDRESS    => int    0;
use constant _I_TIMESTAMP     => int    1;
use constant _I_REQUEST       => int    2;
use constant _I_F4            => int    3;
use constant _I_F5            => int    4;
use constant _I_F6            => int    5;
local $\="\n";
local $,="|";
use constant LAST_ICELL => int 5;
my @I_VAL;
my @O_VAL;
open(DATA, q{examples/apachelog.data})|| die "Cannot open examples/apachelog.data: $!";
my $fd = fileno(DATA);
OpenSortStream($fd);
&PrintHeader();
my $i;
while (readsplit(\@I_VAL))
{
    ++$i;
    print STDOUT
        @I_VAL[0..LAST_ICELL]
    ;
}

#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
sub PrintHeader
{
    local $\="\n";
    local $,="|";
    print 
        'IP_ADDRESS',
        'TIMESTAMP',
        'REQUEST',
        'F4',
        'F5',
        'F6'
        ;
}

#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#***** I N L I N E *****
use Inline
    C => Config =>
    NAME => 'examples::apachelog',
    CC => 'CC',
    CLEAN_AFTER_BUILD => '1',
    CLEAN_BUILD_AREA => '1',
    PRINT_INFO => '0',
    BUILD_NOISY => '0',
    BUILD_TIMERS => '0',
    FORCE_BUILD => '0',
    LIBS => ' ',
    INC => ' ',
    CCFLAGS => '-xchip=ultra3 -DSS_64BIT_SERVER -DBIT64 -DMACHINE64 ',
    OPTIMIZE => '-xO5 -xinline=%auto '
    ;

use Inline C => q~


#define GFMAXPIPBUFFER      1536
#define GFMAXPIPFLDS        7

#define _I_IP_ADDRESS       0
#define _I_TIMESTAMP        1
#define _I_REQUEST          2
#define _I_F4               3
#define _I_F5               4
#define _I_F6               5


static const char *fields[GFMAXPIPFLDS];
static FILE *fstream = (FILE*)0;

int readsplit (SV* I_VAL_ref)
{
    char sql[4096];
    int ret;
    char *pzErrMsg = 0;
    register char *p;
    static char inp[GFMAXPIPBUFFER];
    register AV* I_VAL;
    register int i=0;
    int inside_quotes=0;
    int inside_sqb=0;
    
    if (!fgets(inp, GFMAXPIPBUFFER, fstream) ) return 0;
    if (!SvROK(I_VAL_ref)) croak("I_VAL_ref is not a reference");
    
    I_VAL = (AV*)SvRV(I_VAL_ref);
    av_clear(I_VAL);
    
    memset(fields, 0, sizeof(fields));
    
    p = inp;
    fields[0] = p;
    while (*p) 
    {
        if (!inside_quotes && (*p == '[' || *p == ']')) { inside_sqb = !inside_sqb; }
        if (!inside_sqb && *p == '"') { inside_quotes = !inside_quotes; }
        if (!inside_quotes && !inside_sqb && *p == ' ') 
        {
            *p = '\0';
            av_store(I_VAL, i, newSVpvn(fields[i], strlen(fields[i])));
            fields[++i] = p + 1;
        }
        
        p++;
    }
    
    av_store(I_VAL, i, newSVpvn(fields[i], strlen(fields[i])));
    while (++i < GFMAXPIPFLDS)
        av_store(I_VAL, i, newSVpvn("", 0));
    int pN;
    return 1;
}

int OpenSortStream (int fd)
{
    if ((fstream = fdopen(fd, "r")) == (FILE*)0)
        croak("examples/apachelog.pql:Unable to open input file stream.");
    return 1;
}

~; #End of Inline-C Code
