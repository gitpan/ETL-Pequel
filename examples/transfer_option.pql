// vim: syntax=pequel ts=4 sw=4
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
//  Script       : transfer_option.pql
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

options
    header                  # (default) write header record to output.
    optimize                # (default) optimize generated code.
	transfer
	discard_header
	default_datetype(DD/MM/YYYY)
    doc_title("Transfer Option Example Script")
    doc_email("sample@youraddress.com")
    doc_version(2.2)

description section
	Demonstrates use of 'transfer' option, and &date() macro.
	Note the &date() macro converts date values to YYYYMMDD format.

init table
	LOC_DESCRIPT NSW 'New South Wales'
	LOC_DESCRIPT WA 'Western Australia'
	LOC_DESCRIPT SYD 'Sydney'
	LOC_DESCRIPT MEL 'Melbourne'
	LOC_DESCRIPT SA 'South Australia'
	LOC_DESCRIPT NT 'Northern Territory'
	LOC_DESCRIPT QLD 'Queensland'
	LOC_DESCRIPT VIC 'Victoria'
	LOC_DESCRIPT PER 'Perth'
	LOC_DESCRIPT ALIC 'Alice Springs'

init table
	LOC_DESCRIPTION WA "Western Australia" 4001
	LOC_DESCRIPTION NSW "New South Wales" 2061
	LOC_DESCRIPTION SA 'South Australia' 3023
	LOC_DESCRIPTION QLD 'Queensland' 6099

input section
    PRODUCT_CODE,
    COST_PRICE,
    DESCRIPTION,
    SALES_CODE,
	SALES_PRICE,
	SALES_QTY,
	SALES_DATE,
	LOCATION,
	LDESCRIPT => %LOC_DESCRIPT(LOCATION),
	ZIPCODE => %LOC_DESCRIPTION(LOCATION)->2, // Access 2nd field
	SALES_TOTAL => SALES_PRICE * SALES_QTY,
	SALES_Q1 => (&date(SALES_DATE,YYMMMDD) >= 20020101 && &date(SALES_DATE) <= 20020331) ? SALES_TOTAL : 0.0,
	SALES_Q2 => (&date(SALES_DATE) >= 20020401 && &date(SALES_DATE) <= 30030631) ? SALES_TOTAL : 0.0,
	SALES_Q3 => (&date(SALES_DATE) >= 20020701 && &date(SALES_DATE) <= 20020931) ? SALES_TOTAL : 0.0,
	SALES_Q4 => (&date(SALES_DATE) >= 20021001 && &date(SALES_DATE) <= 20021231) ? SALES_TOTAL : 0.0

output section
