// vim: syntax=pequel ts=4 sw=4
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
//  Script      : sales_ttl_by_loc.pql
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

options
	input_file(sample.data)	// Need to specify this script is used as a pequel-table loader.
    header                  // (default) write header record to output.
    optimize                // (default) optimize generated code.
	hash					// Required because group-by field is derived.
    doc_title("Pequel Table Example Script")
    doc_email("sample@youraddress.com")
    doc_version(2.3)

description section
	This script demonstrates the use of pequel tables. This scipt will be
	called by another Pequel script to load the table data, via the 'load pequel table'
	section. The important thing here is to specify the 'input_file' option.

load table pequel
	TTOPPRODBYLOC top_prod_by_loc.pql LOCATION

input section
    PRODUCT_CODE,
    COST_PRICE,
    DESCRIPTION,
    SALES_CODE,
    SALES_PRICE,
    SALES_QTY,
    SALES_DATE,
    LOCATION,
    SALES_TOTAL => SALES_QTY * SALES_PRICE,
	TOP_PRODUCT => %TTOPPRODBYLOC(LOCATION)->PRODUCT_CODE

group by
    LOCATION

output section
    string LOCATION 		LOCATION
    decimal SALES_TOTAL 	sum SALES_TOTAL
	string TOP_PRODUCT		TOP_PRODUCT
