#!/usr/bin/perl
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# vim: syntax=perl ts=4 sw=4
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Generated By: pequel Version 2.3-6, Build: Wednesday October  26 23:16:49 BST 2005
#            : http://sourceforge.net/projects/pequel/
#Script Name : examples/hash_option.pql
#Created On  : Wed Oct 26 14:07:07 2005
#Perl Version: /usr/bin/perl 5.6.1 on solaris
#For         : 
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Options:
#prefix(examples) directory pathname prefix.
#dumpcode(1) Dump the generated Perl code for pequel script
#noverbose(1) do not progress counter
#script_name(examples/hash_option.pql) script filename
#header(1) write header record to output.
#optimize(1) optimize generated code.
#hash(1) Generate in memory. Input data can be unsorted.
#doc_title(Hash Option Example Script) document title.
#doc_email(sample@youraddress.com) document email entry.
#doc_version(2.2) document version for pequel script.
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
use strict;
use constant _I_PRODUCT_CODE            => int    0;
use constant _I_COST_PRICE              => int    1;
use constant _I_DESCRIPTION             => int    2;
use constant _I_SALES_CODE              => int    3;
use constant _I_SALES_PRICE             => int    4;
use constant _I_SALES_QTY               => int    5;
use constant _I_SALES_DATE              => int    6;
use constant _I_LOCATION                => int    7;
use constant _O_LOCATION                => int    1;
use constant _O_MIN_COST_PRICE          => int    2;
use constant _O_MAX_COST_PRICE          => int    3;
use constant _O__DISTINCT_SALES_CODE    => int    4;
use constant _O_SALES_CODE_1            => int    5;
use constant _O_SALES_CODE_2            => int    6;
use constant _O_SALES_CODE_3            => int    7;
use constant _O_SALES_CODE_4            => int    8;
use constant _O_SALES_CODE_5            => int    9;
local $\="\n";
local $,="|";
use constant LAST_ICELL => int 7;
my @I_VAL;
my %O_VAL;
my $key;
my %DISTINCT;
&PrintHeader();
while (<STDIN>)
{
    chomp;
    @I_VAL = split("[|]", $_);
    $key = ( $I_VAL[_I_LOCATION] );
    $O_VAL{$key}{_O_LOCATION} = $I_VAL[_I_LOCATION];
    $O_VAL{$key}{_O_MIN_COST_PRICE} = $I_VAL[_I_COST_PRICE]
        if (!defined($O_VAL{$key}{_O_MIN_COST_PRICE}) || $I_VAL[_I_COST_PRICE] < $O_VAL{$key}{_O_MIN_COST_PRICE});
    $O_VAL{$key}{_O_MAX_COST_PRICE} = $I_VAL[_I_COST_PRICE]
        if (!defined($O_VAL{$key}{_O_MAX_COST_PRICE}) || $I_VAL[_I_COST_PRICE] > $O_VAL{$key}{_O_MAX_COST_PRICE});
    $O_VAL{$key}{_O__DISTINCT_SALES_CODE}++ 
        if (defined($I_VAL[_I_SALES_CODE]) && ++$DISTINCT{$key}{_O__DISTINCT_SALES_CODE}{qq{$I_VAL[_I_SALES_CODE]}} == 1);
    
    if ($O_VAL{$key}{_O__DISTINCT_SALES_CODE} == 1) {
        $O_VAL{$key}{_O_SALES_CODE_1} = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL{$key}{_O_SALES_CODE_1}));
    }
    elsif ($O_VAL{$key}{_O__DISTINCT_SALES_CODE} == 2) {
        $O_VAL{$key}{_O_SALES_CODE_2} = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL{$key}{_O_SALES_CODE_2}));
    }
    elsif ($O_VAL{$key}{_O__DISTINCT_SALES_CODE} == 3) {
        $O_VAL{$key}{_O_SALES_CODE_3} = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL{$key}{_O_SALES_CODE_3}));
    }
    elsif ($O_VAL{$key}{_O__DISTINCT_SALES_CODE} == 4) {
        $O_VAL{$key}{_O_SALES_CODE_4} = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL{$key}{_O_SALES_CODE_4}));
    }
    elsif ($O_VAL{$key}{_O__DISTINCT_SALES_CODE} == 5) {
        $O_VAL{$key}{_O_SALES_CODE_5} = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL{$key}{_O_SALES_CODE_5}));
    }
}

foreach $key (sort  keys %O_VAL)
{
    print STDOUT
        $O_VAL{$key}{_O_LOCATION},
        $O_VAL{$key}{_O_MIN_COST_PRICE},
        $O_VAL{$key}{_O_MAX_COST_PRICE},
        $O_VAL{$key}{_O_SALES_CODE_1},
        $O_VAL{$key}{_O_SALES_CODE_2},
        $O_VAL{$key}{_O_SALES_CODE_3},
        $O_VAL{$key}{_O_SALES_CODE_4},
        $O_VAL{$key}{_O_SALES_CODE_5}
    ;
}

#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
sub PrintHeader
{
    local $\="\n";
    local $,="|";
    print 
        'LOCATION',
        'MIN_COST_PRICE',
        'MAX_COST_PRICE',
        'SALES_CODE_1',
        'SALES_CODE_2',
        'SALES_CODE_3',
        'SALES_CODE_4',
        'SALES_CODE_5'
        ;
}

