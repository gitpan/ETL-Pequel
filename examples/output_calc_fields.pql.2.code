#!/usr/bin/perl
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# vim: syntax=perl ts=4 sw=4
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Generated By: pequel Version 2.4-5, Build: Wednesday November 16 21:56:42 GMT 2005
#            : http://sourceforge.net/projects/pequel/
#Script Name : output_calc_fields.pql
#Created On  : Wed Nov 16 14:11:25 2005
#Perl Version: /usr/bin/perl 5.6.1 on solaris
#For         : 
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#Options:
#prefix(examples) directory pathname prefix.
#dumpcode(1) Dump the generated Perl code for pequel script
#noverbose(1) do not progress counter
#script_name(examples/output_calc_fields.pql) script filename
#header(1) write header record to output.
#optimize(1) optimize generated code.
#doc_title(Output Calculated Fields Example Script) document title.
#doc_email(sample@youraddress.com) document email entry.
#doc_version(2.2) document version for pequel script.
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
use strict;
use constant _I_PRODUCT_CODE            => int    0;
use constant _I_COST_PRICE              => int    1;
use constant _I_DESCRIPTION             => int    2;
use constant _I_SALES_CODE              => int    3;
use constant _I_SALES_PRICE             => int    4;
use constant _I_SALES_QTY               => int    5;
use constant _I_SALES_DATE              => int    6;
use constant _I_LOCATION                => int    7;
use constant _O_PRODUCT_CODE            => int    1;
use constant _O_MIN_COST_PRICE          => int    2;
use constant _O_MAX_COST_PRICE          => int    3;
use constant _O__DISTINCT_SALES_CODE    => int    4;
use constant _O_SALES_CODE_1            => int    5;
use constant _O_SALES_CODE_2            => int    6;
use constant _O_SALES_CODE_3            => int    7;
use constant _O_SALES_CODE_4            => int    8;
use constant _O_SALES_CODE_5            => int    9;
use constant _O_COMMENT                 => int   10;
use constant _O_COMMENT2                => int   11;
local $\="\n";
local $,="|";
use constant LAST_ICELL => int 7;
my @I_VAL;
my @O_VAL;
my %DISTINCT;
my $key__I_PRODUCT_CODE;
my $previous_key__I_PRODUCT_CODE = undef;
foreach my $f (1..11) { $O_VAL[$f] = undef; }
# Sort:PRODUCT_CODE(asc:string) 
open(DATA, q{cat  - | sort  -t'|' -y -k 1,1 2>/dev/null |}) || die "Cannot open input: $!";
&PrintHeader();
while (<DATA>)
{
    chomp;
    @I_VAL = split("[|]", $_);
    $key__I_PRODUCT_CODE = $I_VAL[_I_PRODUCT_CODE];
    if (!defined($previous_key__I_PRODUCT_CODE))
    {
        $previous_key__I_PRODUCT_CODE = $key__I_PRODUCT_CODE;
    }
    
    elsif ($previous_key__I_PRODUCT_CODE ne $key__I_PRODUCT_CODE)
    {
        $O_VAL[_O_COMMENT] = $O_VAL[_O__DISTINCT_SALES_CODE] > 5 ? "Product has more than five sales codes" : "Product has " . $O_VAL[_O__DISTINCT_SALES_CODE] . " sales codes";
        $O_VAL[_O_COMMENT2] = "Product has " . ($O_VAL[_O__DISTINCT_SALES_CODE] > 5 ? "more than five" : $O_VAL[_O__DISTINCT_SALES_CODE]) . " sales codes";
        print STDOUT
            $O_VAL[_O_PRODUCT_CODE],
            $O_VAL[_O_MIN_COST_PRICE],
            $O_VAL[_O_MAX_COST_PRICE],
            $O_VAL[_O_SALES_CODE_1],
            $O_VAL[_O_SALES_CODE_2],
            $O_VAL[_O_SALES_CODE_3],
            $O_VAL[_O_SALES_CODE_4],
            $O_VAL[_O_SALES_CODE_5],
            $O_VAL[_O_COMMENT],
            $O_VAL[_O_COMMENT2]
        ;
        $previous_key__I_PRODUCT_CODE = $key__I_PRODUCT_CODE;
        @O_VAL = undef;
        %DISTINCT = undef;
    }
    
    $O_VAL[_O_PRODUCT_CODE] = $I_VAL[_I_PRODUCT_CODE];
    $O_VAL[_O_MIN_COST_PRICE] = $I_VAL[_I_COST_PRICE]
        if (!defined($O_VAL[_O_MIN_COST_PRICE]) || $I_VAL[_I_COST_PRICE] < $O_VAL[_O_MIN_COST_PRICE]);
    $O_VAL[_O_MAX_COST_PRICE] = $I_VAL[_I_COST_PRICE]
        if (!defined($O_VAL[_O_MAX_COST_PRICE]) || $I_VAL[_I_COST_PRICE] > $O_VAL[_O_MAX_COST_PRICE]);
    $O_VAL[_O__DISTINCT_SALES_CODE]++ 
        if (defined($I_VAL[_I_SALES_CODE]) && ++$DISTINCT{_O__DISTINCT_SALES_CODE}{qq{$I_VAL[_I_SALES_CODE]}} == 1);
    
    if ($O_VAL[_O__DISTINCT_SALES_CODE] == 1) {
        $O_VAL[_O_SALES_CODE_1] = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL[_O_SALES_CODE_1]));
    }
    elsif ($O_VAL[_O__DISTINCT_SALES_CODE] == 2) {
        $O_VAL[_O_SALES_CODE_2] = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL[_O_SALES_CODE_2]));
    }
    elsif ($O_VAL[_O__DISTINCT_SALES_CODE] == 3) {
        $O_VAL[_O_SALES_CODE_3] = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL[_O_SALES_CODE_3]));
    }
    elsif ($O_VAL[_O__DISTINCT_SALES_CODE] == 4) {
        $O_VAL[_O_SALES_CODE_4] = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL[_O_SALES_CODE_4]));
    }
    elsif ($O_VAL[_O__DISTINCT_SALES_CODE] == 5) {
        $O_VAL[_O_SALES_CODE_5] = $I_VAL[_I_SALES_CODE] if (!defined($O_VAL[_O_SALES_CODE_5]));
    }
}

$O_VAL[_O_COMMENT] = $O_VAL[_O__DISTINCT_SALES_CODE] > 5 ? "Product has more than five sales codes" : "Product has " . $O_VAL[_O__DISTINCT_SALES_CODE] . " sales codes";
$O_VAL[_O_COMMENT2] = "Product has " . ($O_VAL[_O__DISTINCT_SALES_CODE] > 5 ? "more than five" : $O_VAL[_O__DISTINCT_SALES_CODE]) . " sales codes";
print STDOUT
    $O_VAL[_O_PRODUCT_CODE],
    $O_VAL[_O_MIN_COST_PRICE],
    $O_VAL[_O_MAX_COST_PRICE],
    $O_VAL[_O_SALES_CODE_1],
    $O_VAL[_O_SALES_CODE_2],
    $O_VAL[_O_SALES_CODE_3],
    $O_VAL[_O_SALES_CODE_4],
    $O_VAL[_O_SALES_CODE_5],
    $O_VAL[_O_COMMENT],
    $O_VAL[_O_COMMENT2]
;
close(DATA);
#-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
sub PrintHeader
{
    local $\="\n";
    local $,="|";
    print STDOUT
        'PRODUCT_CODE',
        'MIN_COST_PRICE',
        'MAX_COST_PRICE',
        'SALES_CODE_1',
        'SALES_CODE_2',
        'SALES_CODE_3',
        'SALES_CODE_4',
        'SALES_CODE_5',
        'COMMENT',
        'COMMENT2'
        ;
}

