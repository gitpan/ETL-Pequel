%PDF-1.2
%‚„œ”
1 0 obj
[/CalRGB
<<
/WhitePoint [0.9505 1 1.089]
/Gamma [1.8 1.8 1.8]
/Matrix [0.4497 0.2446 0.02518 0.3613 0.672 0.1412 0.1845 0.08334 0.9227]
>>
]
endobj
2 0 obj
<<
/CreationDate (D:20050930143627+0100)
/Producer (Pequel)
/Title (Pequel ETL)
>>
endobj
5 0 obj
<<
/Type /Encoding
/Differences [ 0 /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam
/quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five
/six /seven /eight /nine /colon /semicolon /less /equal
/greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L
/M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft
/backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /emdash
/dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef
/hungarumlaut /ogonek /caron /space /exclamdown /cent
/sterling /currency /yen /brokenbar /section /dieresis
/copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior
/threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave
/Aacute /Acircumflex /Atilde /Adieresis /Aring /AE
/Ccedilla /Egrave /Eacute /Ecircumflex /Edieresis /Igrave
/Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash
/Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
/germandbls /agrave /aacute /acircumflex /atilde /adieresis
/aring /ae /ccedilla /egrave /eacute /ecircumflex
/edieresis /igrave /iacute /icircumflex /idieresis /eth
/ntilde /ograve /oacute /ocircumflex /otilde /odieresis
/divide /oslash /ugrave /uacute /ucircumflex /udieresis
/yacute /thorn /ydieresis ]
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F00
/Encoding 5 0 R
/BaseFont /Times-Roman
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F01
/Encoding 5 0 R
/BaseFont /Times-Bold
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F02
/Encoding 5 0 R
/BaseFont /Times-Italic
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F03
/Encoding 5 0 R
/BaseFont /Times-BoldItalic
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F10
/Encoding 5 0 R
/BaseFont /Courier
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F11
/Encoding 5 0 R
/BaseFont /Courier-Bold
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F12
/Encoding 5 0 R
/BaseFont /Courier-Oblique
>>
endobj
13 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F13
/Encoding 5 0 R
/BaseFont /Courier-BoldOblique
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F20
/Encoding 5 0 R
/BaseFont /Helvetica
>>
endobj
15 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F21
/Encoding 5 0 R
/BaseFont /Helvetica-Bold
>>
endobj
16 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F22
/Encoding 5 0 R
/BaseFont /Helvetica-Oblique
>>
endobj
17 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F23
/Encoding 5 0 R
/BaseFont /Helvetica-BoldOblique
>>
endobj
0 g
18 0 obj
<<
/Length 19 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(NAME ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.0000 Tw
(PEQUEL - Pequel ETL Query Language User Guide ) Tj
/F21 12 Tf
1 0 0 1 52.0 705.6 Tm
0.0000 Tw
(OVERVIEW \217 WHAT IS PEQUEL? ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.4075 Tw
() Tj
/F23 10 Tf
0.4075 Tw
(Pequel) Tj
/F20 10 Tf
0.4075 Tw
( is a comprehensive ETL \(Extract-Transform-Load\) data processing system for raw \(ASCII\) data) Tj
1 0 0 1 76.0 679.2 Tm
2.6050 Tw
(file processing. It features a simple, user-friendly event driven scripting interface that transparently) Tj
1 0 0 1 76.0 667.2 Tm
0.3800 Tw
(generates, builds and executes highly efficient data-processing programs. By using the ) Tj
/F23 10 Tf
0.3800 Tw
(Pequel) Tj
/F20 10 Tf
0.3800 Tw
( scripting) Tj
1 0 0 1 76.0 655.2 Tm
0.6723 Tw
(language, the user can create and maintain complex ETL data transformation processes quickly, easily,) Tj
1 0 0 1 76.0 643.2 Tm
0.0000 Tw
(and accurately.   ) Tj
/F20 10 Tf
1 0 0 1 76.0 619.2 Tm
0.8906 Tw
(The ) Tj
/F23 10 Tf
0.8906 Tw
(Pequel) Tj
/F20 10 Tf
0.8906 Tw
( scripting language is aimed at non-programmer users and is simple to learn and use. It is) Tj
1 0 0 1 76.0 607.2 Tm
1.1290 Tw
(event driven \217 the user need only fill in the details for each event as required. It can also be used to) Tj
1 0 0 1 76.0 595.2 Tm
0.0000 Tw
(effectively simplify what would otherwise be a complex SQL statement. ) Tj
/F20 10 Tf
1 0 0 1 76.0 571.2 Tm
3.8325 Tw
(The ) Tj
/F23 10 Tf
3.8325 Tw
(Pequel) Tj
/F20 10 Tf
3.8325 Tw
( scripting language allows embeded Perl expressions, thus giving access to regular) Tj
1 0 0 1 76.0 559.2 Tm
0.0000 Tw
(expressions, built-in functions, and all Perl operators.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 535.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Pequel) Tj
/F20 10 Tf
0.0000 Tw
( is installed as a Perl module.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 511.2 Tm
0.6187 Tw
() Tj
/F23 10 Tf
0.6187 Tw
(Pequel) Tj
/F20 10 Tf
0.6187 Tw
( generates highly efficient Perl and C code. The emphasis in the generated code is performance) Tj
1 0 0 1 76.0 499.2 Tm
1.0000 Tw
(\217 to process maximum records in minimum time. The generated code can be dumped into a program) Tj
1 0 0 1 76.0 487.2 Tm
0.0000 Tw
(file, modified and executed independently of Pequel. ) Tj
/F20 10 Tf
1 0 0 1 76.0 463.2 Tm
1.8183 Tw
(The ) Tj
/F23 10 Tf
1.8183 Tw
(Pequel) Tj
/F20 10 Tf
1.8183 Tw
( scipt is self-documenting via ) Tj
/F23 10 Tf
1.8183 Tw
(pequeldoc) Tj
/F20 10 Tf
1.8183 Tw
(. ) Tj
/F23 10 Tf
1.8183 Tw
(Pequel) Tj
/F20 10 Tf
1.8183 Tw
( will automatically generate the Pequel) Tj
1 0 0 1 76.0 451.2 Tm
1.5192 Tw
(Script Programmer`s Reference Manual in pdf format. This manual contains detailed and summarised) Tj
1 0 0 1 76.0 439.2 Tm
1.6769 Tw
(information about the script, and includes cross-reference information. It will also contain an optional) Tj
1 0 0 1 76.0 427.2 Tm
0.0000 Tw
(listing of the generated program. ) Tj
/F20 10 Tf
1 0 0 1 76.0 403.2 Tm
0.0000 Tw
(The following guide describes the use of the ) Tj
/F23 10 Tf
0.0000 Tw
(Pequel) Tj
/F20 10 Tf
0.0000 Tw
( scripting language in detail. ) Tj
/F20 10 Tf
1 0 0 1 76.0 379.2 Tm
0.0000 Tw
(Pequel can be used to process data in a number of different ways, including the following: ) Tj
/F20 10 Tf
1 0 0 1 76.0 352.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Selecting records \(filtering\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 340.8 Tm
2.0853 Tw
(Use Perl expressions to select records. The full power of Perl regular expressions and Perl built-in) Tj
1 0 0 1 76.0 328.8 Tm
0.0000 Tw
(functions is also available. ) Tj
/F20 10 Tf
1 0 0 1 76.0 302.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Grouping and Statistics) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 290.4 Tm
1.5407 Tw
(Records with similar characteristics can be grouped together.  Calculate statistics, such as max, min,) Tj
1 0 0 1 76.0 278.4 Tm
0.2818 Tw
(mean, sum, and count, on grouped record sets. Grouping can also be done on unsorted input data using) Tj
1 0 0 1 76.0 266.4 Tm
0.0000 Tw
(the ) Tj
/F10 10 Tf
0.0000 Tw
(hash) Tj
/F20 10 Tf
0.0000 Tw
( option. ) Tj
/F20 10 Tf
1 0 0 1 76.0 240.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Calculations) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 228.0 Tm
0.2038 Tw
(Perform calculations on input fields to generate new \(derived\) fields, using Perl expressions. Calculations) Tj
1 0 0 1 76.0 216.0 Tm
0.3471 Tw
(can be performed on both numeric fields \(mathematical\) and string fields \(such as concatenation, substr,) Tj
1 0 0 1 76.0 204.0 Tm
0.0000 Tw
(etc\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 177.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Cleaning Data) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 165.6 Tm
0.2218 Tw
(Use Pequel with perl regular expressions to reject ) Tj
/F22 10 Tf
0.2218 Tw
(bad) Tj
/F20 10 Tf
0.2218 Tw
( records. Rejected records will be saved in a ) Tj
/F22 10 Tf
0.2218 Tw
(reject) Tj
/F20 10 Tf
1 0 0 1 76.0 153.6 Tm
0.0000 Tw
(file. ) Tj
/F20 10 Tf
1 0 0 1 76.0 127.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Analysing Data Quality) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 115.2 Tm
0.6169 Tw
(Data can be analysed for quality, and a summary analysis report generated which will reflect the overall) Tj
1 0 0 1 76.0 103.2 Tm
0.0000 Tw
(quality of the data. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(1) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
19 0 obj
5617
endobj
20 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
21 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 20 0 R
/Contents 18 0 R
>>
endobj
22 0 obj
<<
/Length 23 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 765.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Statistics) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 753.6 Tm
0.0000 Tw
(Generate summary statistical information. ) Tj
/F20 10 Tf
1 0 0 1 76.0 727.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Converting Data) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 715.2 Tm
3.6000 Tw
(Perform any kind of data conversion. These include, converting from one data type to another,) Tj
1 0 0 1 76.0 703.2 Tm
0.6129 Tw
(reformatting, case change, splitting a field into two or more fields, combining two or more fields into one) Tj
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
(field, converting date fields from one date format to another, padding, etc. ) Tj
/F20 10 Tf
1 0 0 1 76.0 664.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Tables and Cross References) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 652.8 Tm
0.0000 Tw
(Load and use tables to lookup / cross-reference values by key. ) Tj
/F20 10 Tf
1 0 0 1 76.0 626.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Database Connectivity) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.4 Tm
0.2344 Tw
(Direct access to database \(Oracle, Sqlite, etc\) tables. ) Tj
/F22 10 Tf
0.2344 Tw
(New in v2) Tj
/F20 10 Tf
0.2344 Tw
(. Pequel will generate low level database) Tj
1 0 0 1 76.0 602.4 Tm
0.0000 Tw
(API code. Currently supported databases are Oracle \(via OCI\), and Sqlite. ) Tj
/F20 10 Tf
1 0 0 1 76.0 576.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Merge and n-Way Join) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 564.0 Tm
0.1253 Tw
(Similarly sorted data source files can be merged. Similar to join, but no limit to number of source files that) Tj
1 0 0 1 76.0 552.0 Tm
0.0000 Tw
(can be joined \(merged\) simultaneously. ) Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 525.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Extract Data from Database Table\(s\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 513.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(TBD version 2.5) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 501.6 Tm
0.9975 Tw
(Data can be extracted directly from database tables, and from a mix of database types \(Oracle, Sqlite,) Tj
1 0 0 1 76.0 489.6 Tm
0.0000 Tw
(Mysql, Sybase, etc\), into tables and into the input-section. ) Tj
/F20 10 Tf
1 0 0 1 76.0 463.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Load Data into Database Table\(s\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 451.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(TBD version 2.5) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 439.2 Tm
0.0000 Tw
(The output data can be directly batch-loaded into a database table.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 412.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Input Binary Data Files) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 400.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(TBD version 3.0) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 388.8 Tm
0.0000 Tw
(Access to binary data files via the input-section and tables. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(2) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
23 0 obj
3356
endobj
24 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
25 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 24 0 R
/Contents 22 0 R
>>
endobj
26 0 obj
<<
/Length 27 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(USAGE ) Tj
/F20 10 Tf
1 0 0 1 76.0 732.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel scriptfile.pql  <  ) Tj
/F22 10 Tf
0.0000 Tw
(file_in) Tj
/F23 10 Tf
0.0000 Tw
(  >  ) Tj
/F22 10 Tf
0.0000 Tw
(file_out) Tj
/F23 10 Tf
0.0000 Tw
() Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 720.7 Tm
0.0000 Tw
(Execute ) Tj
/F23 10 Tf
0.0000 Tw
(pequel) Tj
/F20 10 Tf
0.0000 Tw
( with ) Tj
/F22 10 Tf
0.0000 Tw
(scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
( script to process ) Tj
/F22 10 Tf
0.0000 Tw
(file_in) Tj
/F20 10 Tf
0.0000 Tw
( data file, resulting in ) Tj
/F22 10 Tf
0.0000 Tw
(file_out) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 694.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -c scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 682.3 Tm
0.0000 Tw
(Check the syntax of the pequel script ) Tj
/F22 10 Tf
0.0000 Tw
(scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 655.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -viewcode scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 643.9 Tm
0.0000 Tw
(Generate and display the code for the pequel script ) Tj
/F22 10 Tf
0.0000 Tw
(scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 617.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -dumpcode scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 605.5 Tm
0 Tw
(Generate the pequel code for the script ) Tj
/F22 10 Tf
0 Tw
(scriptfile.pql) Tj
/F20 10 Tf
0 Tw
( and save generated code in the file) Tj
1 0 0 1 76.0 593.5 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(scriptname.pql.2.code) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 567.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -v) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 555.1 Tm
0.0000 Tw
(Display version informatio for ) Tj
/F23 10 Tf
0.0000 Tw
(Pequel) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 528.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -usage) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 516.7 Tm
0.0000 Tw
(Display Pequel usage command summary. ) Tj
/F20 10 Tf
1 0 0 1 76.0 490.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequel -pequeldoc pdf -detail scriptfile.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 478.3 Tm
0.6636 Tw
(Generate the Script Reference document in pdf format for the Pequel script ) Tj
/F22 10 Tf
0.6636 Tw
(scriptfile.pql) Tj
/F20 10 Tf
0.6636 Tw
(. The document) Tj
1 0 0 1 76.0 466.3 Tm
0.0000 Tw
(will include a section showing the generated code \() Tj
/F23 10 Tf
0.0000 Tw
(-detail) Tj
/F20 10 Tf
0.0000 Tw
(\). ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(3) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
27 0 obj
2922
endobj
28 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
29 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 28 0 R
/Contents 26 0 R
>>
endobj
30 0 obj
<<
/Length 31 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(TUTORIAL ) Tj
/F21 10 Tf
1 0 0 1 52.0 714.0 Tm
0.0000 Tw
(Create Pequel Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 702.0 Tm
0.4347 Tw
(Use your prefered text editor to create a pequel script ) Tj
/F22 10 Tf
0.4347 Tw
(scriptname.pql) Tj
/F20 10 Tf
0.4347 Tw
(. Syntax highlighting is available for) Tj
1 0 0 1 76.0 690.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(vim) Tj
/F20 10 Tf
0.0000 Tw
( with the ) Tj
/F23 10 Tf
0.0000 Tw
(pequel.vim) Tj
/F20 10 Tf
0.0000 Tw
( syntax file \(in ) Tj
/F22 10 Tf
0.0000 Tw
(vim/sytnax) Tj
/F20 10 Tf
0.0000 Tw
(\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 678.0 Tm
0.1400 Tw
(All that is required is to fill in, at least, the ) Tj
/F23 10 Tf
0.1400 Tw
(output section) Tj
/F20 10 Tf
0.1400 Tw
(, or specify ) Tj
/F23 10 Tf
0.1400 Tw
(transfer) Tj
/F20 10 Tf
0.1400 Tw
( option. The ) Tj
/F23 10 Tf
0.1400 Tw
(transfer) Tj
/F20 10 Tf
0.1400 Tw
( option) Tj
1 0 0 1 76.0 666.0 Tm
1.4106 Tw
(will have the effect of copying all input field values to the output. This is effectively a ) Tj
/F22 10 Tf
1.4106 Tw
(straight through) Tj
/F20 10 Tf
1 0 0 1 76.0 654.0 Tm
0.0000 Tw
(process \217 the resulting output is identical to the input. ) Tj
/F10 7 Tf
1 0 0 1 100.0 625.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 617.4 Tm
0.0000 Tw
(     transfer ) Tj
/F10 7 Tf
1 0 0 1 100.0 600.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 592.2 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 583.8 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 575.4 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 567.0 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 558.6 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 550.2 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 541.8 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 533.4 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 516.6 Tm
0.0000 Tw
( output section ) Tj
/F21 10 Tf
1 0 0 1 52.0 495.6 Tm
0.0000 Tw
(Check The Pequel Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 483.6 Tm
3.5671 Tw
(Do a syntax check on the script by using the Pequel ) Tj
/F10 10 Tf
3.5671 Tw
(-c) Tj
/F20 10 Tf
3.5671 Tw
( option. This should return the words) Tj
1 0 0 1 76.0 471.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
() Tj
/F12 10 Tf
0.0000 Tw
(scriptname.pql) Tj
/F10 10 Tf
0.0000 Tw
( Syntax OK) Tj
/F20 10 Tf
0.0000 Tw
(.  ) Tj
/F20 10 Tf
1 0 0 1 100.0 447.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel -c scriptname.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 100.0 435.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(scriptname.pql Syntax OK) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F21 10 Tf
1 0 0 1 52.0 393.6 Tm
0.0000 Tw
(Run The Pequel Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 381.6 Tm
0.0000 Tw
(If syntax check is ok, run the script \217 the ) Tj
/F22 10 Tf
0.0000 Tw
(sample.data) Tj
/F20 10 Tf
0.0000 Tw
( data file in the ) Tj
/F22 10 Tf
0.0000 Tw
(examples) Tj
/F20 10 Tf
0.0000 Tw
( directory can be used: ) Tj
/F20 10 Tf
1 0 0 1 100.0 357.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel scriptname.pql) Tj
/F20 10 Tf
0.0000 Tw
( < ) Tj
/F22 10 Tf
0.0000 Tw
(inputdata) Tj
/F20 10 Tf
0.0000 Tw
( > ) Tj
/F22 10 Tf
0.0000 Tw
(outputdata) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 315.6 Tm
0.0000 Tw
(Select A Subset Of Records ) Tj
/F20 10 Tf
1 0 0 1 76.0 303.6 Tm
1.0089 Tw
(We next do something ) Tj
/F22 10 Tf
1.0089 Tw
(usefull) Tj
/F20 10 Tf
1.0089 Tw
( to transform the input data. Create a filter to output a subset of records,) Tj
1 0 0 1 76.0 291.6 Tm
1.9200 Tw
(consisting of records which have ) Tj
/F10 10 Tf
1.9200 Tw
(LOCATION) Tj
/F20 10 Tf
1.9200 Tw
( starting with ) Tj
/F10 10 Tf
1.9200 Tw
(10) Tj
/F20 10 Tf
1.9200 Tw
(. The filter example uses a Perl regular) Tj
1 0 0 1 76.0 279.6 Tm
1.6680 Tw
(expression to match the ) Tj
/F10 10 Tf
1.6680 Tw
(LOCATION) Tj
/F20 10 Tf
1.6680 Tw
( field content with the Perl regular expression ) Tj
/F10 10 Tf
1.6680 Tw
(=~ /^10/) Tj
/F20 10 Tf
1.6680 Tw
(. This is) Tj
1 0 0 1 76.0 267.6 Tm
0.0000 Tw
(specified in the ) Tj
/F23 10 Tf
0.0000 Tw
(filter) Tj
/F20 10 Tf
0.0000 Tw
( section. Check and run the updated script as instructed above: ) Tj
/F10 7 Tf
1 0 0 1 100.0 239.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 231.0 Tm
0.0000 Tw
(     transfer ) Tj
/F10 7 Tf
1 0 0 1 100.0 214.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 205.8 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 197.4 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 189.0 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 180.6 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 172.2 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 163.8 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 155.4 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 147.0 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 130.2 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 121.8 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F21 10 Tf
1 0 0 1 52.0 100.8 Tm
0.0000 Tw
(Create New Derived Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 88.8 Tm
0.1365 Tw
(Create additional, derived fields based on the other input fields. In our example, two new fields are added) Tj
1 0 0 1 76.0 76.8 Tm
0.2220 Tw
() Tj
/F10 10 Tf
0.2220 Tw
(COST_VALUE) Tj
/F20 10 Tf
0.2220 Tw
( and ) Tj
/F10 10 Tf
0.2220 Tw
(SALES_VALUE) Tj
/F20 10 Tf
0.2220 Tw
(. Derived fields must be specified in the input section ) Tj
/F22 10 Tf
0.2220 Tw
(after) Tj
/F20 10 Tf
0.2220 Tw
( the last input) Tj
1 0 0 1 76.0 64.8 Tm
0.5606 Tw
(field. The derived field name is followed by the ) Tj
/F10 10 Tf
0.5606 Tw
(=>) Tj
/F20 10 Tf
0.5606 Tw
( operator, and a calculation expression. Derived fields) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(4) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
31 0 obj
6066
endobj
32 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F12 12 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
33 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 32 0 R
/Contents 30 0 R
>>
endobj
34 0 obj
<<
/Length 35 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
(will also be output when the ) Tj
/F23 10 Tf
0.0000 Tw
(transfer) Tj
/F20 10 Tf
0.0000 Tw
( options is specified. ) Tj
/F10 7 Tf
1 0 0 1 100.0 751.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 743.4 Tm
0.0000 Tw
(     transfer ) Tj
/F10 7 Tf
1 0 0 1 100.0 726.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 718.2 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 709.8 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 701.4 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 693.0 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 684.6 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 676.2 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 667.8 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 659.4 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 651.0 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 642.6 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
1 0 0 1 100.0 625.8 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 617.4 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 600.6 Tm
0.0000 Tw
( output section ) Tj
/F21 10 Tf
1 0 0 1 52.0 579.6 Tm
0.0000 Tw
(Select Which Fields To Output ) Tj
/F20 10 Tf
1 0 0 1 76.0 567.6 Tm
2.1800 Tw
(In the above examples, the output record has the same \(field\) format as the input record, plus the) Tj
1 0 0 1 76.0 555.6 Tm
0.2841 Tw
(additional derived fields. In the following example we select which fields to output, and their order, on the) Tj
1 0 0 1 76.0 543.6 Tm
1.1676 Tw
(output record. To do this we need to remove the ) Tj
/F23 10 Tf
1.1676 Tw
(transfer) Tj
/F20 10 Tf
1.1676 Tw
( option, and create the ) Tj
/F23 10 Tf
1.1676 Tw
(output section) Tj
/F20 10 Tf
1.1676 Tw
(. The) Tj
1 0 0 1 76.0 531.6 Tm
1.7256 Tw
(output fields ) Tj
/F10 10 Tf
1.7256 Tw
(PRODUCT) Tj
/F20 10 Tf
1.7256 Tw
(, ) Tj
/F10 10 Tf
1.7256 Tw
(LOCATION) Tj
/F20 10 Tf
1.7256 Tw
(, ) Tj
/F10 10 Tf
1.7256 Tw
(DESCRIPTION) Tj
/F20 10 Tf
1.7256 Tw
(, ) Tj
/F10 10 Tf
1.7256 Tw
(QUANTITY) Tj
/F20 10 Tf
1.7256 Tw
(, ) Tj
/F10 10 Tf
1.7256 Tw
(COST_VALUE) Tj
/F20 10 Tf
1.7256 Tw
(, and ) Tj
/F10 10 Tf
1.7256 Tw
(SALES_VALUE) Tj
/F20 10 Tf
1.7256 Tw
( are) Tj
1 0 0 1 76.0 519.6 Tm
0.4839 Tw
(specified to create a new output format. In this example, all the output field names have the same name) Tj
1 0 0 1 76.0 507.6 Tm
0.0000 Tw
(as the input fields. ) Tj
/F10 7 Tf
1 0 0 1 100.0 479.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 462.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 454.2 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 445.8 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 437.4 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 429.0 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 420.6 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 412.2 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 403.8 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 395.4 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 387.0 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 378.6 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
1 0 0 1 100.0 361.8 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 353.4 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 336.6 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 328.2 Tm
0.0000 Tw
(     string PRODUCT      PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 319.8 Tm
0.0000 Tw
(     string LOCATION     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 311.4 Tm
0.0000 Tw
(     string DESCRIPTION  DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 303.0 Tm
0.0000 Tw
(     numeric QUANTITY    QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 294.6 Tm
0.0000 Tw
(     decimal COST_VALUE  COST_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 286.2 Tm
0.0000 Tw
(     decimal SALES_VALUE SALES_VALUE ) Tj
/F21 10 Tf
1 0 0 1 52.0 265.2 Tm
0.0000 Tw
(Group Records For Analysis ) Tj
/F20 10 Tf
1 0 0 1 76.0 253.2 Tm
0.9715 Tw
(Records with similar characteristics can be grouped together, and aggregations can then be performed) Tj
1 0 0 1 76.0 241.2 Tm
1.1980 Tw
(on the grouped records' data. The following example groups the records by ) Tj
/F10 10 Tf
1.1980 Tw
(LOCATION) Tj
/F20 10 Tf
1.1980 Tw
(, and ) Tj
/F22 10 Tf
1.1980 Tw
(sums) Tj
/F20 10 Tf
1.1980 Tw
( the) Tj
1 0 0 1 76.0 229.2 Tm
0.4379 Tw
() Tj
/F10 10 Tf
0.4379 Tw
(COST_VALUE) Tj
/F20 10 Tf
0.4379 Tw
( and ) Tj
/F10 10 Tf
0.4379 Tw
(SALES_VALUE) Tj
/F20 10 Tf
0.4379 Tw
( fields within each group. Grouping is activated by creating a ) Tj
/F23 10 Tf
0.4379 Tw
(group by) Tj
/F20 10 Tf
1 0 0 1 76.0 217.2 Tm
1.2083 Tw
(section. Input data must also be sorted on the grouping field\(s\). If the data is not pre-sorted then this) Tj
1 0 0 1 76.0 205.2 Tm
0.3300 Tw
(needs to be done in the script by creating a ) Tj
/F23 10 Tf
0.3300 Tw
(sort by) Tj
/F20 10 Tf
0.3300 Tw
( section. Alternatively, by specifying the ) Tj
/F23 10 Tf
0.3300 Tw
(hash) Tj
/F20 10 Tf
0.3300 Tw
( option,) Tj
1 0 0 1 76.0 193.2 Tm
0.0000 Tw
(the input data need not be sorted. ) Tj
/F10 7 Tf
1 0 0 1 100.0 165.0 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 148.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 139.8 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 131.4 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 123.0 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 114.6 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 106.2 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 97.8 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 89.4 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 81.0 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 72.6 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 64.2 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(5) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
35 0 obj
6402
endobj
36 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
37 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 36 0 R
/Contents 34 0 R
>>
endobj
38 0 obj
<<
/Length 39 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F10 7 Tf
1 0 0 1 100.0 771.6 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 763.2 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 746.4 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 100.0 738.0 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 721.2 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 100.0 712.8 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 696.0 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 687.6 Tm
0.0000 Tw
(     string LOCATION     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 679.2 Tm
0.0000 Tw
(     string PRODUCT      PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 670.8 Tm
0.0000 Tw
(     string DESCRIPTION  DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 662.4 Tm
0.0000 Tw
(     numeric QUANTITY    QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 654.0 Tm
0.0000 Tw
(     decimal COST_VALUE  sum COST_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 645.6 Tm
0.0000 Tw
(     decimal SALES_VALUE sum SALES_VALUE ) Tj
/F21 10 Tf
1 0 0 1 52.0 624.6 Tm
0.0000 Tw
(Select A Subset Of Grouped Records ) Tj
/F20 10 Tf
1 0 0 1 76.0 612.6 Tm
0.3142 Tw
(A subset of groups can be select by creating a ) Tj
/F23 10 Tf
0.3142 Tw
(having) Tj
/F20 10 Tf
0.3142 Tw
( section. The ) Tj
/F23 10 Tf
0.3142 Tw
(having) Tj
/F20 10 Tf
0.3142 Tw
( section is similar to the ) Tj
/F23 10 Tf
0.3142 Tw
(filter) Tj
/F20 10 Tf
1 0 0 1 76.0 600.6 Tm
1.2971 Tw
(section, but instead is applied to the aggregated group of records. In this example we will output only) Tj
1 0 0 1 76.0 588.6 Tm
0.4875 Tw
(records for locations which have a total ) Tj
/F10 10 Tf
0.4875 Tw
(SALES_VALUE) Tj
/F20 10 Tf
0.4875 Tw
( of ) Tj
/F10 10 Tf
0.4875 Tw
(1000) Tj
/F20 10 Tf
0.4875 Tw
( or more. Note that ) Tj
/F10 10 Tf
0.4875 Tw
(SALES_VALUE) Tj
/F20 10 Tf
0.4875 Tw
( in the) Tj
1 0 0 1 76.0 576.6 Tm
1.1731 Tw
() Tj
/F23 10 Tf
1.1731 Tw
(having) Tj
/F20 10 Tf
1.1731 Tw
( section refers to the output field \() Tj
/F10 10 Tf
1.1731 Tw
(sum SALES_VALUE) Tj
/F20 10 Tf
1.1731 Tw
(\) and not the input field with same name) Tj
1 0 0 1 76.0 564.6 Tm
0.9833 Tw
(\() Tj
/F10 10 Tf
0.9833 Tw
(SALES_PRICE * QUANTITY) Tj
/F20 10 Tf
0.9833 Tw
(\). The ) Tj
/F23 10 Tf
0.9833 Tw
(having) Tj
/F20 10 Tf
0.9833 Tw
( section gives preference to output fields when interpreting) Tj
1 0 0 1 76.0 552.6 Tm
0.0000 Tw
(field names. ) Tj
/F10 7 Tf
1 0 0 1 100.0 524.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 507.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 499.2 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 490.8 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 482.4 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 474.0 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 465.6 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 457.2 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 448.8 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 440.4 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 432.0 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 423.6 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
1 0 0 1 100.0 406.8 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 398.4 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 381.6 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 100.0 373.2 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 356.4 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 100.0 348.0 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 331.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 322.8 Tm
0.0000 Tw
(     string LOCATION     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 314.4 Tm
0.0000 Tw
(     string PRODUCT      PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 306.0 Tm
0.0000 Tw
(     string DESCRIPTION  DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 297.6 Tm
0.0000 Tw
(     numeric QUANTITY    QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 289.2 Tm
0.0000 Tw
(     decimal COST_VALUE  sum COST_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 280.8 Tm
0.0000 Tw
(     decimal SALES_VALUE sum SALES_VALUE ) Tj
/F10 7 Tf
1 0 0 1 100.0 264.0 Tm
0.0000 Tw
( having ) Tj
/F10 7 Tf
1 0 0 1 100.0 255.6 Tm
0.0000 Tw
(     SALES_VALUE >= 1000 ) Tj
/F21 10 Tf
1 0 0 1 52.0 234.6 Tm
0.0000 Tw
(Aggregation Based On Conditions ) Tj
/F20 10 Tf
1 0 0 1 76.0 222.6 Tm
0.6193 Tw
(Output fields can be aggregated conditionally. That is, the aggregation will only occur for records, within) Tj
1 0 0 1 76.0 210.6 Tm
0.9456 Tw
(the group, that evaluate the condition to ) Tj
/F22 10 Tf
0.9456 Tw
(true) Tj
/F20 10 Tf
0.9456 Tw
(. This is done by adding a ) Tj
/F10 10 Tf
0.9456 Tw
(where) Tj
/F20 10 Tf
0.9456 Tw
( clause to the aggregate) Tj
1 0 0 1 76.0 198.6 Tm
0 Tw
(function. In this example we create three new output fields ) Tj
/F10 10 Tf
0 Tw
(SALES_VALUE_RETAIL) Tj
/F20 10 Tf
0 Tw
(,) Tj
1 0 0 1 76.0 186.6 Tm
0.8436 Tw
() Tj
/F10 10 Tf
0.8436 Tw
(SALES_VALUE_WSALE) Tj
/F20 10 Tf
0.8436 Tw
( and ) Tj
/F10 10 Tf
0.8436 Tw
(SALES_VALUE_OTHER) Tj
/F20 10 Tf
0.8436 Tw
(. These fields will contain the sales value for records) Tj
1 0 0 1 76.0 174.6 Tm
0.0000 Tw
(within the group which have sales code equal to `R`, `W`, and other codes, respectively. ) Tj
/F10 7 Tf
1 0 0 1 100.0 146.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 129.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 121.2 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 112.8 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 104.4 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 96.0 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 87.6 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 79.2 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 70.8 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 62.4 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(6) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
39 0 obj
6193
endobj
40 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
41 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 40 0 R
/Contents 38 0 R
>>
endobj
42 0 obj
<<
/Length 43 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 100.0 771.6 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 763.2 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
1 0 0 1 100.0 746.4 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 738.0 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 721.2 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 100.0 712.8 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 696.0 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 100.0 687.6 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 670.8 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 662.4 Tm
0.0000 Tw
(     string LOCATION            LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 654.0 Tm
0.0000 Tw
(     string PRODUCT             PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 645.6 Tm
0.0000 Tw
(     string DESCRIPTION         DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 637.2 Tm
0.0000 Tw
(     numeric QUANTITY           QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 628.8 Tm
0.0000 Tw
(     decimal COST_VALUE         sum COST_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 620.4 Tm
0.0000 Tw
(     decimal SALES_VALUE        sum SALES_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 612.0 Tm
0.0000 Tw
(     decimal SALES_VALUE_RETAIL sum SALES_VALUE where SALES_CODE eq 'R', ) Tj
/F10 7 Tf
1 0 0 1 100.0 603.6 Tm
0.0000 Tw
(     decimal SALES_VALUE_WSALE  sum SALES_VALUE where SALES_CODE eq 'W', ) Tj
/F10 7 Tf
1 0 0 1 100.0 595.2 Tm
0.0000 Tw
(     decimal SALES_VALUE_OTHER  sum SALES_VALUE where SALES_CODE ne 'R' and SALES_CODE ne 'W' ) Tj
/F21 10 Tf
1 0 0 1 52.0 574.2 Tm
0.0000 Tw
(Derived Fields Based On Output Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 562.2 Tm
0.2978 Tw
(An output derived field, the calculation of which is based on ) Tj
/F22 10 Tf
0.2978 Tw
(output) Tj
/F20 10 Tf
0.2978 Tw
( fields, can be created by declaring an) Tj
1 0 0 1 76.0 550.2 Tm
0.0000 Tw
(output field with the ) Tj
/F10 10 Tf
0.0000 Tw
(=) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F22 10 Tf
0.0000 Tw
(calulation expression) Tj
/F20 10 Tf
0.0000 Tw
(.  ) Tj
/F10 7 Tf
1 0 0 1 100.0 522.0 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 505.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 496.8 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 488.4 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 480.0 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 471.6 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 463.2 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 454.8 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 446.4 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 438.0 Tm
0.0000 Tw
(     LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 429.6 Tm
0.0000 Tw
(     COST_VALUE => COST_PRICE * QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 421.2 Tm
0.0000 Tw
(     SALES_VALUE => SALES_PRICE * QUANTITY ) Tj
/F10 7 Tf
1 0 0 1 100.0 404.4 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 100.0 396.0 Tm
0.0000 Tw
(     LOCATION =~ /^10/ ) Tj
/F10 7 Tf
1 0 0 1 100.0 379.2 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 100.0 370.8 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 354.0 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 100.0 345.6 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 328.8 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 320.4 Tm
0.0000 Tw
(     string LOCATION            LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 312.0 Tm
0.0000 Tw
(     string PRODUCT             PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 303.6 Tm
0.0000 Tw
(     string DESCRIPTION         DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 295.2 Tm
0.0000 Tw
(     numeric QUANTITY           QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 286.8 Tm
0.0000 Tw
(     numeric TOTAL_QUANTITY     sum QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 278.4 Tm
0.0000 Tw
(     decimal COST_VALUE         sum COST_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 270.0 Tm
0.0000 Tw
(     decimal SALES_VALUE        sum SALES_VALUE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 261.6 Tm
0.0000 Tw
(     decimal SALES_VALUE_RETAIL sum SALES_VALUE where SALES_CODE eq 'R', ) Tj
/F10 7 Tf
1 0 0 1 100.0 253.2 Tm
0.0000 Tw
(     decimal SALES_VALUE_WSALE  sum SALES_VALUE where SALES_CODE eq 'W', ) Tj
/F10 7 Tf
1 0 0 1 100.0 244.8 Tm
0.0000 Tw
(     decimal SALES_VALUE_OTHER  sum SALES_VALUE where SALES_CODE ne 'R' and SALES_CODE ne 'W', ) Tj
/F10 7 Tf
1 0 0 1 100.0 236.4 Tm
0.0000 Tw
(     decimal AVG_SALES_VALUE    = SALES_VALUE / TOTAL_QUANTITY ) Tj
/F20 10 Tf
1 0 0 1 76.0 219.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(Note) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 207.6 Tm
1.4360 Tw
(In order to protect against a divide by zero exception, the ) Tj
/F10 10 Tf
1.4360 Tw
(AVG_SALES_VALUE) Tj
/F20 10 Tf
1.4360 Tw
( field would actually be) Tj
1 0 0 1 76.0 195.6 Tm
0.5219 Tw
(better declared as follows. This form uses a Perl ) Tj
/F22 10 Tf
0.5219 Tw
(alternation) Tj
/F20 10 Tf
0.5219 Tw
( ) Tj
/F10 10 Tf
0.5219 Tw
(?:) Tj
/F20 10 Tf
0.5219 Tw
( operator. If ) Tj
/F10 10 Tf
0.5219 Tw
(TOTAL_QUANTITY) Tj
/F20 10 Tf
0.5219 Tw
( is zero, it) Tj
1 0 0 1 76.0 183.6 Tm
2.8150 Tw
(will set ) Tj
/F10 10 Tf
2.8150 Tw
(AVG_SALES_VALUE) Tj
/F20 10 Tf
2.8150 Tw
( to zero, otherwise it will set ) Tj
/F10 10 Tf
2.8150 Tw
(AVG_SALES_VALUE) Tj
/F20 10 Tf
2.8150 Tw
( to ) Tj
/F10 10 Tf
2.8150 Tw
(SALES_VALUE /) Tj
1 0 0 1 76.0 171.6 Tm
0.0000 Tw
(TOTAL_QUANTITY) Tj
/F20 10 Tf
0.0000 Tw
(. Thus, the division will only be performed on non-zero ) Tj
/F10 10 Tf
0.0000 Tw
(TOTAL_QUANTITY) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F10 7 Tf
1 0 0 1 76.0 143.4 Tm
0.0000 Tw
(     decimal AVG_SALES_VALUE    = TOTAL_QUANTITY == 0 ? 0.0 : SALES_VALUE / TOTAL_QUANTITY ) Tj
/F21 10 Tf
1 0 0 1 52.0 122.4 Tm
0.0000 Tw
(Create Intermediate \(Transparent\) Output Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 110.4 Tm
1.3533 Tw
(In the previous example, supposing that the ) Tj
/F10 10 Tf
1.3533 Tw
(TOTAL_QUANTITY) Tj
/F20 10 Tf
1.3533 Tw
( field was not required in the output, it) Tj
1 0 0 1 76.0 98.4 Tm
1.5160 Tw
(could be made ) Tj
/F22 10 Tf
1.5160 Tw
(transparent) Tj
/F20 10 Tf
1.5160 Tw
( by declaring it with an ) Tj
/F22 10 Tf
1.5160 Tw
(underdash) Tj
/F20 10 Tf
1.5160 Tw
( \() Tj
/F10 10 Tf
1.5160 Tw
(_) Tj
/F20 10 Tf
1.5160 Tw
(\) prefix. Transparent output fields are) Tj
1 0 0 1 76.0 86.4 Tm
0.0000 Tw
(usefull for creating intermediate fields required for calculations. ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(7) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
43 0 obj
6719
endobj
44 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
45 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 44 0 R
/Contents 42 0 R
>>
endobj
46 0 obj
<<
/Length 47 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F10 7 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
(     numeric _TOTAL_QUANTITY    sum QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(     decimal AVG_SALES_VALUE    = SALES_VALUE / _TOTAL_QUANTITY ) Tj
/F21 10 Tf
1 0 0 1 52.0 750.6 Tm
0.0000 Tw
(Cleaning Data ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.6 Tm
2.1839 Tw
(Data can be cleaned in a variety of ways, and invalid records placed in a ) Tj
/F22 10 Tf
2.1839 Tw
(reject) Tj
/F20 10 Tf
2.1839 Tw
( file. The following) Tj
1 0 0 1 76.0 726.6 Tm
0.8389 Tw
(example determines the validity of a record by a\) the length of certain fields, and b\) the content of field) Tj
1 0 0 1 76.0 714.6 Tm
0.8087 Tw
() Tj
/F10 10 Tf
0.8087 Tw
(QUANTITY) Tj
/F20 10 Tf
0.8087 Tw
(. The ) Tj
/F10 10 Tf
0.8087 Tw
(PRODUCT) Tj
/F20 10 Tf
0.8087 Tw
( and ) Tj
/F10 10 Tf
0.8087 Tw
(LOCATION) Tj
/F20 10 Tf
0.8087 Tw
( fields must be at least ) Tj
/F10 10 Tf
0.8087 Tw
(8) Tj
/F20 10 Tf
0.8087 Tw
( and ) Tj
/F10 10 Tf
0.8087 Tw
(2) Tj
/F20 10 Tf
0.8087 Tw
( characters long, respectively;) Tj
1 0 0 1 76.0 702.6 Tm
0.2740 Tw
(the ) Tj
/F10 10 Tf
0.2740 Tw
(QUANTITY) Tj
/F20 10 Tf
0.2740 Tw
( field must contain only numeric digits, decimal point and minus sign. The rejected records) Tj
1 0 0 1 76.0 690.6 Tm
0.0000 Tw
(will be placed in the reject file called ) Tj
/F22 10 Tf
0.0000 Tw
(scriptname) Tj
/F20 10 Tf
0.0000 Tw
(.reject ) Tj
/F10 7 Tf
1 0 0 1 100.0 662.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 654.0 Tm
0.0000 Tw
(     transfer ) Tj
/F10 7 Tf
1 0 0 1 100.0 637.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 628.8 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 620.4 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 612.0 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 603.6 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 595.2 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 586.8 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 578.4 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 570.0 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 553.2 Tm
0.0000 Tw
( reject ) Tj
/F10 7 Tf
1 0 0 1 100.0 544.8 Tm
0.0000 Tw
(     length\(PRODUCT\) < 8 || length\(LOCATION\) < 2, ) Tj
/F10 7 Tf
1 0 0 1 100.0 536.4 Tm
0.0000 Tw
(     QUANTITY !~ /^[0-9\\.\\-]+$/ ) Tj
/F21 10 Tf
1 0 0 1 52.0 515.4 Tm
0.0000 Tw
(Converting Data ) Tj
/F20 10 Tf
1 0 0 1 76.0 503.4 Tm
0.5094 Tw
(Any sort of data conversion can be performed. These include, converting from one data type to another,) Tj
1 0 0 1 76.0 491.4 Tm
0.6129 Tw
(reformatting, case change, splitting a field into two or more fields, combining two or more fields into one) Tj
1 0 0 1 76.0 479.4 Tm
3.8386 Tw
(field, converting date fields from one date format to another, padding, etc. The following script) Tj
1 0 0 1 76.0 467.4 Tm
0.0000 Tw
(demonstrates these data conversions. ) Tj
/F10 7 Tf
1 0 0 1 100.0 439.2 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 100.0 422.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 100.0 414.0 Tm
0.0000 Tw
(     PRODUCT, ) Tj
/F10 7 Tf
1 0 0 1 100.0 405.6 Tm
0.0000 Tw
(     COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 397.2 Tm
0.0000 Tw
(     DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 100.0 388.8 Tm
0.0000 Tw
(     SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 380.4 Tm
0.0000 Tw
(     SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 372.0 Tm
0.0000 Tw
(     QUANTITY, ) Tj
/F10 7 Tf
1 0 0 1 100.0 363.6 Tm
0.0000 Tw
(     SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 100.0 355.2 Tm
0.0000 Tw
(     LOCATION ) Tj
/F10 7 Tf
1 0 0 1 100.0 338.4 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 100.0 330.0 Tm
0.0000 Tw
(     string PRODUCT_U     = &uc\(PRODUCT\), // Convert case to upper ) Tj
/F10 7 Tf
1 0 0 1 100.0 321.6 Tm
0.0000 Tw
(     string DESCRIPTION_U = &uc\(DESCRIPTION\), // Convert case to upper ) Tj
/F10 7 Tf
1 0 0 1 100.0 313.2 Tm
0.0000 Tw
(     string PCODE_1       = &substr\(PRODUCT,0,2\), // Split field ) Tj
/F10 7 Tf
1 0 0 1 100.0 304.8 Tm
0.0000 Tw
(     string PCODE_2       = &substr\(PRODUCT,2,4\), //  "" ) Tj
/F10 7 Tf
1 0 0 1 100.0 296.4 Tm
0.0000 Tw
(     string ANALYSIS_1    = SALES_CODE . sprintf\("%08d", COST_PRICE\), // Combine fields ) Tj
/F10 7 Tf
1 0 0 1 100.0 288.0 Tm
0.0000 Tw
(     string S_QUANTITY    = sprintf\("%08d", QUANTITY\) // Reformat/Convert field ) Tj
/F10 7 Tf
1 0 0 1 100.0 279.6 Tm
0.0000 Tw
(     string NEW_PRODUCT   = PCODE_2 . PCODE_1 . &substr\(PRODUCT,6\) // Reformat ) Tj
/F10 7 Tf
1 0 0 1 100.0 271.2 Tm
0.0000 Tw
(     decimal SALES_PRICE  SALES_PRICE // no change ) Tj
/F10 7 Tf
1 0 0 1 100.0 262.8 Tm
0.0000 Tw
(     decimal SALES_CODE   SALES_CODE  // no change ) Tj
/F10 7 Tf
1 0 0 1 100.0 254.4 Tm
0.0000 Tw
(     string LOCATION      LOCATION // no change ) Tj
/F21 10 Tf
1 0 0 1 52.0 233.4 Tm
0.0000 Tw
(Using Date Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 221.4 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 191.4 Tm
0.0000 Tw
(Counting Records ) Tj
/F20 10 Tf
1 0 0 1 76.0 179.4 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 149.4 Tm
0.0000 Tw
(Extracting ) Tj
/F22 10 Tf
0.0000 Tw
(n) Tj
/F21 10 Tf
0.0000 Tw
( Distinct Values For A Field ) Tj
/F20 10 Tf
1 0 0 1 76.0 137.4 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 107.4 Tm
0.0000 Tw
(Tabulating Data ) Tj
/F20 10 Tf
1 0 0 1 76.0 95.4 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(8) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
47 0 obj
5610
endobj
48 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
49 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 48 0 R
/Contents 46 0 R
>>
endobj
50 0 obj
<<
/Length 51 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
(Statistical Analysis ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 738.0 Tm
0.0000 Tw
(Declaring And Using Tables For Value Lookup ) Tj
/F20 10 Tf
1 0 0 1 76.0 726.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 696.0 Tm
0.0000 Tw
(Using External Tables ) Tj
/F20 10 Tf
1 0 0 1 76.0 684.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 654.0 Tm
0.0000 Tw
(Using Date Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 642.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 612.0 Tm
0.0000 Tw
(Create A Summary Report ) Tj
/F20 10 Tf
1 0 0 1 76.0 600.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 570.0 Tm
0.0000 Tw
(Using Array Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 558.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 528.0 Tm
0.0000 Tw
(Database Tables: oracle ) Tj
/F20 10 Tf
1 0 0 1 76.0 516.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 486.0 Tm
0.0000 Tw
(Database Tables: sqlite ) Tj
/F20 10 Tf
1 0 0 1 76.0 474.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 444.0 Tm
0.0000 Tw
(Merg Database Tables ) Tj
/F20 10 Tf
1 0 0 1 76.0 432.0 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 390.0 Tm
0.0000 Tw
(View The Generated Perl Code ) Tj
/F20 10 Tf
1 0 0 1 76.0 378.0 Tm
0.0000 Tw
(To view the generated Perl code use the Pequel ) Tj
/F10 10 Tf
0.0000 Tw
(-viewcode) Tj
/F20 10 Tf
0.0000 Tw
( option: ) Tj
/F20 10 Tf
1 0 0 1 100.0 354.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel -viewcode scriptname.pql | more) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 312.0 Tm
0.0000 Tw
(Dump The Generated Perl Code ) Tj
/F20 10 Tf
1 0 0 1 76.0 300.0 Tm
0.7125 Tw
(To dump the generated Perl code use the Pequel ) Tj
/F10 10 Tf
0.7125 Tw
(-dumpcode) Tj
/F20 10 Tf
0.7125 Tw
( option. This will save the generated Perl) Tj
1 0 0 1 76.0 288.0 Tm
0.0450 Tw
(program in the file with the name ) Tj
/F22 10 Tf
0.0450 Tw
(script_name) Tj
/F20 10 Tf
0.0450 Tw
() Tj
/F23 10 Tf
0.0450 Tw
(.2.code) Tj
/F20 10 Tf
0.0450 Tw
(. So, if your script is called ) Tj
/F22 10 Tf
0.0450 Tw
(myscript.pql) Tj
/F20 10 Tf
0.0450 Tw
( the resulting) Tj
1 0 0 1 76.0 276.0 Tm
0.0000 Tw
(generated Perl program will be saved in the the file ) Tj
/F22 10 Tf
0.0000 Tw
(myscript.pql.2.code) Tj
/F20 10 Tf
0.0000 Tw
(, in the same path: ) Tj
/F20 10 Tf
1 0 0 1 100.0 252.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel -dumpcode scriptname.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 210.0 Tm
0.0000 Tw
(Produce The Script Specification Document ) Tj
/F20 10 Tf
1 0 0 1 76.0 198.0 Tm
1.1329 Tw
(Use the Pequel ) Tj
/F10 10 Tf
1.1329 Tw
(-pequeldoc pdf) Tj
/F20 10 Tf
1.1329 Tw
( option to produce a presentation script specification for the Pequel) Tj
1 0 0 1 76.0 186.0 Tm
0.5755 Tw
(script. The generated pdf document will be saved in a file with the same name as the script but with the) Tj
1 0 0 1 76.0 174.0 Tm
0.0000 Tw
(file extension changed from ) Tj
/F22 10 Tf
0.0000 Tw
(pql) Tj
/F20 10 Tf
0.0000 Tw
( to ) Tj
/F22 10 Tf
0.0000 Tw
(pdf) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 100.0 150.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel scriptname.pql -pequeldoc pdf) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 126.0 Tm
0.0000 Tw
(Use the ) Tj
/F10 10 Tf
0.0000 Tw
(-detail) Tj
/F20 10 Tf
0.0000 Tw
( option to include the generated code in the document. ) Tj
/F20 10 Tf
1 0 0 1 100.0 102.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel scriptname.pql -pequeldoc pdf -detail) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(9) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
51 0 obj
3791
endobj
52 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
53 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 52 0 R
/Contents 50 0 R
>>
endobj
54 0 obj
<<
/Length 55 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
(Display Summary Information For Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
(This options will display the parsed details from the script in a summarised format. ) Tj
/F20 10 Tf
1 0 0 1 100.0 744.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(pequel scriptname.pql -list) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(10) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
55 0 obj
605
endobj
56 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
57 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 56 0 R
/Contents 54 0 R
>>
endobj
58 0 obj
<<
/Length 59 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(COMMAND LINE OPTIONS ) Tj
/F20 10 Tf
1 0 0 1 76.0 732.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217prefix, \217prefix_path) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 720.7 Tm
0.0000 Tw
(Prefix for filenames directory path ) Tj
/F20 10 Tf
1 0 0 1 76.0 694.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217verbose, \217ver) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 682.3 Tm
0.0000 Tw
(Display progress counter ) Tj
/F20 10 Tf
1 0 0 1 76.0 655.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217noverbose, \217silent, \217quite) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 643.9 Tm
0.0000 Tw
(Do not progress counter ) Tj
/F20 10 Tf
1 0 0 1 76.0 617.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217input_file, \217is, \217if, \217i) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 605.5 Tm
0.0000 Tw
(Input data filename ) Tj
/F20 10 Tf
1 0 0 1 76.0 579.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217usage) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 567.1 Tm
0.0000 Tw
(Display command usage description ) Tj
/F20 10 Tf
1 0 0 1 76.0 540.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217output_file, \217os, \217of, \217o) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 528.7 Tm
0.0000 Tw
(Output data filename ) Tj
/F20 10 Tf
1 0 0 1 76.0 502.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217script_name, \217script, \217s, \217pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 490.3 Tm
0.0000 Tw
(Script filename ) Tj
/F20 10 Tf
1 0 0 1 76.0 463.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217header) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 451.9 Tm
0.0000 Tw
(Write header record to output. ) Tj
/F20 10 Tf
1 0 0 1 76.0 425.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217pequeldoc, \217doc) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 413.5 Tm
0.0000 Tw
(Generate pod / pdf pequel script Reference Guide. ) Tj
/F20 10 Tf
1 0 0 1 76.0 387.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217viewcode, \217vc) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 375.1 Tm
0.0000 Tw
(Display the generated Perl code for pequel script ) Tj
/F20 10 Tf
1 0 0 1 76.0 348.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217dumpcode, \217dc, \217diag) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 336.7 Tm
0.0000 Tw
(Dump the generated Perl code for pequel script ) Tj
/F20 10 Tf
1 0 0 1 76.0 310.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217syntax_check, \217c, \217check) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 298.3 Tm
0.0000 Tw
(Check the pequel script for syntax errors ) Tj
/F20 10 Tf
1 0 0 1 76.0 271.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217version, \217v) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 259.9 Tm
0.0000 Tw
(Display Pequel Version information ) Tj
/F20 10 Tf
1 0 0 1 76.0 233.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(\217table_info, \217ti) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 221.5 Tm
0.0000 Tw
(Display Table information for all tables declared in the pequel script ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(11) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
59 0 obj
3357
endobj
60 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F23 17 0 R
>>
>>
endobj
61 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 60 0 R
/Contents 58 0 R
>>
endobj
62 0 obj
<<
/Length 63 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(PEQUEL LANGUAGE REFERENCE ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.2694 Tw
(A Pequel script is divided into sections. Each section is delimited by a section name, which appears on a) Tj
1 0 0 1 76.0 723.6 Tm
1.1039 Tw
(line on its own, followed by a list of statements/items. Each ) Tj
/F22 10 Tf
1.1039 Tw
(item) Tj
/F20 10 Tf
1.1039 Tw
( line must be terminated by a newline) Tj
1 0 0 1 76.0 711.6 Tm
2.1544 Tw
(comma \(or both\). In order to split an ) Tj
/F22 10 Tf
2.1544 Tw
(item) Tj
/F20 10 Tf
2.1544 Tw
( line into mutiple lines \(for better readability\) use the line) Tj
1 0 0 1 76.0 699.6 Tm
0.0000 Tw
(continuation character ) Tj
/F10 10 Tf
0.0000 Tw
(\\) Tj
/F20 10 Tf
0.0000 Tw
(.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 675.6 Tm
0.5119 Tw
(Pequel is ) Tj
/F22 10 Tf
0.5119 Tw
(event) Tj
/F20 10 Tf
0.5119 Tw
( driven. Each section within an Pequel script describes an event. For example, the ) Tj
/F23 10 Tf
0.5119 Tw
(input) Tj
1 0 0 1 76.0 663.6 Tm
1.7700 Tw
(section) Tj
/F20 10 Tf
1.7700 Tw
( is activated whenever an input record is read; the ) Tj
/F23 10 Tf
1.7700 Tw
(output section) Tj
/F20 10 Tf
1.7700 Tw
( is activated whenever an) Tj
1 0 0 1 76.0 651.6 Tm
0.0000 Tw
(aggregation is performed.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 627.6 Tm
0.2013 Tw
(The sections must appear in the order described below. A minimal script must contain ) Tj
/F23 10 Tf
0.2013 Tw
(input section) Tj
/F20 10 Tf
0.2013 Tw
( and) Tj
1 0 0 1 76.0 615.6 Tm
1.3993 Tw
() Tj
/F23 10 Tf
1.3993 Tw
(output section) Tj
/F20 10 Tf
1.3993 Tw
(, or, ) Tj
/F23 10 Tf
1.3993 Tw
(input section) Tj
/F20 10 Tf
1.3993 Tw
( and ) Tj
/F23 10 Tf
1.3993 Tw
(transfer) Tj
/F20 10 Tf
1.3993 Tw
( option. All other sections are optional, and need only) Tj
1 0 0 1 76.0 603.6 Tm
0.0000 Tw
(appear in the Pequel script if they contain statements.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 579.6 Tm
1.8833 Tw
(The main sections are ) Tj
/F23 10 Tf
1.8833 Tw
(input section) Tj
/F20 10 Tf
1.8833 Tw
( and ) Tj
/F23 10 Tf
1.8833 Tw
(output section) Tj
/F20 10 Tf
1.8833 Tw
(. The ) Tj
/F23 10 Tf
1.8833 Tw
(input section) Tj
/F20 10 Tf
1.8833 Tw
( defines the format, in) Tj
1 0 0 1 76.0 567.6 Tm
1.2419 Tw
(fields, of the input data stream. It can also define new calculated \(derived\) fields. The ) Tj
/F23 10 Tf
1.2419 Tw
(output section) Tj
/F20 10 Tf
1 0 0 1 76.0 555.6 Tm
2.7356 Tw
(defines the format of the output data stream. The ) Tj
/F23 10 Tf
2.7356 Tw
(output section) Tj
/F20 10 Tf
2.7356 Tw
( is required in order to perform) Tj
1 0 0 1 76.0 543.6 Tm
1.2193 Tw
(aggregation. The ) Tj
/F23 10 Tf
1.2193 Tw
(output section) Tj
/F20 10 Tf
1.2193 Tw
( will consist of input fields, aggregations based on grouping the input) Tj
1 0 0 1 76.0 531.6 Tm
0.0000 Tw
(records, and new calculated fields. ) Tj
/F20 10 Tf
1 0 0 1 76.0 507.6 Tm
0.1469 Tw
(Input sorting can be specified with the ) Tj
/F23 10 Tf
0.1469 Tw
(sort by) Tj
/F20 10 Tf
0.1469 Tw
( section. Break processing \(grouping\) can be specified with) Tj
1 0 0 1 76.0 495.6 Tm
0.6129 Tw
(the ) Tj
/F23 10 Tf
0.6129 Tw
(group by) Tj
/F20 10 Tf
0.6129 Tw
( section. Input filtering is specified with the ) Tj
/F23 10 Tf
0.6129 Tw
(filter) Tj
/F20 10 Tf
0.6129 Tw
( section. Groups of records can be filtered) Tj
1 0 0 1 76.0 483.6 Tm
0.0000 Tw
(with the ) Tj
/F23 10 Tf
0.0000 Tw
(having) Tj
/F20 10 Tf
0.0000 Tw
( section. ) Tj
/F20 10 Tf
1 0 0 1 76.0 459.6 Tm
1.8131 Tw
(A powerfull feature of Pequel is its built-in tables feature. Tables, consisting of key and value pairs.) Tj
1 0 0 1 76.0 447.6 Tm
1.3306 Tw
(Tables are used to perform merge and joins on multiple input datasources. They can also be used to) Tj
1 0 0 1 76.0 435.6 Tm
0.0000 Tw
(access external data for cross referencing, and value lookups.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 411.6 Tm
0.0000 Tw
(Pequel also handles a number of date field formats. The ) Tj
/F23 10 Tf
0.0000 Tw
(&date\(\)) Tj
/F20 10 Tf
0.0000 Tw
( macro provides access to date fields.  ) Tj
/F21 10 Tf
1 0 0 1 52.0 369.6 Tm
0.0000 Tw
(Comments ) Tj
/F20 10 Tf
1 0 0 1 76.0 357.6 Tm
0.4047 Tw
(Any text following and including the ) Tj
/F10 10 Tf
0.4047 Tw
(#) Tj
/F20 10 Tf
0.4047 Tw
( symbol is considered as comment text. C style comments \() Tj
/F10 10 Tf
0.4047 Tw
(//) Tj
/F20 10 Tf
0.4047 Tw
( and) Tj
1 0 0 1 76.0 345.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(/* ... */) Tj
/F20 10 Tf
0.0000 Tw
(\) are also supported if your system provides the ) Tj
/F23 10 Tf
0.0000 Tw
(cpp) Tj
/F20 10 Tf
0.0000 Tw
( preprocessor. ) Tj
/F21 10 Tf
1 0 0 1 52.0 303.6 Tm
0.0000 Tw
(Pre Processor ) Tj
/F20 10 Tf
1 0 0 1 76.0 291.6 Tm
0.9560 Tw
(If your system provides the ) Tj
/F23 10 Tf
0.9560 Tw
(cpp) Tj
/F20 10 Tf
0.9560 Tw
( preprocessor, your Pequel script may include any C/C++ style macros) Tj
1 0 0 1 76.0 279.6 Tm
0.0000 Tw
(and defines. ) Tj
/F21 10 Tf
1 0 0 1 52.0 237.6 Tm
0.0000 Tw
(OPTIONS SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 225.6 Tm
2.0647 Tw
(This section is used to declare various options described in detail below. Options define the overall) Tj
1 0 0 1 76.0 213.6 Tm
0.0000 Tw
(character of the data transformation. ) Tj
/F20 10 Tf
1 0 0 1 76.0 187.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 175.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(options) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 163.2 Tm
0.0000 Tw
(    <option> [ ) Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<arg>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ] [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 136.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Example) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 120.6 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 112.2 Tm
0.0000 Tw
(     input_delimiter\(\\s+\), # one or more space\(s\) delimit input fields. ) Tj
/F10 7 Tf
1 0 0 1 76.0 103.8 Tm
0.0000 Tw
(     verbose\(100000\), # print progress on every 100000'th input record. ) Tj
/F10 7 Tf
1 0 0 1 76.0 95.4 Tm
0.0000 Tw
(     optimize, ) Tj
/F10 7 Tf
1 0 0 1 76.0 87.0 Tm
0.0000 Tw
(     varnames, ) Tj
/F10 7 Tf
1 0 0 1 76.0 78.6 Tm
0.0000 Tw
(     default_date_type\(DD/MM/YY\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 70.2 Tm
0.0000 Tw
(     nonulls, ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(12) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
63 0 obj
6513
endobj
64 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
65 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 64 0 R
/Contents 62 0 R
>>
endobj
66 0 obj
<<
/Length 67 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(     diag ) Tj
/F20 10 Tf
1 0 0 1 76.0 757.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(verbose) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 745.3 Tm
1.2607 Tw
(Set the verbose option to display progress information to STDERR during the transform run. Requires) Tj
1 0 0 1 76.0 733.3 Tm
1.2507 Tw
(one parameter. This will instruct Pequel to display a counter message on specified number of records) Tj
1 0 0 1 76.0 721.3 Tm
0.0000 Tw
(read from input. ) Tj
/F20 10 Tf
1 0 0 1 76.0 694.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(input_delimiter) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 682.9 Tm
0.7000 Tw
(Specify the character that is used to delimit columns in the input data stream. This is usually the pipe ) Tj
/F10 10 Tf
0.7000 Tw
(|) Tj
/F20 10 Tf
1 0 0 1 76.0 670.9 Tm
0.4975 Tw
(character, but can be any character including the space character. For multiple spaces use ) Tj
/F10 10 Tf
0.4975 Tw
(\\s+) Tj
/F20 10 Tf
0.4975 Tw
(, and for) Tj
1 0 0 1 76.0 658.9 Tm
2.2363 Tw
(multiple tabs use ) Tj
/F10 10 Tf
2.2363 Tw
(\\t+) Tj
/F20 10 Tf
2.2363 Tw
(. This input delimiter will default to the pipe character if ) Tj
/F22 10 Tf
2.2363 Tw
(input_delimiter) Tj
/F20 10 Tf
2.2363 Tw
( is not) Tj
1 0 0 1 76.0 646.9 Tm
0.0000 Tw
(specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 620.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(output_delimiter) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 608.5 Tm
0.6776 Tw
(Specify the character that will delimit columns in the output. The output delimiter will default to the input) Tj
1 0 0 1 76.0 596.5 Tm
0.2046 Tw
(delimiter if not specified. Refer to ) Tj
/F22 10 Tf
0.2046 Tw
(input_delimiter) Tj
/F20 10 Tf
0.2046 Tw
( above for more information regarding types of delimiters.) Tj
/F20 10 Tf
1 0 0 1 76.0 558.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(discard_header) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 546.1 Tm
1.1633 Tw
(If the input data stream contains an initial header record then this option must be specified in order to) Tj
1 0 0 1 76.0 534.1 Tm
0.0000 Tw
(discard this record from the processing. ) Tj
/F20 10 Tf
1 0 0 1 76.0 507.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(input_file) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 495.7 Tm
0.0905 Tw
(Specify the file name as a parameter. If specified, the input data will be read from this file; otherwise it will) Tj
1 0 0 1 76.0 483.7 Tm
0.0000 Tw
(be read from STDIN. ) Tj
/F20 10 Tf
1 0 0 1 76.0 457.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(output_file) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 445.3 Tm
1.3265 Tw
(Specify the file name as a parameter. If specified, the output will be written to this file \(the file will be) Tj
1 0 0 1 76.0 433.3 Tm
0.0000 Tw
(overwritten!\); otherwise it will be sent to STDOUT. ) Tj
/F20 10 Tf
1 0 0 1 76.0 406.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(transfer) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 394.9 Tm
0.2983 Tw
(Copy the input record to output. The input record is copied as is, including calculated fields, to the output) Tj
1 0 0 1 76.0 382.9 Tm
0.7431 Tw
(record. Fields specified in the ) Tj
/F23 10 Tf
0.7431 Tw
(output section) Tj
/F20 10 Tf
0.7431 Tw
( are placed after the input fields. The ) Tj
/F10 10 Tf
0.7431 Tw
(transfer) Tj
/F20 10 Tf
0.7431 Tw
( option is) Tj
1 0 0 1 76.0 370.9 Tm
0.0000 Tw
(not available when ) Tj
/F23 10 Tf
0.0000 Tw
(group by) Tj
/F20 10 Tf
0.0000 Tw
( us in use. ) Tj
/F20 10 Tf
1 0 0 1 76.0 344.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(hash) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 332.5 Tm
0.3987 Tw
(Use hash processing mode. Hash mode is only available when break processing is activated with `group) Tj
1 0 0 1 76.0 320.5 Tm
0.0367 Tw
(by'. In hash mode input data need not be sorted. Because this mode of processing is memory intensive, it) Tj
1 0 0 1 76.0 308.5 Tm
0.6850 Tw
(should only be used when generating a small number of groups. The optional `numeric' modifier can be) Tj
1 0 0 1 76.0 296.5 Tm
0.0000 Tw
(specified to sort the output numerically; if not specified, a string sort is done.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 270.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(header) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 258.1 Tm
0.6765 Tw
(If specified then an initial header record will by written to output. This header record contains the output) Tj
1 0 0 1 76.0 246.1 Tm
0.0000 Tw
(field names. By default a header record will be output if neither header nor noheader is specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 219.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(noheader) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 207.7 Tm
0.0000 Tw
(Specify this option to suppress writing of header record. ) Tj
/F20 10 Tf
1 0 0 1 76.0 181.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(addpipe) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 169.3 Tm
1.7200 Tw
(Specify this option to add an extra delimiter character after the last field. This is the default action if) Tj
1 0 0 1 76.0 157.3 Tm
0.0000 Tw
(neither addpipe nor noaddpipe is specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 130.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(noaddpipe) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 118.9 Tm
0.0000 Tw
(Specify this option to suppress adding an extra delimiter character after the last field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 92.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(optimize) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 80.5 Tm
0.3512 Tw
(If specified the generated Perl code will be optimized to run more efficiently. This optimisation is done by) Tj
1 0 0 1 76.0 68.5 Tm
0.7113 Tw
(grouping similar ) Tj
/F10 10 Tf
0.7113 Tw
(where) Tj
/F20 10 Tf
0.7113 Tw
( conditions into ) Tj
/F10 10 Tf
0.7113 Tw
(if-else) Tj
/F20 10 Tf
0.7113 Tw
( blocks. Thus if a number of where clauses contain the) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(13) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
67 0 obj
6173
endobj
68 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
69 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 68 0 R
/Contents 66 0 R
>>
endobj
70 0 obj
<<
/Length 71 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.2107 Tw
(same condition, these statements will be grouped under one if condition. The ) Tj
/F22 10 Tf
0.2107 Tw
(optimize) Tj
/F20 10 Tf
0.2107 Tw
( option should only) Tj
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
(be used by users with some knowledge of Perl. ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(nooptimize) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
(Specify this option to prevent code from being optimised. This is the default setting. ) Tj
/F20 10 Tf
1 0 0 1 76.0 703.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(nulls) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.2706 Tw
(If specified, numeric and decimal values with a zero/null value will be output as null character. This is the) Tj
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
(default setting. ) Tj
/F20 10 Tf
1 0 0 1 76.0 652.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(nonulls) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 640.8 Tm
0.0000 Tw
(If specified, numeric and decimal values with a zero/null value will be output as ) Tj
/F10 10 Tf
0.0000 Tw
(0) Tj
/F20 10 Tf
0.0000 Tw
(.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(varnames) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 602.4 Tm
1.0682 Tw
(Use for debugging the generated code. This setting will display the field name, instead of just the field) Tj
1 0 0 1 76.0 590.4 Tm
0.0000 Tw
(number, in the generated Perl code. This is the default setting. ) Tj
/F20 10 Tf
1 0 0 1 76.0 564.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(novarnames) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 552.0 Tm
0.0000 Tw
(This will cause the generated code to contain field numbers only instead of field names. ) Tj
/F20 10 Tf
1 0 0 1 76.0 525.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(noexecute) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 513.6 Tm
2.3967 Tw
(Use for debugging. With this option, the generated code is displayed to STDOUT instead of being) Tj
1 0 0 1 76.0 501.6 Tm
0.0000 Tw
(executed. ) Tj
/F20 10 Tf
1 0 0 1 76.0 475.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(reject_file) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 463.2 Tm
0.2689 Tw
(Use this option to specify a file name to contain the rejected records. These are records that are rejected) Tj
1 0 0 1 76.0 451.2 Tm
1.1611 Tw
(by the filter specified in the reject section. If no reject file option is specified then the default reject file) Tj
1 0 0 1 76.0 439.2 Tm
0.0000 Tw
(name is the script file name with ) Tj
/F10 10 Tf
0.0000 Tw
(.reject) Tj
/F20 10 Tf
0.0000 Tw
( appended. ) Tj
/F20 10 Tf
1 0 0 1 76.0 412.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(dumpcode) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 400.8 Tm
0.0864 Tw
(Set this option to save the generated code in scriptname.2.code files. The scriptname.2.code file contains) Tj
1 0 0 1 76.0 388.8 Tm
1.7263 Tw
(the generated perl code. This latter contains the actual Perl program that will process the input data) Tj
1 0 0 1 76.0 376.8 Tm
0.0000 Tw
(stream. This generated Perl program can be executed independatly of Pequel. ) Tj
/F20 10 Tf
1 0 0 1 76.0 350.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(default_date_type) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 338.4 Tm
0.2008 Tw
(Specify a default date type. Currently supported date types are: ) Tj
/F10 10 Tf
0.2008 Tw
(YYYYMMDD) Tj
/F20 10 Tf
0.2008 Tw
(, ) Tj
/F10 10 Tf
0.2008 Tw
(YYMMDD) Tj
/F20 10 Tf
0.2008 Tw
(, ) Tj
/F10 10 Tf
0.2008 Tw
(DDMMYY) Tj
/F20 10 Tf
0.2008 Tw
(, ) Tj
/F10 10 Tf
0.2008 Tw
(DDMMMYY) Tj
/F20 10 Tf
0.2008 Tw
(,) Tj
1 0 0 1 76.0 326.4 Tm
0 Tw
() Tj
/F10 10 Tf
0 Tw
(DDMMYYYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F10 10 Tf
0 Tw
(DD/MM/YY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F10 10 Tf
0 Tw
(DD/MM/YYYY) Tj
/F20 10 Tf
0 Tw
(, and US date formats: ) Tj
/F10 10 Tf
0 Tw
(MMDDYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F10 10 Tf
0 Tw
(MMDDYYYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F10 10 Tf
0 Tw
(MM/DD/YY) Tj
/F20 10 Tf
0 Tw
(,) Tj
1 0 0 1 76.0 314.4 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(MM/DD/YYYY) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F10 10 Tf
0.0000 Tw
(DDMMMYY) Tj
/F20 10 Tf
0.0000 Tw
( format refers to dates such as ) Tj
/F10 10 Tf
0.0000 Tw
(21JAN02) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 288.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(default_list_delimiter) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 276.0 Tm
0.5138 Tw
(Specify the default list delimiter for ) Tj
/F22 10 Tf
0.5138 Tw
(array fields) Tj
/F20 10 Tf
0.5138 Tw
( created by ) Tj
/F10 10 Tf
0.5138 Tw
(values_all) Tj
/F20 10 Tf
0.5138 Tw
( and ) Tj
/F10 10 Tf
0.5138 Tw
(values_uniq) Tj
/F20 10 Tf
0.5138 Tw
( aggregates.) Tj
1 0 0 1 76.0 264.0 Tm
0.0000 Tw
(Any delimiter specified as a parameter to the aggregate function will override this. ) Tj
/F20 10 Tf
1 0 0 1 76.0 237.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(rmctrlm) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F22 10 Tf
0.0000 Tw
(v3) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 225.6 Tm
0.0000 Tw
(If the input file is in DOS format, specify `rmctrlm' option to remove the Ctrl-M at end of line. ) Tj
/F20 10 Tf
1 0 0 1 76.0 199.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(input_record_limit) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F22 10 Tf
0.0000 Tw
(v3) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 187.2 Tm
0.4829 Tw
(Specify number of records to process from input file. Processing will stop after the number of records as) Tj
1 0 0 1 76.0 175.2 Tm
0.0000 Tw
(specified have been read. ) Tj
/F20 10 Tf
1 0 0 1 76.0 148.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(suppress_output) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F22 10 Tf
0.0000 Tw
(v3) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 136.8 Tm
0.0000 Tw
(Use this option when ) Tj
/F23 10 Tf
0.0000 Tw
(summary section) Tj
/F20 10 Tf
0.0000 Tw
( is used to prevent output of raw results. ) Tj
/F20 10 Tf
1 0 0 1 76.0 110.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(pequeldoc) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 98.4 Tm
0.1760 Tw
(Generate PDF for Programmer`s Reference Manual for the Pequel script. The next three options are also) Tj
1 0 0 1 76.0 86.4 Tm
0.0000 Tw
(required. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(14) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
71 0 obj
6525
endobj
72 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
73 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 72 0 R
/Contents 70 0 R
>>
endobj
74 0 obj
<<
/Length 75 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(doc_title) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
(Specify the title that will appear on the pequeldoc generated manual. ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(doc_email) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
(Specify the user`s email that will appear on the pequeldoc generated manual. ) Tj
/F20 10 Tf
1 0 0 1 76.0 703.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(doc_version) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
(Specify the Pequel script version number that will appear on the pequeldoc generated manual. ) Tj
/F21 10 Tf
1 0 0 1 52.0 649.2 Tm
0.0000 Tw
(INLINE OPTIONS ) Tj
/F20 10 Tf
1 0 0 1 76.0 637.2 Tm
0.5153 Tw
(The following options require that the Inline::C Perl module and a C compiler system is installed on your) Tj
1 0 0 1 76.0 625.2 Tm
0.0000 Tw
(system.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 598.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(use_inline) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 76.0 586.8 Tm
0.0431 Tw
(The ) Tj
/F23 10 Tf
0.0431 Tw
(use_inline) Tj
/F20 10 Tf
0.0431 Tw
( option will instruct Pequel to generate \(and compile/link\) ) Tj
/F23 10 Tf
0.0431 Tw
(C) Tj
/F20 10 Tf
0.0431 Tw
( code \217 replacing the input file) Tj
1 0 0 1 76.0 574.8 Tm
0.3987 Tw
(identifier inside the main ) Tj
/F23 10 Tf
0.3987 Tw
(while) Tj
/F20 10 Tf
0.3987 Tw
( loop by a ) Tj
/F23 10 Tf
0.3987 Tw
(readsplit\(\)) Tj
/F20 10 Tf
0.3987 Tw
( function call. The ) Tj
/F23 10 Tf
0.3987 Tw
(readsplit) Tj
/F20 10 Tf
0.3987 Tw
( function is implemented) Tj
1 0 0 1 76.0 562.8 Tm
0.0000 Tw
(in ) Tj
/F23 10 Tf
0.0000 Tw
(C) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 536.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(input_delimiter_extra) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 524.4 Tm
0.0784 Tw
(Specify one or more extra field delimiter characters. These may be one of any quote character, ) Tj
/F23 10 Tf
0.0784 Tw
(') Tj
/F20 10 Tf
0.0784 Tw
(, ) Tj
/F23 10 Tf
0.0784 Tw
(") Tj
/F20 10 Tf
0.0784 Tw
(, ) Tj
/F23 10 Tf
0.0784 Tw
(`) Tj
/F20 10 Tf
0.0784 Tw
(, and) Tj
1 0 0 1 76.0 512.4 Tm
1.7500 Tw
(optionally, one of and bracket character, ) Tj
/F23 10 Tf
1.7500 Tw
(\{) Tj
/F20 10 Tf
1.7500 Tw
(, ) Tj
/F23 10 Tf
1.7500 Tw
([) Tj
/F20 10 Tf
1.7500 Tw
(, ) Tj
/F23 10 Tf
1.7500 Tw
(\() Tj
/F20 10 Tf
1.7500 Tw
(. For example, this option can be used to parse input) Tj
1 0 0 1 76.0 500.4 Tm
0.0000 Tw
(Apache log files in CLF format: ) Tj
/F10 7 Tf
1 0 0 1 76.0 472.2 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 463.8 Tm
0.0000 Tw
(     input_delimiter_extra\("[\)  // Apache CLF log quoted fields and bracketed timestamp ) Tj
/F20 10 Tf
1 0 0 1 76.0 449.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_clean_after_build) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 437.5 Tm
2.4759 Tw
(Tells Inline to clean up the current build area if the build was successful. Sometimes you want to) Tj
1 0 0 1 76.0 425.5 Tm
0.0000 Tw
(DISABLE this for debugging. Default is 1.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 399.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_clean_build_area) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 387.1 Tm
0.0000 Tw
(Tells Inline to clean up the old build areas within the entire Inline DIRECTORY. Default is 0.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 360.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_print_info) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 348.7 Tm
0.0000 Tw
(Tells Inline to print various information about the source code. Default is 0. ) Tj
/F20 10 Tf
1 0 0 1 76.0 322.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_build_noisy) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 310.3 Tm
0.1450 Tw
(Tells ILSMs that they should dump build messages to the terminal rather than be silent about all the build) Tj
1 0 0 1 76.0 298.3 Tm
0.0000 Tw
(details. ) Tj
/F20 10 Tf
1 0 0 1 76.0 271.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_build_timers) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 259.9 Tm
3.6821 Tw
(Tells ILSMs to print timing information about how long each build phase took. Usually requires) Tj
1 0 0 1 76.0 247.9 Tm
0.0000 Tw
(Time::HiRes ) Tj
/F20 10 Tf
1 0 0 1 76.0 233.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_force_build) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 221.5 Tm
0.0000 Tw
(Makes Inline build \(compile\) the source code every time the program is run. The default is 0.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 195.1 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_directory) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 183.1 Tm
0.0000 Tw
(The DIRECTORY config option is the directory that Inline uses to both build and install an extension. ) Tj
/F20 10 Tf
1 0 0 1 76.0 171.1 Tm
0.9206 Tw
(Normally Inline will search in a bunch of known places for a directory called '.Inline/'. Failing that, it will) Tj
1 0 0 1 76.0 159.1 Tm
0.0000 Tw
(create a directory called `_Inline/' ) Tj
/F20 10 Tf
1 0 0 1 76.0 147.1 Tm
0.0000 Tw
(If you want to specify your own directory, use this configuration option. ) Tj
/F20 10 Tf
1 0 0 1 76.0 135.1 Tm
0.0000 Tw
(Note that you must create the DIRECTORY directory yourself. Inline will not do it for you. ) Tj
/F20 10 Tf
1 0 0 1 76.0 108.7 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_CC) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 96.7 Tm
0.0000 Tw
(Specify which compiler to use. ) Tj
/F20 10 Tf
1 0 0 1 76.0 70.3 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_OPTIMIZE) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(15) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
75 0 obj
5942
endobj
76 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F23 17 0 R
>>
>>
endobj
77 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 76 0 R
/Contents 74 0 R
>>
endobj
78 0 obj
<<
/Length 79 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.4938 Tw
(This controls the MakeMaker OPTIMIZE setting. By setting this value to `-g`, you can turn on debugging) Tj
1 0 0 1 76.0 768.0 Tm
0.1590 Tw
(support for your Inline extensions. This will allow you to be able to set breakpoints in your C code using a) Tj
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(debugger like gdb. ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_CCFLAGS) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
(Specify extra compiler flags. ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_LIBS) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
(Specifies external libraries that should be linked into your code. ) Tj
/F20 10 Tf
1 0 0 1 76.0 652.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_INC) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 640.8 Tm
0.0000 Tw
(Specifies an include path to use. Corresponds to the MakeMaker parameter. ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_LDDLFLAGS) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 602.4 Tm
0.0000 Tw
(Specify which linker flags to use. ) Tj
/F20 10 Tf
1 0 0 1 76.0 590.4 Tm
1.0376 Tw
(NOTE: These flags will completely override the existing flags, instead of just adding to them. So if you) Tj
1 0 0 1 76.0 578.4 Tm
0.0000 Tw
(need to use those too, you must respecify them here. ) Tj
/F20 10 Tf
1 0 0 1 76.0 552.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(inline_MAKE) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 540.0 Tm
0.0000 Tw
(Specify the name of the `make' utility to use. ) Tj
/F21 10 Tf
1 0 0 1 52.0 498.0 Tm
0.0000 Tw
(USE PACKAGE SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 486.0 Tm
0.0000 Tw
(Use this section to specify Perl packages to use. This section is optional. ) Tj
/F20 10 Tf
1 0 0 1 76.0 459.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 447.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(use package) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 435.6 Tm
0.0000 Tw
(    <Perl package name> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 409.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 393.0 Tm
0.0000 Tw
( use package ) Tj
/F10 7 Tf
1 0 0 1 76.0 384.6 Tm
0.0000 Tw
(     Benchmark, ) Tj
/F10 7 Tf
1 0 0 1 76.0 376.2 Tm
0.0000 Tw
(     EasyDate ) Tj
/F21 10 Tf
1 0 0 1 52.0 355.2 Tm
0.0000 Tw
(INIT TABLE SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 343.2 Tm
0.6330 Tw
(Use ) Tj
/F23 10 Tf
0.6330 Tw
(init table) Tj
/F20 10 Tf
0.6330 Tw
( to initialise tables in the Pequel script. This will consist of a list of table name followed by) Tj
1 0 0 1 76.0 331.2 Tm
0.2430 Tw
(key value \(or value list\) pairs. The key must not contain any spaces. In order to avoid clutter in the script,) Tj
1 0 0 1 76.0 319.2 Tm
0.2182 Tw
(use load table as described above. To look up a table key/value use the ) Tj
/F23 10 Tf
0.2182 Tw
(%) Tj
/F20 10 Tf
0.2182 Tw
() Tj
/F22 10 Tf
0.2182 Tw
(table name) Tj
/F20 10 Tf
0.2182 Tw
() Tj
/F23 10 Tf
0.2182 Tw
(\() Tj
/F20 10 Tf
0.2182 Tw
() Tj
/F22 10 Tf
0.2182 Tw
(key) Tj
/F20 10 Tf
0.2182 Tw
() Tj
/F23 10 Tf
0.2182 Tw
(\)) Tj
/F20 10 Tf
0.2182 Tw
( syntax. Table) Tj
1 0 0 1 76.0 307.2 Tm
1.6753 Tw
(column values are accessed by using the ) Tj
/F23 10 Tf
1.6753 Tw
(%) Tj
/F20 10 Tf
1.6753 Tw
() Tj
/F22 10 Tf
1.6753 Tw
(table name) Tj
/F20 10 Tf
1.6753 Tw
() Tj
/F23 10 Tf
1.6753 Tw
(\() Tj
/F20 10 Tf
1.6753 Tw
() Tj
/F22 10 Tf
1.6753 Tw
(key) Tj
/F20 10 Tf
1.6753 Tw
() Tj
/F23 10 Tf
1.6753 Tw
(\)-) Tj
/F20 10 Tf
1.6753 Tw
(=>) Tj
/F22 10 Tf
1.6753 Tw
(n) Tj
/F20 10 Tf
1.6753 Tw
( syntax, when n refers to a column) Tj
1 0 0 1 76.0 295.2 Tm
0.1663 Tw
(number starting from `1'. The column specification is not required for single value tables. All entries within) Tj
1 0 0 1 76.0 283.2 Tm
0.6072 Tw
(a table should have the same number of values, empty values can be declared with a null quoted value) Tj
1 0 0 1 76.0 271.2 Tm
0.0000 Tw
(\(`'\). This section is optional. ) Tj
/F20 10 Tf
1 0 0 1 76.0 244.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 232.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(init table) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 220.8 Tm
0.0000 Tw
(    <table> <key> <value> [, <value>...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 194.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Example) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 178.2 Tm
0.0000 Tw
( init table ) Tj
/F10 7 Tf
1 0 0 1 76.0 169.8 Tm
0.0000 Tw
( // Table-Name Key-Value Field->1             Field-2  Field-3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 161.4 Tm
0.0000 Tw
(    LOCINFO    NSW       'New South Wales'    '2061'   '02' ) Tj
/F10 7 Tf
1 0 0 1 76.0 153.0 Tm
0.0000 Tw
(    LOCINFO    WA        'Western Australia'  '5008'   '07' ) Tj
/F10 7 Tf
1 0 0 1 76.0 144.6 Tm
0.0000 Tw
(    LOCINFO    SA        'South Australia'    '8078'   '08' ) Tj
/F10 7 Tf
1 0 0 1 76.0 127.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 119.4 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 111.0 Tm
0.0000 Tw
(    LDESCRIPT => %LOCINFO\(LOCATION\)->1 . " in postcode " . %LOCINFO\(LOCATION\)->2 ) Tj
/F21 10 Tf
1 0 0 1 52.0 90.0 Tm
0.0000 Tw
(LOAD TABLE SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 78.0 Tm
0.1062 Tw
(Use this section to declare tables that are to be initialised from an external data file. If the table is in ) Tj
/F10 10 Tf
0.1062 Tw
(.tbl) Tj
/F20 10 Tf
1 0 0 1 76.0 66.0 Tm
1.7727 Tw
(format \(key|value\) then only the table name \(without the ) Tj
/F10 10 Tf
1.7727 Tw
(.tbl) Tj
/F20 10 Tf
1.7727 Tw
(\) need be specified. The filename can) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(16) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
79 0 obj
6058
endobj
80 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
81 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 80 0 R
/Contents 78 0 R
>>
endobj
82 0 obj
<<
/Length 83 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.3726 Tw
(consist of the full path name. Compressed files \(ending in .gz, .z, .Z, .zip\) will be handled properly. If key) Tj
1 0 0 1 76.0 768.0 Tm
0.3964 Tw
(column is not specified then this is set to 1 by default; if the value column is not specified then this is set) Tj
1 0 0 1 76.0 756.0 Tm
1.2872 Tw
(to 2 by default. Column numbers are 1 base. To look up a table key/value use the ) Tj
/F23 10 Tf
1.2872 Tw
(%) Tj
/F20 10 Tf
1.2872 Tw
() Tj
/F22 10 Tf
1.2872 Tw
(table name) Tj
/F20 10 Tf
1.2872 Tw
() Tj
/F23 10 Tf
1.2872 Tw
(\() Tj
/F20 10 Tf
1.2872 Tw
() Tj
/F22 10 Tf
1.2872 Tw
(key) Tj
/F20 10 Tf
1.2872 Tw
() Tj
/F23 10 Tf
1.2872 Tw
(\)) Tj
/F20 10 Tf
1 0 0 1 76.0 744.0 Tm
0.8747 Tw
(syntax. If the table name is prefixed with the ) Tj
/F10 10 Tf
0.8747 Tw
(_) Tj
/F20 10 Tf
0.8747 Tw
( character, this table will be loaded at runtime instead of) Tj
1 0 0 1 76.0 732.0 Tm
1.1944 Tw
(compile time. Thus the table contents will not appear in the generated code. This is useful if the table) Tj
1 0 0 1 76.0 720.0 Tm
0.0000 Tw
(contains more than a few hundred entries, as it will not clutter up the generated code.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 693.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(persistant) Tj
/F20 10 Tf
0.0000 Tw
( option ) Tj
/F20 10 Tf
1 0 0 1 76.0 681.6 Tm
1.8550 Tw
(The ) Tj
/F23 10 Tf
1.8550 Tw
(persistant) Tj
/F20 10 Tf
1.8550 Tw
( option will make the table disk-based instead of memory-based. Use this option for) Tj
1 0 0 1 76.0 669.6 Tm
0.6544 Tw
(tables that are too big to fit in available memory. The disk-based table snapshot file will have the name) Tj
1 0 0 1 76.0 657.6 Tm
0.5787 Tw
() Tj
/F10 10 Tf
0.5787 Tw
(_TABLE_name.dat) Tj
/F20 10 Tf
0.5787 Tw
(, where ) Tj
/F10 10 Tf
0.5787 Tw
(name) Tj
/F20 10 Tf
0.5787 Tw
( is the table name. When the ) Tj
/F10 10 Tf
0.5787 Tw
(persistant) Tj
/F20 10 Tf
0.5787 Tw
( option is used, the table is) Tj
1 0 0 1 76.0 645.6 Tm
0.2145 Tw
(generated only once, the first time it is used. Thereafter it will be loaded from the snaphot file. This is alot) Tj
1 0 0 1 76.0 633.6 Tm
0.3318 Tw
(quicker and therefore usefull for large tables. In order to re-generate the table, the snapshot file must be) Tj
1 0 0 1 76.0 621.6 Tm
1.1393 Tw
(manually deleted. In order to use the ) Tj
/F10 10 Tf
1.1393 Tw
(persistant) Tj
/F20 10 Tf
1.1393 Tw
( option the Perl DB_File module must be available.) Tj
1 0 0 1 76.0 609.6 Tm
0.9175 Tw
(The effect of ) Tj
/F10 10 Tf
0.9175 Tw
(persistant) Tj
/F20 10 Tf
0.9175 Tw
( is to ) Tj
/F10 10 Tf
0.9175 Tw
(tie) Tj
/F20 10 Tf
0.9175 Tw
( the table`s associative array with a DBM database \(Berkeley DB\).) Tj
1 0 0 1 76.0 597.6 Tm
0.0000 Tw
(Note that using ) Tj
/F10 10 Tf
0.0000 Tw
(persistant) Tj
/F20 10 Tf
0.0000 Tw
( tables will downgrade the overall performance of the script. ) Tj
/F20 10 Tf
1 0 0 1 76.0 571.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 559.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(load table) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(persistant) Tj
/F20 10 Tf
0.0000 Tw
( ] ) Tj
/F20 10 Tf
1 0 0 1 76.0 547.2 Tm
0.0000 Tw
(    <table> [ <filename> [ <key_col> [ <val_col> ] ] ] [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 520.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 504.6 Tm
0.0000 Tw
( load table ) Tj
/F10 7 Tf
1 0 0 1 76.0 496.2 Tm
0.0000 Tw
(     POSTCODES ) Tj
/F10 7 Tf
1 0 0 1 76.0 487.8 Tm
0.0000 Tw
(     MONTH_NAMES /data/tables/month_names.tbl ) Tj
/F10 7 Tf
1 0 0 1 76.0 479.4 Tm
0.0000 Tw
(     POCODES pocodes.gz 1 2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 471.0 Tm
0.0000 Tw
(     ZIPSAMPLE zipsample.txt 3 21 ) Tj
/F21 10 Tf
1 0 0 1 52.0 450.0 Tm
0.0000 Tw
(INIT _PERIOD SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 438.0 Tm
0.0438 Tw
(Use this section to initialise the special internal ) Tj
/F23 10 Tf
0.0438 Tw
(_PERIOD) Tj
/F20 10 Tf
0.0438 Tw
( table. The ) Tj
/F23 10 Tf
0.0438 Tw
(_PERIOD) Tj
/F20 10 Tf
0.0438 Tw
( table is accessed by using) Tj
1 0 0 1 76.0 426.0 Tm
0.8878 Tw
(the ) Tj
/F23 10 Tf
0.8878 Tw
(&period\(\)) Tj
/F20 10 Tf
0.8878 Tw
( macro. This will map all dates within the start and end date specified to the period value) Tj
1 0 0 1 76.0 414.0 Tm
0.3806 Tw
(\(string or numeric\). Please note the space after ) Tj
/F10 10 Tf
0.3806 Tw
(init) Tj
/F20 10 Tf
0.3806 Tw
( and before ) Tj
/F10 10 Tf
0.3806 Tw
(_PERIOD) Tj
/F20 10 Tf
0.3806 Tw
(. This section is optional. See) Tj
1 0 0 1 76.0 402.0 Tm
0.0000 Tw
(also ) Tj
/F23 10 Tf
0.0000 Tw
(&period\(\)) Tj
/F20 10 Tf
0.0000 Tw
( macro below. ) Tj
/F20 10 Tf
1 0 0 1 76.0 375.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 363.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(init _PERIOD) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(persistant) Tj
/F20 10 Tf
0.0000 Tw
( ] ) Tj
/F20 10 Tf
1 0 0 1 76.0 351.6 Tm
0.0000 Tw
(    <period value> <start date> <end date> <date fmt> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 325.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 309.0 Tm
0.0000 Tw
( init _PERIOD ) Tj
/F10 7 Tf
1 0 0 1 76.0 300.6 Tm
0.0000 Tw
(     Q1 01JAN01 31MAR01 DDMMMYY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 292.2 Tm
0.0000 Tw
(     Q2 01APR01 30JUN01 DDMMMYY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 283.8 Tm
0.0000 Tw
(     Q3 01JUL01 30SEP01 DDMMMYY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 275.4 Tm
0.0000 Tw
(     Q4 01OCT01 31DEC01 DDMMMYY ) Tj
/F21 10 Tf
1 0 0 1 52.0 254.4 Tm
0.0000 Tw
(INIT _MONTH SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 242.4 Tm
0.2363 Tw
(Use this section to initialise the special internal ) Tj
/F23 10 Tf
0.2363 Tw
(_MONTH) Tj
/F20 10 Tf
0.2363 Tw
( table. The ) Tj
/F23 10 Tf
0.2363 Tw
(_MONTH) Tj
/F20 10 Tf
0.2363 Tw
( table is accessed by using) Tj
1 0 0 1 76.0 230.4 Tm
0.7956 Tw
(the ) Tj
/F23 10 Tf
0.7956 Tw
(%month\(\)) Tj
/F20 10 Tf
0.7956 Tw
( macro. This will map all dates within the start and end date specified to the month value) Tj
1 0 0 1 76.0 218.4 Tm
0.7556 Tw
(\(numeric or string\). Please note the space after ) Tj
/F10 10 Tf
0.7556 Tw
(init) Tj
/F20 10 Tf
0.7556 Tw
( and before ) Tj
/F10 10 Tf
0.7556 Tw
(_MONTH) Tj
/F20 10 Tf
0.7556 Tw
(. This section is optional. See) Tj
1 0 0 1 76.0 206.4 Tm
0.0000 Tw
(also ) Tj
/F23 10 Tf
0.0000 Tw
(%month\(\)) Tj
/F20 10 Tf
0.0000 Tw
( macro below. ) Tj
/F20 10 Tf
1 0 0 1 76.0 180.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 168.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(init _MONTH) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(persistant) Tj
/F20 10 Tf
0.0000 Tw
( ] ) Tj
/F20 10 Tf
1 0 0 1 76.0 156.0 Tm
0.0000 Tw
(    <month value> <start date> <end date> <date fmt> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 129.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 113.4 Tm
0.0000 Tw
( init _MONTH ) Tj
/F10 7 Tf
1 0 0 1 76.0 105.0 Tm
0.0000 Tw
(     JAN 01/01/2002 01/31/2002 MM/DD/YYYY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 96.6 Tm
0.0000 Tw
(     FEB 02/01/2002 02/28/2002 MM/DD/YYYY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 88.2 Tm
0.0000 Tw
(     MAR 03/01/2002 03/30/2002 MM/DD/YYYY ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(17) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
83 0 obj
7563
endobj
84 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
85 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 84 0 R
/Contents 82 0 R
>>
endobj
86 0 obj
<<
/Length 87 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
(INPUT SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.9376 Tw
(This section defines the format of the input data stream. Any calculated fields must be placed after the) Tj
1 0 0 1 76.0 756.0 Tm
1.4850 Tw
(last input field. The calculation expression must begin with => and consists of \(almost\) any valid Perl) Tj
1 0 0 1 76.0 744.0 Tm
1.1407 Tw
(statement, and can include input field names. All macros are also available to calculation expressions.) Tj
1 0 0 1 76.0 732.0 Tm
1.0663 Tw
(The input section must appear before all the sections described below. Each input field name must be) Tj
1 0 0 1 76.0 720.0 Tm
0.0000 Tw
(unique. ) Tj
/F20 10 Tf
1 0 0 1 76.0 693.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 681.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(input section) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 669.6 Tm
0.0000 Tw
(    <input field name> [ => <calculation expression> ] [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 643.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Example) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 627.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 618.6 Tm
0.0000 Tw
(     ACL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 610.2 Tm
0.0000 Tw
(     AAL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 601.8 Tm
0.0000 Tw
(     ZIP, ) Tj
/F10 7 Tf
1 0 0 1 76.0 593.4 Tm
0.0000 Tw
(     CALLDATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 585.0 Tm
0.0000 Tw
(     CALLS, ) Tj
/F10 7 Tf
1 0 0 1 76.0 576.6 Tm
0.0000 Tw
(     DURATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 568.2 Tm
0.0000 Tw
(     REVENUE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 559.8 Tm
0.0000 Tw
(     DISCOUNT, ) Tj
/F10 7 Tf
1 0 0 1 76.0 551.4 Tm
0.0000 Tw
(     KINSHIP_KEY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 543.0 Tm
0.0000 Tw
(     INV => REVENUE + DISCOUNT, ) Tj
/F10 7 Tf
1 0 0 1 76.0 534.6 Tm
0.0000 Tw
(     MONTH_CALLDATE => &month\(CALLDATE\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.2 Tm
0.0000 Tw
(     GROUP => MONTH_CALLDATE <= 6 ? 1 : 2, ) Tj
/F10 7 Tf
1 0 0 1 76.0 517.8 Tm
0.0000 Tw
(     POSTCODE => %POSTCODES\(AAL\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 509.4 Tm
0.0000 Tw
(     IN_SAMPLE => exists %ZIPSAMPLE\(ZIP\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 501.0 Tm
0.0000 Tw
(     IN_SAMPLE_2 => exists %ZIPSAMPLE\(ZIP\) ? 'yes': 'no' ) Tj
/F21 10 Tf
1 0 0 1 52.0 480.0 Tm
0.0000 Tw
(FIELD PREPROCESS SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 468.0 Tm
2.4262 Tw
(Use this section to perform addition formatting/processing on input fields. These statements will be) Tj
1 0 0 1 76.0 456.0 Tm
0.0000 Tw
(performed right after the input record is read and before calculating the input derived fields. ) Tj
/F21 10 Tf
1 0 0 1 52.0 414.0 Tm
0.0000 Tw
(FIELD POSTPROCESS SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 402.0 Tm
1.6171 Tw
(Use this section to perform addition formatting/processing on output fields.  These statements will be) Tj
1 0 0 1 76.0 390.0 Tm
0.0000 Tw
(performed after the aggregations and just prior to the output of the aggregated record. ) Tj
/F21 10 Tf
1 0 0 1 52.0 348.0 Tm
0.0000 Tw
(SORT BY SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 336.0 Tm
0.6040 Tw
(Use this section to sort the input data by field\(s\).  One or more sort fields can be specified. This section) Tj
1 0 0 1 76.0 324.0 Tm
0.1656 Tw
(must appear after the ) Tj
/F23 10 Tf
0.1656 Tw
(input section) Tj
/F20 10 Tf
0.1656 Tw
( and before the ) Tj
/F23 10 Tf
0.1656 Tw
(group by) Tj
/F20 10 Tf
0.1656 Tw
( and ) Tj
/F23 10 Tf
0.1656 Tw
(output sections) Tj
/F20 10 Tf
0.1656 Tw
(. The ) Tj
/F23 10 Tf
0.1656 Tw
(numeric) Tj
/F20 10 Tf
0.1656 Tw
( option) Tj
1 0 0 1 76.0 312.0 Tm
1.0147 Tw
(is used to specify a ) Tj
/F22 10 Tf
1.0147 Tw
(numeric) Tj
/F20 10 Tf
1.0147 Tw
( sort, and the ) Tj
/F23 10 Tf
1.0147 Tw
(desc) Tj
/F20 10 Tf
1.0147 Tw
( option is used to specify a ) Tj
/F22 10 Tf
1.0147 Tw
(descending) Tj
/F20 10 Tf
1.0147 Tw
( sort order. The) Tj
1 0 0 1 76.0 300.0 Tm
0.2233 Tw
(standard Unix ) Tj
/F22 10 Tf
0.2233 Tw
(sort) Tj
/F20 10 Tf
0.2233 Tw
( command is used to perform the sort. The ) Tj
/F23 10 Tf
0.2233 Tw
(numeric) Tj
/F20 10 Tf
0.2233 Tw
( option is translated to the -n Unix) Tj
1 0 0 1 76.0 288.0 Tm
0.2414 Tw
() Tj
/F22 10 Tf
0.2414 Tw
(sort) Tj
/F20 10 Tf
0.2414 Tw
( option; the ) Tj
/F23 10 Tf
0.2414 Tw
(desc) Tj
/F20 10 Tf
0.2414 Tw
( option is translated to the -r Unix ) Tj
/F22 10 Tf
0.2414 Tw
(sort) Tj
/F20 10 Tf
0.2414 Tw
( option. If the input data is pre sorted then the) Tj
1 0 0 1 76.0 276.0 Tm
3.5356 Tw
() Tj
/F23 10 Tf
3.5356 Tw
(sort by) Tj
/F20 10 Tf
3.5356 Tw
( section is not required \(even if break processing is activated with a ) Tj
/F23 10 Tf
3.5356 Tw
(group by) Tj
/F20 10 Tf
3.5356 Tw
( section) Tj
1 0 0 1 76.0 264.0 Tm
0.0000 Tw
(declaration\). The ) Tj
/F23 10 Tf
0.0000 Tw
(sort by) Tj
/F20 10 Tf
0.0000 Tw
( section is not required when the ) Tj
/F23 10 Tf
0.0000 Tw
(hash) Tj
/F20 10 Tf
0.0000 Tw
( option is specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 237.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 225.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(sort by) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 213.6 Tm
0.0000 Tw
(    <field name> [ ) Tj
/F21 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
( ] [ ) Tj
/F21 10 Tf
0.0000 Tw
(desc) Tj
/F20 10 Tf
0.0000 Tw
( ]  [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 187.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 171.0 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 162.6 Tm
0.0000 Tw
(     ACL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 154.2 Tm
0.0000 Tw
(     AAL numeric desc ) Tj
/F21 10 Tf
1 0 0 1 52.0 133.2 Tm
0.0000 Tw
(REJECT SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 121.2 Tm
0.0444 Tw
(Specify one or more filter expressions. Filter expression can consist of any valid Perl statement, and must) Tj
1 0 0 1 76.0 109.2 Tm
0.8679 Tw
(evaluate to Boolean true or false \(0 is false, anything else is true\). It can contain input field names and) Tj
1 0 0 1 76.0 97.2 Tm
0.0724 Tw
(macros. Each input record is evaluated against the filter\(s\). Records that evaluate to true on any one filter) Tj
1 0 0 1 76.0 85.2 Tm
0.3524 Tw
(will be rejected and written to the reject file. The reject file is named scriptname.reject unless specified in) Tj
1 0 0 1 76.0 73.2 Tm
0.0000 Tw
(the ) Tj
/F23 10 Tf
0.0000 Tw
(reject_file) Tj
/F20 10 Tf
0.0000 Tw
( option.  ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(18) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
87 0 obj
6700
endobj
88 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
89 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 88 0 R
/Contents 86 0 R
>>
endobj
90 0 obj
<<
/Length 91 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(reject) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(    <filter expression> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 713.4 Tm
0.0000 Tw
( reject ) Tj
/F10 7 Tf
1 0 0 1 76.0 705.0 Tm
0.0000 Tw
(     !exists %ZIPSAMPLE\(ZIP\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 696.6 Tm
0.0000 Tw
(     INV < 200 ) Tj
/F21 10 Tf
1 0 0 1 52.0 675.6 Tm
0.0000 Tw
(FILTER SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 663.6 Tm
0.0444 Tw
(Specify one or more filter expressions. Filter expression can consist of any valid Perl statement, and must) Tj
1 0 0 1 76.0 651.6 Tm
1.7876 Tw
(evaluate to Boolean true or false. It can contain input field names and macros. Each input record is) Tj
1 0 0 1 76.0 639.6 Tm
0.1644 Tw
(evaluated against the filter\(s\). Only records that evaluate to true on all filter statements will be processed;) Tj
1 0 0 1 76.0 627.6 Tm
0.0000 Tw
(that is, records that evaluate to false on any one filter statement will be discarded.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 601.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 589.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(filter) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 577.2 Tm
0.0000 Tw
(    <filter expression> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 550.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 534.6 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.2 Tm
0.0000 Tw
(     exists %ZIPSAMPLE\(ZIP\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 517.8 Tm
0.0000 Tw
(     ACL =~ /^356/ ) Tj
/F10 7 Tf
1 0 0 1 76.0 509.4 Tm
0.0000 Tw
(     ZIP eq '52101' or ZIP eq '52102' ) Tj
/F21 10 Tf
1 0 0 1 52.0 488.4 Tm
0.0000 Tw
(GROUP BY SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 476.4 Tm
2.6994 Tw
(Use this section to activate break processing. Break processing is required to be able to use the) Tj
1 0 0 1 76.0 464.4 Tm
0.3547 Tw
(aggregates in the output section. One or more fields can be specified - the input data must be sorted on) Tj
1 0 0 1 76.0 452.4 Tm
0.2415 Tw
(the group by fields, unless the ) Tj
/F23 10 Tf
0.2415 Tw
(hash) Tj
/F20 10 Tf
0.2415 Tw
( option is used. A break will occur when any of the group field values) Tj
1 0 0 1 76.0 440.4 Tm
0.9988 Tw
(changes. The ) Tj
/F23 10 Tf
0.9988 Tw
(group by) Tj
/F20 10 Tf
0.9988 Tw
( section must appear after the ) Tj
/F23 10 Tf
0.9988 Tw
(sort by) Tj
/F20 10 Tf
0.9988 Tw
( section and before the ) Tj
/F23 10 Tf
0.9988 Tw
(output section) Tj
/F20 10 Tf
0.9988 Tw
(.) Tj
1 0 0 1 76.0 428.4 Tm
0.7424 Tw
(The ) Tj
/F23 10 Tf
0.7424 Tw
(numeric) Tj
/F20 10 Tf
0.7424 Tw
( option will cause leading zeros to be stripped from the input field. Group by on ) Tj
/F22 10 Tf
0.7424 Tw
(calculated) Tj
/F20 10 Tf
1 0 0 1 76.0 416.4 Tm
0.0000 Tw
(input fields is usefull when the ) Tj
/F23 10 Tf
0.0000 Tw
(hash) Tj
/F20 10 Tf
0.0000 Tw
( option is in use because the input does not need to be pre-sorted.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 390.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 378.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(group by) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 366.0 Tm
0.0000 Tw
(    <input field name> [ ) Tj
/F21 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(string) Tj
/F20 10 Tf
0.0000 Tw
( ] [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 339.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 323.4 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 315.0 Tm
0.0000 Tw
(     AAL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 306.6 Tm
0.0000 Tw
(     ACL numeric ) Tj
/F21 10 Tf
1 0 0 1 52.0 285.6 Tm
0.0000 Tw
(DEDUP ON SECTION ) Tj
/F21 10 Tf
1 0 0 1 52.0 255.6 Tm
0.0000 Tw
(OUTPUT SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 243.6 Tm
0.8239 Tw
(This is where the output data stream format is specified. At least one output field must be defined here) Tj
1 0 0 1 76.0 231.6 Tm
0.5800 Tw
(\(unless the ) Tj
/F23 10 Tf
0.5800 Tw
(transfer) Tj
/F20 10 Tf
0.5800 Tw
( option is specified\). Each output field definition must end with a comma or new line) Tj
1 0 0 1 76.0 219.6 Tm
0.7267 Tw
(\(or both\). Each field definition must begin with a type \() Tj
/F10 10 Tf
0.7267 Tw
(numeric) Tj
/F20 10 Tf
0.7267 Tw
(, ) Tj
/F10 10 Tf
0.7267 Tw
(decimal) Tj
/F20 10 Tf
0.7267 Tw
(, ) Tj
/F10 10 Tf
0.7267 Tw
(string) Tj
/F20 10 Tf
0.7267 Tw
(, ) Tj
/F10 10 Tf
0.7267 Tw
(date) Tj
/F20 10 Tf
0.7267 Tw
(\). The output) Tj
1 0 0 1 76.0 207.6 Tm
1.3063 Tw
(field name can be the same as an input field name, unless the output field is a calculated field. Each) Tj
1 0 0 1 76.0 195.6 Tm
1.1333 Tw
(output field name must be unique. This name will appear in the header record \(if the ) Tj
/F23 10 Tf
1.1333 Tw
(header) Tj
/F20 10 Tf
1.1333 Tw
( option is) Tj
1 0 0 1 76.0 183.6 Tm
0.0000 Tw
(set\). The aggregate expression must consist of at least the input field name. ) Tj
/F20 10 Tf
1 0 0 1 76.0 159.6 Tm
0.4592 Tw
(The aggregates ) Tj
/F10 10 Tf
0.4592 Tw
(sum) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(min) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(max) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(avg) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(first) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(last) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(distinct) Tj
/F20 10 Tf
0.4592 Tw
(, ) Tj
/F10 10 Tf
0.4592 Tw
(values_all) Tj
/F20 10 Tf
0.4592 Tw
(, and ) Tj
/F10 10 Tf
0.4592 Tw
(values_uniq) Tj
/F20 10 Tf
0.4592 Tw
( must) Tj
1 0 0 1 76.0 147.6 Tm
2.6059 Tw
(be followed by an input field name. The aggregates ) Tj
/F10 10 Tf
2.6059 Tw
(count) Tj
/F20 10 Tf
2.6059 Tw
( and ) Tj
/F10 10 Tf
2.6059 Tw
(flag) Tj
/F20 10 Tf
2.6059 Tw
( must be followed by the ) Tj
/F10 10 Tf
2.6059 Tw
(*) Tj
/F20 10 Tf
1 0 0 1 76.0 135.6 Tm
0.0000 Tw
(character. The aggregate ) Tj
/F10 10 Tf
0.0000 Tw
(serial) Tj
/F20 10 Tf
0.0000 Tw
( must be followed by a number \(indicating the serial number start\).  ) Tj
/F20 10 Tf
1 0 0 1 76.0 111.6 Tm
0.8015 Tw
(A prefix of ) Tj
/F10 10 Tf
0.8015 Tw
(_) Tj
/F20 10 Tf
0.8015 Tw
( in the output field name causes that field to be ) Tj
/F22 10 Tf
0.8015 Tw
(transparent) Tj
/F20 10 Tf
0.8015 Tw
(; these fields will not be output,) Tj
1 0 0 1 76.0 99.6 Tm
0.3500 Tw
(their use is mainly for intermediate calculations. <input field name> can be any field declared in the input) Tj
1 0 0 1 76.0 87.6 Tm
0.0000 Tw
(section, including calculated fields. This section is required unless the ) Tj
/F23 10 Tf
0.0000 Tw
(transfer) Tj
/F20 10 Tf
0.0000 Tw
( option is specified. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(19) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
91 0 obj
7284
endobj
92 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
93 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 92 0 R
/Contents 90 0 R
>>
endobj
94 0 obj
<<
/Length 95 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(output section) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(    <type> <output field name> <output expression> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 100.0 732.0 Tm
0.0000 Tw
(<type> ) Tj
/F20 10 Tf
1 0 0 1 100.0 720.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(string) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ]  ) Tj
/F20 10 Tf
1 0 0 1 100.0 696.0 Tm
0.0000 Tw
(<output field name> ) Tj
/F20 10 Tf
1 0 0 1 100.0 684.0 Tm
0.1222 Tw
(Each output field name must be unique. Output field name can be the same as the input field name,) Tj
1 0 0 1 100.0 672.0 Tm
0.1981 Tw
(unless the output field is a calculated field. A ) Tj
/F10 10 Tf
0.1981 Tw
(_) Tj
/F20 10 Tf
0.1981 Tw
( prefix denotes a ) Tj
/F22 10 Tf
0.1981 Tw
(transparent) Tj
/F20 10 Tf
0.1981 Tw
( field. Transparent fields) Tj
1 0 0 1 100.0 660.0 Tm
0.0000 Tw
(will not be output, they are used for intermediate caclulations. ) Tj
/F20 10 Tf
1 0 0 1 100.0 636.0 Tm
0.0000 Tw
(<datefmt> ) Tj
/F20 10 Tf
1 0 0 1 100.0 624.0 Tm
0 Tw
() Tj
/F21 10 Tf
0 Tw
(YYYYMMDD) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(YYMMDD) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(DDMMYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(DDMMMYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(DDMMYYYY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(DD/MM/YY) Tj
/F20 10 Tf
0 Tw
(, ) Tj
/F21 10 Tf
0 Tw
(DD/MM/YYYY) Tj
/F20 10 Tf
0 Tw
(,) Tj
1 0 0 1 100.0 612.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(MMDDYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(MMDDYYYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(MM/DD/YY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F21 10 Tf
0.0000 Tw
(MM/DD/YYYY) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 100.0 588.0 Tm
0.0000 Tw
(<output expression> ) Tj
/F20 10 Tf
1 0 0 1 124.0 564.0 Tm
0.0000 Tw
(<input field name> ) Tj
/F20 10 Tf
1 0 0 1 124.0 552.0 Tm
0.0000 Tw
(| ) Tj
/F20 10 Tf
1 0 0 1 124.0 540.0 Tm
0.0000 Tw
(<aggregate> <input field name> [ ) Tj
/F21 10 Tf
0.0000 Tw
(where) Tj
/F20 10 Tf
0.0000 Tw
( <condition expression> ]  ) Tj
/F20 10 Tf
1 0 0 1 124.0 528.0 Tm
0.0000 Tw
(| ) Tj
/F20 10 Tf
1 0 0 1 124.0 516.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(serial) Tj
/F20 10 Tf
0.0000 Tw
( <start num> [ ) Tj
/F21 10 Tf
0.0000 Tw
(where) Tj
/F20 10 Tf
0.0000 Tw
( <condition expression> ]  ) Tj
/F20 10 Tf
1 0 0 1 124.0 504.0 Tm
0.0000 Tw
(| ) Tj
/F20 10 Tf
1 0 0 1 124.0 492.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(count *) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(where) Tj
/F20 10 Tf
0.0000 Tw
( <condition expression> ]  ) Tj
/F20 10 Tf
1 0 0 1 124.0 480.0 Tm
0.0000 Tw
(| ) Tj
/F20 10 Tf
1 0 0 1 124.0 468.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(flag *) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(where) Tj
/F20 10 Tf
0.0000 Tw
( <condition expression> ]  ) Tj
/F20 10 Tf
1 0 0 1 124.0 456.0 Tm
0.0000 Tw
(| ) Tj
/F20 10 Tf
1 0 0 1 124.0 444.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(=) Tj
/F20 10 Tf
0.0000 Tw
( <calculation expression> [ ) Tj
/F21 10 Tf
0.0000 Tw
(where) Tj
/F20 10 Tf
0.0000 Tw
( <condition expression> ]  ) Tj
/F20 10 Tf
1 0 0 1 100.0 420.0 Tm
0.0000 Tw
(<aggregate> ) Tj
/F20 10 Tf
1 0 0 1 100.0 408.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(sum) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(maximum) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(max) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(minimum) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(min) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(avg) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(mean) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(first) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(last) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(distinct) Tj
/F20 10 Tf
0.0000 Tw
(  ) Tj
/F20 10 Tf
1 0 0 1 100.0 396.0 Tm
0.0000 Tw
(| ) Tj
/F21 10 Tf
0.0000 Tw
(sum_distinct) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(avg_distinct) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(count_distinct) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 100.0 384.0 Tm
0.0000 Tw
(| ) Tj
/F21 10 Tf
0.0000 Tw
(median) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(variance) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(stddev) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(range) Tj
/F20 10 Tf
0.0000 Tw
( | ) Tj
/F21 10 Tf
0.0000 Tw
(mode) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 100.0 372.0 Tm
0.0000 Tw
(| ) Tj
/F21 10 Tf
0.0000 Tw
(values_all) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<delim>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ] | ) Tj
/F21 10 Tf
0.0000 Tw
(values_uniq) Tj
/F20 10 Tf
0.0000 Tw
( [ ) Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<delim>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ]  ) Tj
/F20 10 Tf
1 0 0 1 100.0 348.0 Tm
0.0000 Tw
(<input field name> ) Tj
/F20 10 Tf
1 0 0 1 100.0 336.0 Tm
0.0000 Tw
(Any field specified in the input section. ) Tj
/F20 10 Tf
1 0 0 1 100.0 312.0 Tm
0.0000 Tw
(<calculation expression> ) Tj
/F20 10 Tf
1 0 0 1 100.0 300.0 Tm
3.1438 Tw
(Any valid Perl expression, including input and output field names, and Pequel macros. This) Tj
1 0 0 1 100.0 288.0 Tm
3.0438 Tw
(expression can consist of numeric calculations, using arithmetic operators \() Tj
/F10 10 Tf
3.0438 Tw
(+) Tj
/F20 10 Tf
3.0438 Tw
(, ) Tj
/F10 10 Tf
3.0438 Tw
(*) Tj
/F20 10 Tf
3.0438 Tw
(, ) Tj
/F10 10 Tf
3.0438 Tw
(-) Tj
/F20 10 Tf
3.0438 Tw
(, etc\) and) Tj
1 0 0 1 100.0 276.0 Tm
3.1477 Tw
(functions \() Tj
/F10 10 Tf
3.1477 Tw
(abs) Tj
/F20 10 Tf
3.1477 Tw
(, ) Tj
/F10 10 Tf
3.1477 Tw
(int) Tj
/F20 10 Tf
3.1477 Tw
(, ) Tj
/F10 10 Tf
3.1477 Tw
(rand) Tj
/F20 10 Tf
3.1477 Tw
(, ) Tj
/F10 10 Tf
3.1477 Tw
(sqrt) Tj
/F20 10 Tf
3.1477 Tw
(, etc.\), string calculations, using string operators \(eg. ) Tj
/F10 10 Tf
3.1477 Tw
(.) Tj
/F20 10 Tf
3.1477 Tw
( for) Tj
1 0 0 1 100.0 264.0 Tm
0.0000 Tw
(concatenation\) and functions \() Tj
/F10 10 Tf
0.0000 Tw
(uc) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(lc) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(substr) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(length) Tj
/F20 10 Tf
0.0000 Tw
(, etc.\). ) Tj
/F20 10 Tf
1 0 0 1 100.0 240.0 Tm
0.0000 Tw
(<condition expresion> ) Tj
/F20 10 Tf
1 0 0 1 100.0 228.0 Tm
3.3138 Tw
(Any valid Perl expression, including input and output field names, and Pequel macros, that) Tj
1 0 0 1 100.0 216.0 Tm
0.0000 Tw
(evaluates to true \(non-zero\) or false \(zero\). ) Tj
/F21 10 Tf
1 0 0 1 52.0 174.0 Tm
0.0000 Tw
(Aggregates ) Tj
/F20 10 Tf
1 0 0 1 76.0 159.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(sum) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 147.6 Tm
0.0000 Tw
(Accumulate the total for all values in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
( or ) Tj
/F23 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 121.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(sum_distinct) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 109.2 Tm
0.2675 Tw
(Accumulate the total for ) Tj
/F22 10 Tf
0.2675 Tw
(distinct) Tj
/F20 10 Tf
0.2675 Tw
( values only in the group. Output type must be ) Tj
/F23 10 Tf
0.2675 Tw
(numeric) Tj
/F20 10 Tf
0.2675 Tw
(, ) Tj
/F23 10 Tf
0.2675 Tw
(decimal) Tj
/F20 10 Tf
0.2675 Tw
( or ) Tj
/F23 10 Tf
0.2675 Tw
(date) Tj
/F20 10 Tf
0.2675 Tw
(.) Tj
/F20 10 Tf
1 0 0 1 76.0 70.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(maximum | max) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(20) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
95 0 obj
8608
endobj
96 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
97 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 96 0 R
/Contents 94 0 R
>>
endobj
98 0 obj
<<
/Length 99 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
(Output the maximum value in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
( or ) Tj
/F23 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 753.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(minimum | min ) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.0000 Tw
(Output the minimum value in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
( or ) Tj
/F23 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 715.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(avg | mean) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 703.2 Tm
0.0000 Tw
(Output the average value in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(decimal) Tj
/F20 10 Tf
0.0000 Tw
( or ) Tj
/F23 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 676.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(avg_distinct) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 664.8 Tm
0.3488 Tw
(Output the average value for ) Tj
/F22 10 Tf
0.3488 Tw
(distinct) Tj
/F20 10 Tf
0.3488 Tw
( values only in the group. Output type must be ) Tj
/F23 10 Tf
0.3488 Tw
(numeric) Tj
/F20 10 Tf
0.3488 Tw
(, ) Tj
/F23 10 Tf
0.3488 Tw
(decimal) Tj
/F20 10 Tf
0.3488 Tw
( or) Tj
1 0 0 1 76.0 652.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 626.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(first) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.4 Tm
0.0000 Tw
(Output the first value in the group. ) Tj
/F20 10 Tf
1 0 0 1 76.0 588.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(last) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 576.0 Tm
0.0000 Tw
(Output the last value in the group. ) Tj
/F20 10 Tf
1 0 0 1 76.0 549.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(count_distinct | distinct) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 537.6 Tm
0.0000 Tw
(Output the count of unique values in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 511.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(median) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 499.2 Tm
0.6926 Tw
(The median is the middle of a distribution: half the scores are above the median and half are below the) Tj
1 0 0 1 76.0 487.2 Tm
0.2700 Tw
(median. When there is an odd number of values, the median is simply the middle number. When there is) Tj
1 0 0 1 76.0 475.2 Tm
1.4722 Tw
(an even number of values, the median is the mean of the two middle numbers. Output type must be) Tj
1 0 0 1 76.0 463.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 436.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(variance) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 424.8 Tm
1.7147 Tw
(Variance is calculated as follows: \() Tj
/F22 10 Tf
1.7147 Tw
(sum_squares) Tj
/F20 10 Tf
1.7147 Tw
( / ) Tj
/F22 10 Tf
1.7147 Tw
(count) Tj
/F20 10 Tf
1.7147 Tw
(\) - \() Tj
/F22 10 Tf
1.7147 Tw
(mean) Tj
/F20 10 Tf
1.7147 Tw
( ** 2\), where ) Tj
/F22 10 Tf
1.7147 Tw
(sum_squares) Tj
/F20 10 Tf
1.7147 Tw
( is each) Tj
1 0 0 1 76.0 412.8 Tm
2.6388 Tw
(value in the distribution squared \(** 2\); ) Tj
/F22 10 Tf
2.6388 Tw
(count) Tj
/F20 10 Tf
2.6388 Tw
( is the number of values in the distribution; ) Tj
/F22 10 Tf
2.6388 Tw
(mean) Tj
/F20 10 Tf
2.6388 Tw
( is) Tj
1 0 0 1 76.0 400.8 Tm
0.0000 Tw
(discussed above. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 374.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(stddev) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 362.4 Tm
0.0000 Tw
(Stddev is calculated as the square-root of ) Tj
/F22 10 Tf
0.0000 Tw
(variance) Tj
/F20 10 Tf
0.0000 Tw
(. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 336.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(range) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 324.0 Tm
2.4931 Tw
(The range is the maximum value minus the minimum value in a distribution. Output type must be) Tj
1 0 0 1 76.0 312.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 285.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(mode) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 273.6 Tm
1.3811 Tw
(The mode is the most frequently occuring score in a distribution and is used as a measure of central) Tj
1 0 0 1 76.0 261.6 Tm
0.4488 Tw
(tendency. A distribution may have more than one mode, in which case a space delimited list is returned.) Tj
1 0 0 1 76.0 249.6 Tm
0.0000 Tw
(Any output type is valid. ) Tj
/F20 10 Tf
1 0 0 1 76.0 223.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(values_all) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 211.2 Tm
0.5763 Tw
(Output the list of all values in the group. The specified delimiter delimits the list. If not specified then the) Tj
1 0 0 1 76.0 199.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(default_list_delimiter) Tj
/F20 10 Tf
0.0000 Tw
( specified in options is used. ) Tj
/F20 10 Tf
1 0 0 1 76.0 172.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(values_uniq) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 160.8 Tm
0.4228 Tw
(Output the list of unique values in the group. The specified delimiter delimits the list. If not specified then) Tj
1 0 0 1 76.0 148.8 Tm
0.0000 Tw
(the ) Tj
/F23 10 Tf
0.0000 Tw
(default_list_delimiter) Tj
/F20 10 Tf
0.0000 Tw
( specified in options is used. ) Tj
/F20 10 Tf
1 0 0 1 76.0 122.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(serial) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(n) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 110.4 Tm
1.2994 Tw
(Output the next serial number starting from ) Tj
/F22 10 Tf
1.2994 Tw
(n) Tj
/F20 10 Tf
1.2994 Tw
(. The serial number will be incremented by one for each) Tj
1 0 0 1 76.0 98.4 Tm
0.0000 Tw
(successive output record. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 72.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(count *) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(21) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
99 0 obj
7639
endobj
100 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
101 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 100 0 R
/Contents 98 0 R
>>
endobj
102 0 obj
<<
/Length 103 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
(Output the count of records in the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 753.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(flag *) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.3989 Tw
(Output ) Tj
/F22 10 Tf
0.3989 Tw
(1) Tj
/F20 10 Tf
0.3989 Tw
( or ) Tj
/F22 10 Tf
0.3989 Tw
(0) Tj
/F20 10 Tf
0.3989 Tw
( depending on the result of the where condition clause. If no where clause is specified then) Tj
1 0 0 1 76.0 729.6 Tm
0.9759 Tw
(the output value is set to ) Tj
/F22 10 Tf
0.9759 Tw
(1) Tj
/F20 10 Tf
0.9759 Tw
(. The output will be set to ) Tj
/F22 10 Tf
0.9759 Tw
(1) Tj
/F20 10 Tf
0.9759 Tw
( if the where condition evaluates to true at least) Tj
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
(once for all records within the group. Output type must be ) Tj
/F23 10 Tf
0.0000 Tw
(numeric) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(corr) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Returns the coefficient of correlation of a set of number pairs.                         ) Tj
/F20 10 Tf
1 0 0 1 76.0 652.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(covar_pop) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 640.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Returns the population covariance of a set of number pairs.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(covar_samp) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 602.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Returns the sample covariance of a set of number pairs. ) Tj
/F20 10 Tf
1 0 0 1 76.0 576.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(cume_dist) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 564.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Calculates the cumulative distribution of a value in a group of values.              ) Tj
/F20 10 Tf
1 0 0 1 76.0 537.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(dense_rank) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 525.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Computes the rank of a row in an ordered group of rows. ) Tj
/F20 10 Tf
1 0 0 1 76.0 499.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(rank) Tj
/F20 10 Tf
0.0000 Tw
( <) Tj
/F22 10 Tf
0.0000 Tw
(input field) Tj
/F20 10 Tf
0.0000 Tw
(> ) Tj
/F20 10 Tf
1 0 0 1 76.0 487.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. Calculates the rank of a value in a group of values.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 460.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(=) Tj
/F20 10 Tf
0.0000 Tw
( <calculation expression> ) Tj
/F20 10 Tf
1 0 0 1 76.0 448.8 Tm
2.4900 Tw
(Calculation expression follows. Use this to create output fields that are based on some calculation) Tj
1 0 0 1 76.0 436.8 Tm
1.4571 Tw
(expression. The calculation expression can consist of any valid Perl statement, and can contain input) Tj
1 0 0 1 76.0 424.8 Tm
0.0000 Tw
(field names, output field names and macros. ) Tj
/F20 10 Tf
1 0 0 1 76.0 398.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 382.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 373.8 Tm
0.0000 Tw
(     numeric AAL            AAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 365.4 Tm
0.0000 Tw
(     string  _HELLO         = 'HELLO' ) Tj
/F10 7 Tf
1 0 0 1 76.0 357.0 Tm
0.0000 Tw
(     string  _WORLD         = 'WORLD' ) Tj
/F10 7 Tf
1 0 0 1 76.0 348.6 Tm
0.0000 Tw
(     string  HELLO_WORLD    = _HELLO . ' ' . _WORLD ) Tj
/F10 7 Tf
1 0 0 1 76.0 340.2 Tm
0.0000 Tw
(     decimal _REVENUE       sum REVENUE ) Tj
/F10 7 Tf
1 0 0 1 76.0 331.8 Tm
0.0000 Tw
(     decimal _DISCOUNT      sum DISCOUNT ) Tj
/F10 7 Tf
1 0 0 1 76.0 323.4 Tm
0.0000 Tw
(     decimal INVOICE        = _REVENUE + _DISCOUNT ) Tj
/F21 10 Tf
1 0 0 1 52.0 302.4 Tm
0.0000 Tw
(HAVING SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 290.4 Tm
0.0400 Tw
(The ) Tj
/F23 10 Tf
0.0400 Tw
(having) Tj
/F20 10 Tf
0.0400 Tw
( section is applied after the grouping performed by ) Tj
/F23 10 Tf
0.0400 Tw
(group by) Tj
/F20 10 Tf
0.0400 Tw
(, for filtering groups based on the) Tj
1 0 0 1 76.0 278.4 Tm
0.7436 Tw
(aggregate values. Break processing must be activated using the ) Tj
/F23 10 Tf
0.7436 Tw
(group by) Tj
/F20 10 Tf
0.7436 Tw
( section. The ) Tj
/F23 10 Tf
0.7436 Tw
(having) Tj
/F20 10 Tf
0.7436 Tw
( section) Tj
1 0 0 1 76.0 266.4 Tm
2.0964 Tw
(must appear after the ) Tj
/F23 10 Tf
2.0964 Tw
(output section) Tj
/F20 10 Tf
2.0964 Tw
(. Specify one or more filter expressions. Filter expression can) Tj
1 0 0 1 76.0 254.4 Tm
0.6072 Tw
(consist of any valid Perl statement, and must evaluate to Boolean true or false. It can contain input field) Tj
1 0 0 1 76.0 242.4 Tm
0.7753 Tw
(names, output field names and macros. Only groups that evaluate to true on all filter statements will be) Tj
1 0 0 1 76.0 230.4 Tm
1.6565 Tw
(output; that is, groups that evaluate to false on any one filter statement will be discarded. Each filter) Tj
1 0 0 1 76.0 218.4 Tm
0.0000 Tw
(statement must end with a comma and/or new line. ) Tj
/F20 10 Tf
1 0 0 1 76.0 192.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 180.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(having) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 168.0 Tm
0.0000 Tw
(    <filter expression> [, ...] ) Tj
/F20 10 Tf
1 0 0 1 76.0 141.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 125.4 Tm
0.0000 Tw
( having ) Tj
/F10 7 Tf
1 0 0 1 76.0 117.0 Tm
0.0000 Tw
(     SAMPLE == 1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 108.6 Tm
0.0000 Tw
(     MONTH_1_COUNT > 2 and MONTH_2_COUNT > 2 ) Tj
/F21 10 Tf
1 0 0 1 52.0 87.6 Tm
0.0000 Tw
(SUMMARY SECTION ) Tj
/F20 10 Tf
1 0 0 1 76.0 75.6 Tm
2.9419 Tw
(This section contains any perl code and will be executed once after all input records have been) Tj
1 0 0 1 76.0 63.6 Tm
0.1463 Tw
(processed. Input, output field names, and macros can be used here. This section is mostly relevant when) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(22) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
103 0 obj
6974
endobj
104 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
105 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 104 0 R
/Contents 102 0 R
>>
endobj
106 0 obj
<<
/Length 107 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
1.5235 Tw
() Tj
/F23 10 Tf
1.5235 Tw
(group by) Tj
/F20 10 Tf
1.5235 Tw
( is omitted, so that a ) Tj
/F10 10 Tf
1.5235 Tw
(group all) Tj
/F20 10 Tf
1.5235 Tw
( is in effect. The ) Tj
/F23 10 Tf
1.5235 Tw
(suppress_output) Tj
/F20 10 Tf
1.5235 Tw
( option should also be) Tj
1 0 0 1 76.0 768.0 Tm
0.2542 Tw
(used. If the script contains a ) Tj
/F23 10 Tf
0.2542 Tw
(group by) Tj
/F20 10 Tf
0.2542 Tw
( section and more than one group of records is produced, only the) Tj
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(last group`s values will appear in the summary section. ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(summary section) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 705.6 Tm
0.0000 Tw
(    < Perl code > ) Tj
/F20 10 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 663.0 Tm
0.0000 Tw
( summary section ) Tj
/F10 7 Tf
1 0 0 1 76.0 654.6 Tm
0.0000 Tw
(     print "*** Summary Report ***"; ) Tj
/F10 7 Tf
1 0 0 1 76.0 646.2 Tm
0.0000 Tw
(     print "Total number of Products:   ", sprintf\("%12d", COUNT_PRODUCTS\); ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.8 Tm
0.0000 Tw
(     print "Total number of Locations:  ", sprintf\("%12d", COUNT_LOCATIONS\); ) Tj
/F10 7 Tf
1 0 0 1 76.0 629.4 Tm
0.0000 Tw
(     print "*** End of report ***"; ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(23) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
107 0 obj
1750
endobj
108 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
109 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 108 0 R
/Contents 106 0 R
>>
endobj
110 0 obj
<<
/Length 111 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(GENERATED PROGRAM OUTLINE ) Tj
/F20 10 Tf
1 0 0 1 76.0 732.7 Tm
0.0000 Tw
() Tj
ET
q
76 733.72 4 4 re
f
Q
BT
1 0 0 1 84 732.72 Tm
/F20 10 Tf
0.0000 Tw
(Open Input Stream ) Tj
/F20 10 Tf
1 0 0 1 76.0 718.3 Tm
0.0000 Tw
() Tj
ET
q
76 719.32 4 4 re
f
Q
BT
1 0 0 1 84 718.32 Tm
/F20 10 Tf
0.0000 Tw
(Load/Connect Tables ) Tj
/F20 10 Tf
1 0 0 1 76.0 703.9 Tm
0.0000 Tw
() Tj
ET
q
76 704.92 4 4 re
f
Q
BT
1 0 0 1 84 703.92 Tm
/F20 10 Tf
0.0000 Tw
(Read Next Input Record ) Tj
/F20 10 Tf
1 0 0 1 76.0 689.5 Tm
0.0000 Tw
() Tj
ET
q
76 690.52 4 4 re
f
Q
BT
1 0 0 1 84 689.52 Tm
/F20 10 Tf
0.0000 Tw
(Output Aggregated Record If Grouping Key Changes ) Tj
/F20 10 Tf
1 0 0 1 76.0 675.1 Tm
0.0000 Tw
() Tj
ET
q
76 676.12 4 4 re
f
Q
BT
1 0 0 1 84 675.12 Tm
/F20 10 Tf
0.0000 Tw
(Calculate Derived Input Fields ) Tj
/F20 10 Tf
1 0 0 1 76.0 660.7 Tm
0.0000 Tw
() Tj
ET
q
76 661.72 4 4 re
f
Q
BT
1 0 0 1 84 660.72 Tm
/F20 10 Tf
0.0000 Tw
(Perform Aggregations ) Tj
/F20 10 Tf
1 0 0 1 76.0 646.3 Tm
0.0000 Tw
() Tj
ET
q
76 647.32 4 4 re
f
Q
BT
1 0 0 1 84 646.32 Tm
/F20 10 Tf
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Process Outline:) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 630.1 Tm
0.0000 Tw
(    open input stream ) Tj
/F10 7 Tf
1 0 0 1 76.0 613.3 Tm
0.0000 Tw
(    load tables ) Tj
/F10 7 Tf
1 0 0 1 76.0 596.5 Tm
0.0000 Tw
(    while \(read_input_record\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 579.7 Tm
0.0000 Tw
(        split input record into fields ) Tj
/F10 7 Tf
1 0 0 1 76.0 562.9 Tm
0.0000 Tw
(        pre-process input fields ) Tj
/F10 7 Tf
1 0 0 1 76.0 546.1 Tm
0.0000 Tw
(        if \(grouping_key not equals previous_grouping_key\) then ) Tj
/F10 7 Tf
1 0 0 1 76.0 529.3 Tm
0.0000 Tw
(            post-process output fields ) Tj
/F10 7 Tf
1 0 0 1 76.0 512.5 Tm
0.0000 Tw
(            print aggregated record ) Tj
/F10 7 Tf
1 0 0 1 76.0 495.7 Tm
0.0000 Tw
(            initialize aggregate record buffer ) Tj
/F10 7 Tf
1 0 0 1 76.0 478.9 Tm
0.0000 Tw
(            set previous_grouping_key ) Tj
/F10 7 Tf
1 0 0 1 76.0 462.1 Tm
0.0000 Tw
(         end if ) Tj
/F10 7 Tf
1 0 0 1 76.0 445.3 Tm
0.0000 Tw
(         calculate derived input fields ) Tj
/F10 7 Tf
1 0 0 1 76.0 428.5 Tm
0.0000 Tw
(         perform aggregations ) Tj
/F10 7 Tf
1 0 0 1 76.0 411.7 Tm
0.0000 Tw
(    end while ) Tj
/F10 7 Tf
1 0 0 1 76.0 394.9 Tm
0.0000 Tw
(    post-process output fields ) Tj
/F10 7 Tf
1 0 0 1 76.0 378.1 Tm
0.0000 Tw
(    print \(last\) aggregated record ) Tj
/F10 7 Tf
1 0 0 1 76.0 361.3 Tm
0.0000 Tw
(    close input stream ) Tj
/F10 7 Tf
1 0 0 1 76.0 344.5 Tm
0.0000 Tw
(    close output stream ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(24) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
111 0 obj
2911
endobj
112 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
113 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 112 0 R
/Contents 110 0 R
>>
endobj
114 0 obj
<<
/Length 115 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(ARRAY FIELDS ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(25) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
115 0 obj
365
endobj
116 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
117 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 116 0 R
/Contents 114 0 R
>>
endobj
118 0 obj
<<
/Length 119 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(DATABASE CONNECTIVITY ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 693.6 Tm
0.0000 Tw
(Connecting To Oracle Databases ) Tj
/F20 10 Tf
1 0 0 1 76.0 681.6 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 639.6 Tm
0.0000 Tw
(Connecting To Sqlite Databases ) Tj
/F20 10 Tf
1 0 0 1 76.0 627.6 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52.0 585.6 Tm
0.0000 Tw
(Connecting To Mysql Databases ) Tj
/F20 10 Tf
1 0 0 1 76.0 573.6 Tm
0.0000 Tw
(TBC ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(26) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
119 0 obj
778
endobj
120 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
121 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 120 0 R
/Contents 118 0 R
>>
endobj
122 0 obj
<<
/Length 123 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(MACROS ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.0000 Tw
(Macros are in the format ) Tj
/F23 10 Tf
0.0000 Tw
(&) Tj
/F20 10 Tf
0.0000 Tw
(<macro_name>) Tj
/F23 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<arg_list>) Tj
/F23 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 52.0 705.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&lookup) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 693.6 Tm
1.6944 Tw
(Tables that were built using the ) Tj
/F23 10 Tf
1.6944 Tw
(init table) Tj
/F20 10 Tf
1.6944 Tw
( and ) Tj
/F23 10 Tf
1.6944 Tw
(load table) Tj
/F20 10 Tf
1.6944 Tw
( sections are accessed with the ) Tj
/F23 10 Tf
1.6944 Tw
(&lookup\(\)) Tj
/F20 10 Tf
1 0 0 1 76.0 681.6 Tm
1.6276 Tw
(macro. This macro requires the key as a parameter and will return the matching value. Use the Perl) Tj
1 0 0 1 76.0 669.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(exists\(\)) Tj
/F20 10 Tf
0.0000 Tw
( function to check for just the existence of a key in table, disregarding the value. ) Tj
/F20 10 Tf
1 0 0 1 76.0 643.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 631.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&lookup) Tj
/F20 10 Tf
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<table>, <key>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 607.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&lookup) Tj
/F20 10 Tf
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(\() Tj
/F20 10 Tf
0.0000 Tw
(<table>, <key>) Tj
/F21 10 Tf
0.0000 Tw
(\)-) Tj
/F20 10 Tf
0.0000 Tw
(><field> ) Tj
/F20 10 Tf
1 0 0 1 76.0 580.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 564.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 556.2 Tm
0.0000 Tw
(     GROUP => MONTH_CALLDATE <= 6 ? 1 : 2, ) Tj
/F10 7 Tf
1 0 0 1 76.0 547.8 Tm
0.0000 Tw
(     POSTCODE => &lookup\(POSTCODES, AAL\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 539.4 Tm
0.0000 Tw
(     IN_SAMPLE => exists &lookup\(ZIPSAMPLE, ZIP\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 531.0 Tm
0.0000 Tw
(     IN_SAMPLE_2 => exists &lookup\(ZIPSAMPLE, ZIP\) ? 'yes': 'no' ) Tj
/F10 7 Tf
1 0 0 1 76.0 522.6 Tm
0.0000 Tw
(     STREET => &lookup\(POSTCODES, AAL\)->STREET_NAME ) Tj
/F21 10 Tf
1 0 0 1 52.0 501.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&date) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 489.6 Tm
2.3083 Tw
(Use the ) Tj
/F23 10 Tf
2.3083 Tw
(&date\(\)) Tj
/F20 10 Tf
2.3083 Tw
( macro to indicate field value is a date. This is required when using date fields in) Tj
1 0 0 1 76.0 477.6 Tm
4.0658 Tw
(arithmetic calculations and expressions. The ) Tj
/F23 10 Tf
4.0658 Tw
(&date\(\)) Tj
/F20 10 Tf
4.0658 Tw
( macro actually converts a date value into) Tj
1 0 0 1 76.0 465.6 Tm
1.1254 Tw
() Tj
/F10 10 Tf
1.1254 Tw
(YYYYMMDD) Tj
/F20 10 Tf
1.1254 Tw
( format. The second, optional, argument contains the date format specification. If the format) Tj
1 0 0 1 76.0 453.6 Tm
0.9150 Tw
(specification is omitted then the ) Tj
/F23 10 Tf
0.9150 Tw
(default_datetype) Tj
/F20 10 Tf
0.9150 Tw
( option specification is used. The format specification) Tj
1 0 0 1 76.0 441.6 Tm
2.1024 Tw
(describes the positions and lengths of the day \() Tj
/F10 10 Tf
2.1024 Tw
(D) Tj
/F20 10 Tf
2.1024 Tw
(\), month \() Tj
/F10 10 Tf
2.1024 Tw
(M) Tj
/F20 10 Tf
2.1024 Tw
(\), and year \() Tj
/F10 10 Tf
2.1024 Tw
(Y) Tj
/F20 10 Tf
2.1024 Tw
(\) parts, and any optional) Tj
1 0 0 1 76.0 429.6 Tm
1.3663 Tw
(delimiters. Day and month data must be two digit zero front padded. The ) Tj
/F10 10 Tf
1.3663 Tw
(MMM) Tj
/F20 10 Tf
1.3663 Tw
( month format indicates) Tj
1 0 0 1 76.0 417.6 Tm
3.1193 Tw
(abbreviated three character month name \() Tj
/F10 10 Tf
3.1193 Tw
(JAN) Tj
/F20 10 Tf
3.1193 Tw
(, ) Tj
/F10 10 Tf
3.1193 Tw
(FEB) Tj
/F20 10 Tf
3.1193 Tw
(, ) Tj
/F10 10 Tf
3.1193 Tw
(MAR) Tj
/F20 10 Tf
3.1193 Tw
(, etc\). The delimiter can be any special) Tj
1 0 0 1 76.0 405.6 Tm
1.3379 Tw
(character such as ) Tj
/F10 10 Tf
1.3379 Tw
(/) Tj
/F20 10 Tf
1.3379 Tw
(, ) Tj
/F10 10 Tf
1.3379 Tw
(-) Tj
/F20 10 Tf
1.3379 Tw
(, ) Tj
/F10 10 Tf
1.3379 Tw
(:) Tj
/F20 10 Tf
1.3379 Tw
(, etc. Pequel built-in date types include: ) Tj
/F10 10 Tf
1.3379 Tw
(DD/MM/YYYY) Tj
/F20 10 Tf
1.3379 Tw
(, ) Tj
/F10 10 Tf
1.3379 Tw
(DD/MM/YY) Tj
/F20 10 Tf
1.3379 Tw
(, ) Tj
/F10 10 Tf
1.3379 Tw
(DDMMYY) Tj
/F20 10 Tf
1.3379 Tw
(,) Tj
1 0 0 1 76.0 393.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(DDMMYYYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(DDMMMYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(YYYYMMDD) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(YYMMDD) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(MM/DD/YYYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(MM/DD/YY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(MMDDYYYY) Tj
/F20 10 Tf
0.0000 Tw
(, ) Tj
/F10 10 Tf
0.0000 Tw
(MMDDYY) Tj
/F20 10 Tf
0.0000 Tw
(.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 367.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 355.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&date\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 328.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 312.6 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 76.0 304.2 Tm
0.0000 Tw
(     &date\(SALES_DATE\) >= &date\(01/01/2002\), ) Tj
/F10 7 Tf
1 0 0 1 76.0 295.8 Tm
0.0000 Tw
(     &date\(SALES_DATE\) <= 20023101   ) Tj
/F21 10 Tf
1 0 0 1 52.0 274.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&d) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&m) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&y) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 262.8 Tm
2.3188 Tw
(Returns the day, month and year portion for ) Tj
/F22 10 Tf
2.3188 Tw
(date) Tj
/F20 10 Tf
2.3188 Tw
( field, respectively. The ) Tj
/F23 10 Tf
2.3188 Tw
(&m) Tj
/F20 10 Tf
2.3188 Tw
( macro will return the) Tj
1 0 0 1 76.0 250.8 Tm
0.9100 Tw
(abbreviated month name \() Tj
/F10 10 Tf
0.9100 Tw
(JAN) Tj
/F20 10 Tf
0.9100 Tw
(, ) Tj
/F10 10 Tf
0.9100 Tw
(FEB) Tj
/F20 10 Tf
0.9100 Tw
(, etc\) if the date format contains ) Tj
/F10 10 Tf
0.9100 Tw
(MMM) Tj
/F20 10 Tf
0.9100 Tw
(, otherwise the numeric month) Tj
1 0 0 1 76.0 238.8 Tm
0.0000 Tw
(number is returned. ) Tj
/F20 10 Tf
1 0 0 1 76.0 212.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 200.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&d\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 188.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&m\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 176.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&y\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 150.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 133.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 125.4 Tm
0.0000 Tw
(     DAY_TODAY  =>  &d\(&today\(\)\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 117.0 Tm
0.0000 Tw
(     MOMTH_TODAY  =>  &m\(&today\(\)\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 108.6 Tm
0.0000 Tw
(     YEAR_TODAY  =>  &y\(&today\(\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 87.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&today) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 75.6 Tm
0.0000 Tw
(Returns the current date. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(27) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
123 0 obj
8267
endobj
124 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
125 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 124 0 R
/Contents 122 0 R
>>
endobj
126 0 obj
<<
/Length 127 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&today\() Tj
/F20 10 Tf
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 725.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 717.0 Tm
0.0000 Tw
(     TODAY  =>  &today\(\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 696.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&months_since) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 684.0 Tm
1.7244 Tw
(Returns the number of months between the current date and the date specified in the argument. An) Tj
1 0 0 1 76.0 672.0 Tm
0.0000 Tw
(optional second argument containing the date format specification may be specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 633.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&months_since\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<date_format>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 607.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 591.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 582.6 Tm
0.0000 Tw
(     MONTHS_IN_USE  =>  &months_since\(PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 561.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&add_months) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 549.6 Tm
0.0088 Tw
() Tj
/F22 10 Tf
0.0088 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0088 Tw
(. The ) Tj
/F23 10 Tf
0.0088 Tw
(add_months) Tj
/F20 10 Tf
0.0088 Tw
( macro returns the first argument date ) Tj
/F22 10 Tf
0.0088 Tw
(field) Tj
/F20 10 Tf
0.0088 Tw
( plus ) Tj
/F22 10 Tf
0.0088 Tw
(n) Tj
/F20 10 Tf
0.0088 Tw
( months. The argument ) Tj
/F22 10 Tf
0.0088 Tw
(n) Tj
/F20 10 Tf
1 0 0 1 76.0 537.6 Tm
0.6227 Tw
(can be any integer. If ) Tj
/F22 10 Tf
0.6227 Tw
(field) Tj
/F20 10 Tf
0.6227 Tw
( is the last day of the month or if the resulting month has fewer days than the) Tj
1 0 0 1 76.0 525.6 Tm
0.0926 Tw
(day component of ) Tj
/F22 10 Tf
0.0926 Tw
(field) Tj
/F20 10 Tf
0.0926 Tw
(, then the result is the last day of the resulting month. Otherwise, the result has the) Tj
1 0 0 1 76.0 513.6 Tm
0.0000 Tw
(same day component as ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(.   ) Tj
/F20 10 Tf
1 0 0 1 76.0 487.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 475.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&add_months\() Tj
/F20 10 Tf
0.0000 Tw
(<field> <n>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 448.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 432.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 424.2 Tm
0.0000 Tw
(     NEXT_MONTH  =>  &add_months\(PURCHASE_DATE, 1\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 403.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&months_between) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 391.2 Tm
1.8957 Tw
() Tj
/F22 10 Tf
1.8957 Tw
(New in v2.5) Tj
/F20 10 Tf
1.8957 Tw
(. The ) Tj
/F23 10 Tf
1.8957 Tw
(months_between) Tj
/F20 10 Tf
1.8957 Tw
( macro returns the absolute number of months between the two) Tj
1 0 0 1 76.0 379.2 Tm
0.0000 Tw
(dates ) Tj
/F22 10 Tf
0.0000 Tw
(field-1) Tj
/F20 10 Tf
0.0000 Tw
( and ) Tj
/F22 10 Tf
0.0000 Tw
(field-2) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 352.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 340.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&months_between\() Tj
/F20 10 Tf
0.0000 Tw
(<field-1>, <field-2><n>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 314.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 298.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 289.8 Tm
0.0000 Tw
(     MONTHS_PURCHASE  =>  &months_between\(EARLIEST_PURCHASE_DATE, LATEST_PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 268.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&last_day) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 256.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(last_day) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the last ) Tj
/F22 10 Tf
0.0000 Tw
(day) Tj
/F20 10 Tf
0.0000 Tw
( number for the month in the date ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 230.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 218.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&last_day\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 192.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 175.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 167.4 Tm
0.0000 Tw
(     LAST_DAY  =>  &last_day\(PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 146.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&date_last_day) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 134.4 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(date_last_day) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the ) Tj
/F22 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
( for the last day for the month in the date ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 96.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&date_last_day\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 69.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(28) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
127 0 obj
6409
endobj
128 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
129 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 128 0 R
/Contents 126 0 R
>>
endobj
130 0 obj
<<
/Length 131 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(     LAST_DAY_DATE  =>  &date_last_day\(PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 750.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&date_next_day) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.6 Tm
1.0426 Tw
(The ) Tj
/F23 10 Tf
1.0426 Tw
(date_next_day) Tj
/F20 10 Tf
1.0426 Tw
( macro returns the ) Tj
/F22 10 Tf
1.0426 Tw
(date) Tj
/F20 10 Tf
1.0426 Tw
( for the next day for the month in the date ) Tj
/F22 10 Tf
1.0426 Tw
(field) Tj
/F20 10 Tf
1.0426 Tw
(. If the date) Tj
1 0 0 1 76.0 726.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( is the last day in the month the the returned date will be the first day for the following month. ) Tj
/F20 10 Tf
1 0 0 1 76.0 700.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 688.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&date_next_day\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 661.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(     NEXT_DAY_DATE  =>  &next_day\(PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 616.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&day_number) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 604.2 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(day_number) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the day number within the year for the ) Tj
/F22 10 Tf
0.0000 Tw
(date) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 577.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 565.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&day_number\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 539.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 523.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 514.8 Tm
0.0000 Tw
(     DAY_NUMBER  =>  &day_number\(PURCHASE_DATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 493.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&month) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 481.8 Tm
0.6194 Tw
(Initialise the ) Tj
/F23 10 Tf
0.6194 Tw
(&month) Tj
/F20 10 Tf
0.6194 Tw
( table using the ) Tj
/F23 10 Tf
0.6194 Tw
(init _MONTH) Tj
/F20 10 Tf
0.6194 Tw
( section. Then use the ) Tj
/F23 10 Tf
0.6194 Tw
(&month\(\)) Tj
/F20 10 Tf
0.6194 Tw
( macro to return the) Tj
1 0 0 1 76.0 469.8 Tm
0.0000 Tw
(month number for a date. ) Tj
/F20 10 Tf
1 0 0 1 76.0 443.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 431.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&month\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 405.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 388.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 380.4 Tm
0.0000 Tw
(     MONTH_CALLDATE => &month\(CALLDATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 359.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&period) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 347.4 Tm
0.9294 Tw
(Initialise the ) Tj
/F23 10 Tf
0.9294 Tw
(&period) Tj
/F20 10 Tf
0.9294 Tw
( table using the ) Tj
/F23 10 Tf
0.9294 Tw
(init _PERIOD) Tj
/F20 10 Tf
0.9294 Tw
( section. Then use the ) Tj
/F23 10 Tf
0.9294 Tw
(&period) Tj
/F20 10 Tf
0.9294 Tw
( macro to return the) Tj
1 0 0 1 76.0 335.4 Tm
0.0000 Tw
(month number for a date. ) Tj
/F20 10 Tf
1 0 0 1 76.0 309.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 297.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&period\() Tj
/F20 10 Tf
0.0000 Tw
(<date> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<datefmt>]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 270.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 254.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 246.0 Tm
0.0000 Tw
(     PERIOD_CALLDATE => &period\(CALLDATE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 225.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&select) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 213.0 Tm
1.4920 Tw
(Similar to a ) Tj
/F22 10 Tf
1.4920 Tw
(switch) Tj
/F20 10 Tf
1.4920 Tw
( statement. Parameters consist of a list of expression-value pairs, followed by one) Tj
1 0 0 1 76.0 201.0 Tm
2.8018 Tw
(default value. Each expression is evaluated in turn and the first to evaluate to true will return its) Tj
1 0 0 1 76.0 189.0 Tm
0.0000 Tw
(associated valued, otherwise the default value is returned.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 162.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 150.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&select\() Tj
/F20 10 Tf
0.0000 Tw
(<expr>, <value> [ [, <expr>, <value> ] [ ,...] ], <default value>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 124.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 99.6 Tm
0.0000 Tw
(     HOUSEHOLD_TYPE => &select\(KINSHIP==5, 1, KINSHIP==6, 2, 0\) ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(29) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
131 0 obj
5950
endobj
132 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
133 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 132 0 R
/Contents 130 0 R
>>
endobj
134 0 obj
<<
/Length 135 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&map) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.1400 Tw
(The ) Tj
/F23 10 Tf
0.1400 Tw
(map) Tj
/F20 10 Tf
0.1400 Tw
( macro will process \(lookup\) each element within the array field ) Tj
/F22 10 Tf
0.1400 Tw
(field) Tj
/F20 10 Tf
0.1400 Tw
(, looking up each element in) Tj
1 0 0 1 76.0 756.0 Tm
1.8469 Tw
() Tj
/F22 10 Tf
1.8469 Tw
(table) Tj
/F20 10 Tf
1.8469 Tw
( and setting that element to the looked up value. Returns an array of results. Non-existing key) Tj
1 0 0 1 76.0 744.0 Tm
0.0000 Tw
(values will be mapped to null. ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 705.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&map\() Tj
/F20 10 Tf
0.0000 Tw
(<table>, <field> [, ...] ) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 663.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 654.6 Tm
0.0000 Tw
(     LEISURE_INTEREST => &map\(LI_RECODE, LEISURE_INTEREST_IN\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 633.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&to_array) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 621.6 Tm
0.0333 Tw
() Tj
/F22 10 Tf
0.0333 Tw
(New in v2) Tj
/F20 10 Tf
0.0333 Tw
(. The ) Tj
/F23 10 Tf
0.0333 Tw
(to_array) Tj
/F20 10 Tf
0.0333 Tw
( macro will convert a field value into an array list by splitting the field value on the) Tj
1 0 0 1 76.0 609.6 Tm
0.0000 Tw
(list-delimiter. ) Tj
/F20 10 Tf
1 0 0 1 76.0 583.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 571.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&to_array\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 544.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 528.6 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 520.2 Tm
0.0000 Tw
(     string LEISURE_INTEREST      values_uniq &to_array\(LEISURE_INTEREST_IN\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 499.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_size) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 487.2 Tm
1.0733 Tw
() Tj
/F22 10 Tf
1.0733 Tw
(New in v2) Tj
/F20 10 Tf
1.0733 Tw
(. The ) Tj
/F23 10 Tf
1.0733 Tw
(arr_size) Tj
/F20 10 Tf
1.0733 Tw
( macro will return the total number of elements in the array ) Tj
/F22 10 Tf
1.0733 Tw
(field) Tj
/F20 10 Tf
1.0733 Tw
(, or combined) Tj
1 0 0 1 76.0 475.2 Tm
0.0000 Tw
(arrays if more than one array ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( is specified. ) Tj
/F20 10 Tf
1 0 0 1 76.0 448.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 436.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_size\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 410.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 394.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 385.8 Tm
0.0000 Tw
(     numeric COUNT_PHONES      &arr_size\(PHONE_LIST_1, PHONE_LIST_2\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 364.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_sort) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 352.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(arr_sort) Tj
/F20 10 Tf
0.0000 Tw
( macro will sort the elements within the array field ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 326.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 314.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_sort\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 288.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 271.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 263.4 Tm
0.0000 Tw
(     LEISURE_INTEREST => &arr_sort\(&map\(LI_RECODE, LEISURE_INTEREST_IN\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 242.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_reverse) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 230.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(arr_reverse) Tj
/F20 10 Tf
0.0000 Tw
( macro will return the elements in array ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( in reverse order. ) Tj
/F20 10 Tf
1 0 0 1 76.0 204.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 192.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_reverse\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 165.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 149.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 141.0 Tm
0.0000 Tw
(     LEISURE_INTEREST => &arr_reverse\(&map\(LI_RECODE, LEISURE_INTEREST_IN\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 120.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_first) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
(Returns the first element in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 81.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
135 0 obj
6079
endobj
136 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
137 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 136 0 R
/Contents 134 0 R
>>
endobj
138 0 obj
<<
/Length 139 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_first\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 753.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 737.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 729.0 Tm
0.0000 Tw
(     FIRST_MONTH => &arr_first\(&to_array\(MONTH_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 708.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_last) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 696.0 Tm
0.0000 Tw
(Returns the last element in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 669.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 657.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_last\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 631.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 615.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 606.6 Tm
0.0000 Tw
(     LAST_MONTH => &arr_last\(&to_array\(MONTH_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 585.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_min) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 573.6 Tm
0.0000 Tw
(Returns the element with the minimum \(numeric\) value in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 547.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 535.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_min\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 508.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 492.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 484.2 Tm
0.0000 Tw
(     EARLIEST_MONTH => &arr_min\(&to_array\(MONTH_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 463.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_max) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 451.2 Tm
0.0000 Tw
(Returns the element with the maximum \(numeric\) value in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 424.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 412.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_max\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 386.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 370.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 361.8 Tm
0.0000 Tw
(     LATEST_MONTH => &arr_max\(&to_array\(MONTH_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 340.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_avg) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 328.8 Tm
0.0000 Tw
(Returns the average value for all elements in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 302.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 290.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_avg\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 264.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 247.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 239.4 Tm
0.0000 Tw
(     AVG_PRICE => &arr_avg\(&to_array\(PRICE_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 218.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_sum) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 206.4 Tm
0.0000 Tw
(Returns the total value for all elements in an array field. ) Tj
/F20 10 Tf
1 0 0 1 76.0 180.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 168.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_sum\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 141.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 125.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 117.0 Tm
0.0000 Tw
(     SUM_PRICE => &arr_sum\(PRICE_1, PRICE_2, PRICE_3\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 96.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_median) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 84.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(31) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
139 0 obj
5357
endobj
140 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
141 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 140 0 R
/Contents 138 0 R
>>
endobj
142 0 obj
<<
/Length 143 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_median\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 741.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 711.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_variance) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 699.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 673.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 661.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_variance\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 634.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 604.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_stddev) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 592.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 566.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 554.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_stddev\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 528.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 498.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_range) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 486.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 459.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 447.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_range\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 421.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 391.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_mode) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 379.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 352.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 340.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_mode\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 314.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 284.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_values_uniq) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 272.4 Tm
0.0000 Tw
(Returns the unique values for elements in the array field\(s\) argument. ) Tj
/F20 10 Tf
1 0 0 1 76.0 246.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 234.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_values_uniq\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 207.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 191.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 183.0 Tm
0.0000 Tw
(     UNIQ_LEISURE_INTEREST => &arr_values_uniq\(LEISURE_INTEREST_1, LEISURE_INTEREST_2\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 162.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_shift) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 150.0 Tm
1.6294 Tw
() Tj
/F22 10 Tf
1.6294 Tw
(New in v2) Tj
/F20 10 Tf
1.6294 Tw
(. The ) Tj
/F23 10 Tf
1.6294 Tw
(arr_shift) Tj
/F20 10 Tf
1.6294 Tw
( macro takes the first element of the array and returns it, removing the first) Tj
1 0 0 1 76.0 138.0 Tm
0.0000 Tw
(element and shortening the array ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( by one element, moving everything down one place. ) Tj
/F20 10 Tf
1 0 0 1 76.0 111.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 99.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_shift\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 73.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(32) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
143 0 obj
5453
endobj
144 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
145 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 144 0 R
/Contents 142 0 R
>>
endobj
146 0 obj
<<
/Length 147 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(     FIRST_LEISURE_INTEREST => &arr_shift\(LEISURE_INTEREST\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 750.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_push) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.6 Tm
1.5126 Tw
() Tj
/F22 10 Tf
1.5126 Tw
(New in v2) Tj
/F20 10 Tf
1.5126 Tw
(. The ) Tj
/F23 10 Tf
1.5126 Tw
(arr_push) Tj
/F20 10 Tf
1.5126 Tw
( macro adds ) Tj
/F22 10 Tf
1.5126 Tw
(value) Tj
/F20 10 Tf
1.5126 Tw
( or values to the end of an array ) Tj
/F22 10 Tf
1.5126 Tw
(field) Tj
/F20 10 Tf
1.5126 Tw
( and increases the) Tj
1 0 0 1 76.0 726.6 Tm
0.0000 Tw
(length of the array by the number of elements added, then return the new array. ) Tj
/F20 10 Tf
1 0 0 1 76.0 700.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 688.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_push\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <value> [,...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 661.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(     LEISURE_INTEREST => &arr_push\(ANOTHER_INTEREST\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 616.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_pop) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 604.2 Tm
0.5178 Tw
() Tj
/F22 10 Tf
0.5178 Tw
(New in v2) Tj
/F20 10 Tf
0.5178 Tw
(. The ) Tj
/F23 10 Tf
0.5178 Tw
(arr_pop) Tj
/F20 10 Tf
0.5178 Tw
( macro returns the last element of an array, deleting this last element from ) Tj
/F22 10 Tf
0.5178 Tw
(field) Tj
/F20 10 Tf
0.5178 Tw
(,) Tj
1 0 0 1 76.0 592.2 Tm
0.0000 Tw
(thus shortening the array ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( by one element. ) Tj
/F20 10 Tf
1 0 0 1 76.0 565.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 553.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_pop\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 527.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 511.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 502.8 Tm
0.0000 Tw
(     LAST_LEISURE_INTEREST => &arr_pop\(LEISURE_INTEREST\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 481.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_lookup) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 469.8 Tm
0.3918 Tw
(The ) Tj
/F23 10 Tf
0.3918 Tw
(arr_lookup) Tj
/F20 10 Tf
0.3918 Tw
( macro returns ) Tj
/F10 10 Tf
0.3918 Tw
(1) Tj
/F20 10 Tf
0.3918 Tw
( \(true\) if the 1st parameter value exists in the array 2nd parameter, else) Tj
1 0 0 1 76.0 457.8 Tm
0.0000 Tw
(returns ) Tj
/F10 10 Tf
0.0000 Tw
(0) Tj
/F20 10 Tf
0.0000 Tw
( \(false\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 431.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 419.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_lookup\() Tj
/F20 10 Tf
0.0000 Tw
(<value, array-field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 393.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 376.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 368.4 Tm
0.0000 Tw
(     LAST_LEISURE_INTEREST => &arr_lookup\(14, &to_array\(SOURCE_LIST\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 347.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&extract_init) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 335.4 Tm
0.2847 Tw
(The ) Tj
/F23 10 Tf
0.2847 Tw
(extract_init) Tj
/F20 10 Tf
0.2847 Tw
( macro returns the 1st character of each word in the contents of the parameter. ) Tj
/F22 10 Tf
0.2847 Tw
(field) Tj
/F20 10 Tf
0.2847 Tw
( can) Tj
1 0 0 1 76.0 323.4 Tm
0.1389 Tw
(be any valid expression. An example of usage for this macro is to extract the initials from a full name field.) Tj
/F20 10 Tf
1 0 0 1 76.0 285.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 273.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&extract_init\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 246.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 230.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 222.0 Tm
0.0000 Tw
(     NAME_INITIALS => &extract_init\(FORENAME . ' ' . MIDDLE_NAMES\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 201.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&remove_numeric) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 189.0 Tm
0.0000 Tw
(This macro will remove all numeric characters from the field specified in argument. ) Tj
/F20 10 Tf
1 0 0 1 76.0 162.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 150.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&remove_numeric\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 124.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 99.6 Tm
0.0000 Tw
(     CLEAN_NAME  =>  &remove_numeric\(NAME\) ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(33) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
147 0 obj
5784
endobj
148 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
149 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 148 0 R
/Contents 146 0 R
>>
endobj
150 0 obj
<<
/Length 151 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&remove_special) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
1.5814 Tw
(This macro will remove all special characters from the field specified in argument. Special characters) Tj
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(consist of ) Tj
/F21 10 Tf
0.0000 Tw
(!@#$%^*\(\)\{\}[]:;\\?/+) Tj
/F20 10 Tf
0.0000 Tw
(<>. ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&remove_special\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 675.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 666.6 Tm
0.0000 Tw
(     CLEAN_NAME  =>  &remove_special\(NAME\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 645.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&remove_spaces) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 633.6 Tm
0.0000 Tw
(This macro will remove all space characters from the field specified in argument. ) Tj
/F20 10 Tf
1 0 0 1 76.0 607.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 595.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&remove_spaces\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 568.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 552.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 544.2 Tm
0.0000 Tw
(     CLEAN_NAME  =>  &remove_spaces\(NAME\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 523.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&match) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(&match_all) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 511.2 Tm
0.1979 Tw
(These macros are identical and will return true \(1\) if the ) Tj
/F22 10 Tf
0.1979 Tw
(field) Tj
/F20 10 Tf
0.1979 Tw
( content matches any of the ) Tj
/F22 10 Tf
0.1979 Tw
(match list) Tj
/F20 10 Tf
0.1979 Tw
( items,) Tj
1 0 0 1 76.0 499.2 Tm
0.0000 Tw
(else returns false \(0\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 472.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 460.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&match\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <match list>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 434.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 418.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 409.8 Tm
0.0000 Tw
(     EAST_COAST => &match\(STATE, QLD, NSW, VIC\) ? 'yes' : 'no'; ) Tj
/F21 10 Tf
1 0 0 1 52.0 388.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&remove_non_numeric) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(&extract_numeric) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F23 10 Tf
0.0000 Tw
(&to_number) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 376.8 Tm
2.7114 Tw
(These macros are identical and will remove all non-numeric characters from the field specified in) Tj
1 0 0 1 76.0 364.8 Tm
0.0000 Tw
(argument. ) Tj
/F20 10 Tf
1 0 0 1 76.0 338.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 326.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&extract_numeric\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 300.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 283.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 275.4 Tm
0.0000 Tw
(     CLEAN_SERIAL  =>  &extract_numeric\(SERIAL\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 254.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&length) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 242.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(length) Tj
/F20 10 Tf
0.0000 Tw
( macro will return the length in characters of a field \(string\) value. ) Tj
/F20 10 Tf
1 0 0 1 76.0 216.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 204.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&length\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 177.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 161.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 153.0 Tm
0.0000 Tw
(     NAME_FIELD_LENGTH => &length\(NAME\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 132.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&substr) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 120.0 Tm
1.5485 Tw
() Tj
/F22 10 Tf
1.5485 Tw
(New in v2) Tj
/F20 10 Tf
1.5485 Tw
(. The ) Tj
/F23 10 Tf
1.5485 Tw
(substr) Tj
/F20 10 Tf
1.5485 Tw
( macro extracts a substring of length ) Tj
/F22 10 Tf
1.5485 Tw
(len) Tj
/F20 10 Tf
1.5485 Tw
( out of ) Tj
/F22 10 Tf
1.5485 Tw
(field) Tj
/F20 10 Tf
1.5485 Tw
( and returns it. If ) Tj
/F22 10 Tf
1.5485 Tw
(offset) Tj
/F20 10 Tf
1.5485 Tw
( is) Tj
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
(negative, counts from the end of the string.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 81.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(34) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
151 0 obj
5817
endobj
152 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
153 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 152 0 R
/Contents 150 0 R
>>
endobj
154 0 obj
<<
/Length 155 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&substr\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <offset>, <len>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 753.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 737.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 729.0 Tm
0.0000 Tw
(     LINK_TYPE => &substr\(LINK, 0, 3\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 708.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&index) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 696.0 Tm
0.4424 Tw
() Tj
/F22 10 Tf
0.4424 Tw
(New in v2) Tj
/F20 10 Tf
0.4424 Tw
(. The ) Tj
/F23 10 Tf
0.4424 Tw
(index) Tj
/F20 10 Tf
0.4424 Tw
( macro returns the position of ) Tj
/F22 10 Tf
0.4424 Tw
(substr) Tj
/F20 10 Tf
0.4424 Tw
( in ) Tj
/F22 10 Tf
0.4424 Tw
(field) Tj
/F20 10 Tf
0.4424 Tw
( at or after ) Tj
/F22 10 Tf
0.4424 Tw
(offset) Tj
/F20 10 Tf
0.4424 Tw
(. If the substring is not) Tj
1 0 0 1 76.0 684.0 Tm
0.0000 Tw
(found, returns ) Tj
/F21 10 Tf
0.0000 Tw
(-1) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 657.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&index\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <substr>, <offset>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 619.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 603.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 594.6 Tm
0.0000 Tw
(     HAS ) Tj
/F21 10 Tf
1 0 0 1 52.0 573.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&rindex) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 561.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(rindex) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the postion of the last ) Tj
/F22 10 Tf
0.0000 Tw
(substr) Tj
/F20 10 Tf
0.0000 Tw
( in ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( at or before ) Tj
/F22 10 Tf
0.0000 Tw
(offset) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 535.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 523.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&rindex\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <substr>, <offset>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 496.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 466.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&lc) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 454.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(lc) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the lower case version of ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 428.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 416.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&lc\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 390.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 373.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 365.4 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 357.0 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 348.6 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 340.2 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc_first\(&lc\(FIRST_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 331.8 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(MIDDLE_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 323.4 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(LAST_NAME\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 302.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&lc_first) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 290.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(lc_first) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( with the first character lower case. ) Tj
/F20 10 Tf
1 0 0 1 76.0 264.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 252.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&lc_first\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 225.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 195.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&uc) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 183.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(uc) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the upper case version of ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 157.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 145.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&uc\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 118.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 102.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 94.2 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 85.8 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 77.4 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 69.0 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc\(FIRST_NAME\) \\ ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(35) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
155 0 obj
6180
endobj
156 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
157 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 156 0 R
/Contents 154 0 R
>>
endobj
158 0 obj
<<
/Length 159 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(                        . ' ' .  &uc\(MIDDLE_NAME\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 763.2 Tm
0.0000 Tw
(                        . ' ' .  &uc\(LAST_NAME\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 742.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&uc_first) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 730.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(uc_first) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( with the first character upper case. ) Tj
/F20 10 Tf
1 0 0 1 76.0 703.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&uc_first\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 665.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 649.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 640.8 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 632.4 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 624.0 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 615.6 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc_first\(&lc\(FIRST_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 607.2 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(MIDDLE_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 598.8 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(LAST_NAME\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 577.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&clip_str) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 565.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(clip_str) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( with all ) Tj
/F22 10 Tf
0.0000 Tw
(leading) Tj
/F20 10 Tf
0.0000 Tw
( and ) Tj
/F22 10 Tf
0.0000 Tw
(trailing) Tj
/F20 10 Tf
0.0000 Tw
( spaces removed. ) Tj
/F20 10 Tf
1 0 0 1 76.0 539.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 527.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&clip_str\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 501.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 484.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 476.4 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 468.0 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 459.6 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 451.2 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc_first\(&lc\(&clip_str\(FIRST_NAME\)\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 442.8 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(MIDDLE_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 434.4 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(LAST_NAME\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 413.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&left_clip_str) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 401.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(left_clip_str) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( with all ) Tj
/F22 10 Tf
0.0000 Tw
(leading) Tj
/F20 10 Tf
0.0000 Tw
( spaces removed. ) Tj
/F20 10 Tf
1 0 0 1 76.0 375.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 363.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&left_clip_str\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 336.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 320.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 312.0 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 303.6 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 295.2 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 286.8 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc_first\(&lc\(&left_clip_str\(FIRST_NAME\)\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 278.4 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(MIDDLE_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 270.0 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(LAST_NAME\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 249.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&right_clip_str) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 237.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(right_clip_str) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
( with all ) Tj
/F22 10 Tf
0.0000 Tw
(trailing) Tj
/F20 10 Tf
0.0000 Tw
( spaces removed. ) Tj
/F20 10 Tf
1 0 0 1 76.0 210.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 198.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&right_clip_str\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 172.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 156.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 147.6 Tm
0.0000 Tw
( FIRST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 139.2 Tm
0.0000 Tw
(     MIDDLE_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 130.8 Tm
0.0000 Tw
(     LAST_NAME, ) Tj
/F10 7 Tf
1 0 0 1 76.0 122.4 Tm
0.0000 Tw
(     NAME_FORMATTED =>  &uc_first\(&lc\(&right_clip_str\(FIRST_NAME\)\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 114.0 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(MIDDLE_NAME\)\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 105.6 Tm
0.0000 Tw
(                        . ' ' .  &uc_first\(&lc\(LAST_NAME\)\) ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(36) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
159 0 obj
6372
endobj
160 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
161 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 160 0 R
/Contents 158 0 R
>>
endobj
162 0 obj
<<
/Length 163 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 780.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&left_pad_str) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 768.0 Tm
0.3829 Tw
() Tj
/F22 10 Tf
0.3829 Tw
(New in v2) Tj
/F20 10 Tf
0.3829 Tw
(. The ) Tj
/F23 10 Tf
0.3829 Tw
(left_pad_str) Tj
/F20 10 Tf
0.3829 Tw
( macro returns ) Tj
/F22 10 Tf
0.3829 Tw
(field) Tj
/F20 10 Tf
0.3829 Tw
( padded with the specified pad character on the left, and) Tj
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(up to ) Tj
/F22 10 Tf
0.0000 Tw
(len) Tj
/F20 10 Tf
0.0000 Tw
( maximum length.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&left_pad_str\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <pad-char>, <len>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 675.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 666.6 Tm
0.0000 Tw
( FMT_AMOUNT  => &left_pad_str\(AMOUNT, '*', 16\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 645.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&right_pad_str) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 633.6 Tm
0.6776 Tw
() Tj
/F22 10 Tf
0.6776 Tw
(New in v2) Tj
/F20 10 Tf
0.6776 Tw
(. The ) Tj
/F23 10 Tf
0.6776 Tw
(right_pad) Tj
/F20 10 Tf
0.6776 Tw
( macro returns ) Tj
/F22 10 Tf
0.6776 Tw
(field) Tj
/F20 10 Tf
0.6776 Tw
( padded with the specified pad character on the right, and) Tj
1 0 0 1 76.0 621.6 Tm
0.0000 Tw
(up to ) Tj
/F22 10 Tf
0.0000 Tw
(len) Tj
/F20 10 Tf
0.0000 Tw
( maximum length.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 595.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 583.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&right_pad_str\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <pad-char>, <len>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 556.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 540.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 532.2 Tm
0.0000 Tw
( FMT_NAME  => &right_pad_str\(NAME, ' ', 32\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 511.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&trim) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 499.2 Tm
1.7160 Tw
() Tj
/F22 10 Tf
1.7160 Tw
(New in v2) Tj
/F20 10 Tf
1.7160 Tw
(. The ) Tj
/F23 10 Tf
1.7160 Tw
(trim) Tj
/F20 10 Tf
1.7160 Tw
( macro returns ) Tj
/F22 10 Tf
1.7160 Tw
(field) Tj
/F20 10 Tf
1.7160 Tw
( with the specified leading and trailing ) Tj
/F22 10 Tf
1.7160 Tw
(trim-char) Tj
/F20 10 Tf
1.7160 Tw
( character\(s\)) Tj
1 0 0 1 76.0 487.2 Tm
0.0000 Tw
(removed. If ) Tj
/F22 10 Tf
0.0000 Tw
(trim-char) Tj
/F20 10 Tf
0.0000 Tw
( is not specified, then the default value is space character.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 460.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 448.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&trim\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<trim-char\(s\)> ]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 422.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 406.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 397.8 Tm
0.0000 Tw
( SERIAL  => &trim\(RAW_SERIAL, 0\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 376.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&trim_leading) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 364.8 Tm
2.8354 Tw
() Tj
/F22 10 Tf
2.8354 Tw
(New in v2) Tj
/F20 10 Tf
2.8354 Tw
(. The ) Tj
/F23 10 Tf
2.8354 Tw
(trim_leading) Tj
/F20 10 Tf
2.8354 Tw
( macro returns ) Tj
/F22 10 Tf
2.8354 Tw
(field) Tj
/F20 10 Tf
2.8354 Tw
( with the specified leading ) Tj
/F22 10 Tf
2.8354 Tw
(trim-char) Tj
/F20 10 Tf
2.8354 Tw
( character\(s\)) Tj
1 0 0 1 76.0 352.8 Tm
0.0000 Tw
(removed. If ) Tj
/F22 10 Tf
0.0000 Tw
(trim-char) Tj
/F20 10 Tf
0.0000 Tw
( is not specified, then the default value is space character.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 326.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 314.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&trim_leading\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<trim-char\(s\)> ]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 288.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 271.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 263.4 Tm
0.0000 Tw
( SERIAL  => &trim_leading\(RAW_SERIAL, 0\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 242.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&trim_trailing) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 230.4 Tm
3.1785 Tw
() Tj
/F22 10 Tf
3.1785 Tw
(New in v2) Tj
/F20 10 Tf
3.1785 Tw
(. The ) Tj
/F23 10 Tf
3.1785 Tw
(trim_trailing) Tj
/F20 10 Tf
3.1785 Tw
( macro returns ) Tj
/F22 10 Tf
3.1785 Tw
(field) Tj
/F20 10 Tf
3.1785 Tw
( with the specified trailing ) Tj
/F22 10 Tf
3.1785 Tw
(trim-char) Tj
/F20 10 Tf
3.1785 Tw
( character\(s\)) Tj
1 0 0 1 76.0 218.4 Tm
0.0000 Tw
(removed. If ) Tj
/F22 10 Tf
0.0000 Tw
(trim-char) Tj
/F20 10 Tf
0.0000 Tw
( is not specified, then the default value is space character.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 192.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 180.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&trim_trailing\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<trim-char\(s\)> ]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 153.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 137.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 124.0 129.0 Tm
0.0000 Tw
( SERIAL  => &trim_trailing\(RAW_SERIAL, 0\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 108.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&translate) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 96.0 Tm
0.3022 Tw
() Tj
/F22 10 Tf
0.3022 Tw
(New in v2) Tj
/F20 10 Tf
0.3022 Tw
(.  The ) Tj
/F23 10 Tf
0.3022 Tw
(translate) Tj
/F20 10 Tf
0.3022 Tw
( macro returns the first argument ) Tj
/F22 10 Tf
0.3022 Tw
(field) Tj
/F20 10 Tf
0.3022 Tw
( with all occurrences of each character in) Tj
1 0 0 1 76.0 84.0 Tm
0.2356 Tw
() Tj
/F22 10 Tf
0.2356 Tw
(from_list) Tj
/F20 10 Tf
0.2356 Tw
( replaced by its corresponding character in ) Tj
/F22 10 Tf
0.2356 Tw
(to_list) Tj
/F20 10 Tf
0.2356 Tw
(. Characters in ) Tj
/F22 10 Tf
0.2356 Tw
(field) Tj
/F20 10 Tf
0.2356 Tw
( that are not in ) Tj
/F22 10 Tf
0.2356 Tw
(from_list) Tj
/F20 10 Tf
0.2356 Tw
( are) Tj
1 0 0 1 76.0 72.0 Tm
1.5087 Tw
(not replaced. The argument ) Tj
/F22 10 Tf
1.5087 Tw
(from_list) Tj
/F20 10 Tf
1.5087 Tw
( can contain more characters than ) Tj
/F22 10 Tf
1.5087 Tw
(to_list) Tj
/F20 10 Tf
1.5087 Tw
(. In this case, the extra) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(37) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
163 0 obj
7454
endobj
164 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
165 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 164 0 R
/Contents 162 0 R
>>
endobj
166 0 obj
<<
/Length 167 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.9900 Tw
(characters at the end of ) Tj
/F22 10 Tf
0.9900 Tw
(from_list) Tj
/F20 10 Tf
0.9900 Tw
( have no corresponding characters in ) Tj
/F22 10 Tf
0.9900 Tw
(to_list) Tj
/F20 10 Tf
0.9900 Tw
(. If these extra characters) Tj
1 0 0 1 76.0 768.0 Tm
1.1026 Tw
(appear in ) Tj
/F22 10 Tf
1.1026 Tw
(field) Tj
/F20 10 Tf
1.1026 Tw
(, then they are replaced by the last character in ) Tj
/F22 10 Tf
1.1026 Tw
(to_list) Tj
/F20 10 Tf
1.1026 Tw
(, unless the modifier value of ) Tj
/F22 10 Tf
1.1026 Tw
(d) Tj
/F20 10 Tf
1.1026 Tw
( is) Tj
1 0 0 1 76.0 756.0 Tm
0.0000 Tw
(specified \217 in this case they are removed. ) Tj
/F20 10 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 717.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&translate\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <from-list>, <to-list> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<modifier> ]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 691.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 675.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 666.6 Tm
0.0000 Tw
(     NO_NUM_NAME  =>  &translate\(NAME, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', '0123456789'\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 658.2 Tm
0.0000 Tw
(        # remove number characters from NAME ) Tj
/F10 7 Tf
1 0 0 1 76.0 641.4 Tm
0.0000 Tw
(     ENC_LICENCE  =>  &translate\(LICENCE, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 633.0 Tm
0.0000 Tw
(                                          '9999999999XXXXXXXXXXXXXXXXXXXXXXXXXX'\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 624.6 Tm
0.0000 Tw
(        # encode a field value ) Tj
/F21 10 Tf
1 0 0 1 52.0 603.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&soundex) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 591.6 Tm
1.4186 Tw
() Tj
/F22 10 Tf
1.4186 Tw
(New in v2.5) Tj
/F20 10 Tf
1.4186 Tw
(. The ) Tj
/F23 10 Tf
1.4186 Tw
(soundex) Tj
/F20 10 Tf
1.4186 Tw
( macro returns a character string containing the phonetic representation of) Tj
1 0 0 1 76.0 579.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(field) Tj
/F20 10 Tf
0.0000 Tw
(. This function lets you compare words that are spelled differently, but sound alike in English. ) Tj
/F20 10 Tf
1 0 0 1 76.0 555.6 Tm
1.8150 Tw
(The phonetic representation is defined in The Art of Computer Programming, Volume 3: Sorting and) Tj
1 0 0 1 76.0 543.6 Tm
0.0000 Tw
(Searching, by Donald E. Knuth, as follows: ) Tj
/F10 7 Tf
1 0 0 1 76.0 515.4 Tm
0.0000 Tw
(    Retain the first letter of the string and remove all other occurrences of the following  ) Tj
/F10 7 Tf
1 0 0 1 76.0 507.0 Tm
0.0000 Tw
(    letters: a, e, h, i, o, u, w, y.  ) Tj
/F10 7 Tf
1 0 0 1 76.0 498.6 Tm
0.0000 Tw
(    Assign numbers to the remaining letters \(after the first\) as follows:  ) Tj
/F10 7 Tf
1 0 0 1 76.0 490.2 Tm
0.0000 Tw
(    b, f, p, v = 1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 481.8 Tm
0.0000 Tw
(    c, g, j, k, q, s, x, z = 2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 473.4 Tm
0.0000 Tw
(    d, t = 3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 465.0 Tm
0.0000 Tw
(    l = 4 ) Tj
/F10 7 Tf
1 0 0 1 76.0 456.6 Tm
0.0000 Tw
(    m, n = 5 ) Tj
/F10 7 Tf
1 0 0 1 76.0 448.2 Tm
0.0000 Tw
(    r = 6 ) Tj
/F10 7 Tf
1 0 0 1 76.0 431.4 Tm
0.0000 Tw
(    If two or more letters with the same number were adjacent in the original  ) Tj
/F10 7 Tf
1 0 0 1 76.0 423.0 Tm
0.0000 Tw
(    name \(before step 1\), or adjacent except for any intervening h and w, then  ) Tj
/F10 7 Tf
1 0 0 1 76.0 414.6 Tm
0.0000 Tw
(    omit all but the first.  ) Tj
/F10 7 Tf
1 0 0 1 76.0 406.2 Tm
0.0000 Tw
(    Return the first four bytes padded with 0.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 391.9 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 379.9 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&soundex\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 353.5 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 337.3 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 76.0 328.9 Tm
0.0000 Tw
(     LAST_NAME eq &soundex\(SMYTHE\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 307.9 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&initcap) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 295.9 Tm
0.7044 Tw
() Tj
/F22 10 Tf
0.7044 Tw
(New in v2) Tj
/F20 10 Tf
0.7044 Tw
(. The ) Tj
/F23 10 Tf
0.7044 Tw
(initcap) Tj
/F20 10 Tf
0.7044 Tw
( macro will return the string expression ) Tj
/F22 10 Tf
0.7044 Tw
(exp) Tj
/F20 10 Tf
0.7044 Tw
( with all the words capitalized in their) Tj
1 0 0 1 76.0 283.9 Tm
0.0000 Tw
(first letter \(with the rest of the word in lowercase\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 257.5 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 245.5 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&initcap\() Tj
/F20 10 Tf
0.0000 Tw
(<exp>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 219.1 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 202.9 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 194.5 Tm
0.0000 Tw
(     ADDRESS => &initcap\(join\(' ', ADDRESS_LINE_1, ADDRESS_LINE_2, CITY, STATE, ZIP, COUNTRY\)\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 173.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&banding) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 161.5 Tm
0.1378 Tw
(The ) Tj
/F23 10 Tf
0.1378 Tw
(banding) Tj
/F20 10 Tf
0.1378 Tw
( macro will return the band number \(starting from ) Tj
/F10 10 Tf
0.1378 Tw
(1) Tj
/F20 10 Tf
0.1378 Tw
(\) for ) Tj
/F22 10 Tf
0.1378 Tw
(field) Tj
/F20 10 Tf
0.1378 Tw
(, depending on the value of ) Tj
/F22 10 Tf
0.1378 Tw
(field) Tj
/F20 10 Tf
1 0 0 1 76.0 149.5 Tm
0.7531 Tw
(in relation to the ) Tj
/F22 10 Tf
0.7531 Tw
(band-divisor) Tj
/F20 10 Tf
0.7531 Tw
(. The ) Tj
/F22 10 Tf
0.7531 Tw
(band-divisor) Tj
/F20 10 Tf
0.7531 Tw
( must be a non zero numeric value. The returned band) Tj
1 0 0 1 76.0 137.5 Tm
0.0000 Tw
(number is calculated as ) Tj
/F22 10 Tf
0.0000 Tw
(int\( \( field - 1 \) / band-divisor \) + 1) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 111.1 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 99.1 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&banding\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <band-divisor>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 72.7 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(38) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
167 0 obj
7007
endobj
168 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
169 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 168 0 R
/Contents 166 0 R
>>
endobj
170 0 obj
<<
/Length 171 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(     LAST_SALE_PRICE_BAND => &banding\(%propertyvalue\(CONCATENATED_LINK\)->SALE_PRICE, 50000\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 750.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&env) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(env) Tj
/F20 10 Tf
0.0000 Tw
( macro will return the content of the environment variable ) Tj
/F22 10 Tf
0.0000 Tw
(env_name) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 712.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 700.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&env\() Tj
/F20 10 Tf
0.0000 Tw
(<env_name>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 673.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 657.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 649.2 Tm
0.0000 Tw
(     USER_ID => &env\(USER\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 628.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&option) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 616.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. The ) Tj
/F23 10 Tf
0.0000 Tw
(option) Tj
/F20 10 Tf
0.0000 Tw
( macro will return the value for the Pequel option ) Tj
/F22 10 Tf
0.0000 Tw
(pql_option_name) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 589.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 577.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&option\() Tj
/F20 10 Tf
0.0000 Tw
(<pql_option_name>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 551.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 535.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.8 Tm
0.0000 Tw
(     SCRIPT_VERSION => &option\(doc_version\) ) Tj
/F21 10 Tf
1 0 0 1 52.0 505.8 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&sqrt) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&rand) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&log) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&sin) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&exp) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&cos) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&abs) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&atan2) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&ord) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&chr) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F23 10 Tf
0.0000 Tw
(&int) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 493.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2) Tj
/F20 10 Tf
0.0000 Tw
(. Arithmetic functions. ) Tj
/F20 10 Tf
1 0 0 1 76.0 469.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(sqrt) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the  square root of ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 445.8 Tm
0.1859 Tw
(The ) Tj
/F23 10 Tf
0.1859 Tw
(rand) Tj
/F20 10 Tf
0.1859 Tw
( function returns a random number between 0 and the value of the positive expression ) Tj
/F22 10 Tf
0.1859 Tw
(expr) Tj
/F20 10 Tf
0.1859 Tw
( you) Tj
1 0 0 1 76.0 433.8 Tm
0.0000 Tw
(pass; if you don`t pass an expression, ) Tj
/F23 10 Tf
0.0000 Tw
(rand) Tj
/F20 10 Tf
0.0000 Tw
( uses 1. ) Tj
/F20 10 Tf
1 0 0 1 76.0 409.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(log) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the natural logarithm of an expression. ) Tj
/F20 10 Tf
1 0 0 1 76.0 385.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(sin) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the sine of an expression ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 361.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(exp) Tj
/F20 10 Tf
0.0000 Tw
( macro returns ) Tj
/F22 10 Tf
0.0000 Tw
(e) Tj
/F20 10 Tf
0.0000 Tw
( to the power of ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 337.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(cos) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the cosine of a value in radians \(two pi radians comprise a full circle\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 313.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(abs) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the absolute value of ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 289.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(atan2) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the arctangent of ) Tj
/F21 10 Tf
0.0000 Tw
(Y/X) Tj
/F20 10 Tf
0.0000 Tw
( \(the value returned is between -pi and pi\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 265.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(ord) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the ASCII value of the first character \(only\) of an expression ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 241.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(chr) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the character corresponding to the ASCII number you pass it in ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 217.8 Tm
0.0000 Tw
(The ) Tj
/F23 10 Tf
0.0000 Tw
(int) Tj
/F20 10 Tf
0.0000 Tw
( macro returns the integer \(numeric\) value of ) Tj
/F22 10 Tf
0.0000 Tw
(expr) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 191.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 179.4 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&<macro>\() Tj
/F20 10 Tf
0.0000 Tw
(<expr>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 137.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&sign) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 125.4 Tm
0.9319 Tw
(The ) Tj
/F23 10 Tf
0.9319 Tw
(sign) Tj
/F20 10 Tf
0.9319 Tw
( macro returns -1 if the argument field value is less than zero. If field value is zero , then the) Tj
1 0 0 1 76.0 113.4 Tm
0.0000 Tw
(macro returns 0. If field value is greater than zero, then ) Tj
/F23 10 Tf
0.0000 Tw
(sign) Tj
/F20 10 Tf
0.0000 Tw
( returns 1. ) Tj
/F20 10 Tf
1 0 0 1 76.0 87.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 75.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&sign\() Tj
/F20 10 Tf
0.0000 Tw
(<field>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(39) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
171 0 obj
6915
endobj
172 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
173 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 172 0 R
/Contents 170 0 R
>>
endobj
174 0 obj
<<
/Length 175 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F20 10 Tf
1 0 0 1 76.0 780.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&trunc) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.2200 Tw
(The ) Tj
/F23 10 Tf
0.2200 Tw
(trunc) Tj
/F20 10 Tf
0.2200 Tw
( macro returns the argument field value truncated to ) Tj
/F22 10 Tf
0.2200 Tw
(dec) Tj
/F20 10 Tf
0.2200 Tw
( decimal places. If ) Tj
/F22 10 Tf
0.2200 Tw
(dec) Tj
/F20 10 Tf
0.2200 Tw
( is omitted, then) Tj
1 0 0 1 76.0 726.0 Tm
0.8100 Tw
() Tj
/F22 10 Tf
0.8100 Tw
(field) Tj
/F20 10 Tf
0.8100 Tw
( is truncated to 0 places. ) Tj
/F22 10 Tf
0.8100 Tw
(dec) Tj
/F20 10 Tf
0.8100 Tw
( can be negative to truncate \(make zero\) ) Tj
/F22 10 Tf
0.8100 Tw
(dec) Tj
/F20 10 Tf
0.8100 Tw
( digits left of the decimal) Tj
1 0 0 1 76.0 714.0 Tm
0.0000 Tw
(point. ) Tj
/F20 10 Tf
1 0 0 1 76.0 687.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 675.6 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&trunc\() Tj
/F20 10 Tf
0.0000 Tw
(<field>, <dec>) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 649.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 619.2 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_set_and) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 607.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 580.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 568.8 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_set_and\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 542.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 512.4 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_set_xor) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 500.4 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 474.0 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 462.0 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_set_and\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 435.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52.0 405.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(&arr_set_or) Tj
/F21 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 393.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(New in v2.5) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 76.0 367.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Format) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 355.2 Tm
0.0000 Tw
() Tj
/F21 10 Tf
0.0000 Tw
(&arr_set_or\() Tj
/F20 10 Tf
0.0000 Tw
(<field> [) Tj
/F21 10 Tf
0.0000 Tw
(, ) Tj
/F20 10 Tf
0.0000 Tw
(<field>, ...]) Tj
/F21 10 Tf
0.0000 Tw
(\)) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 328.8 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Examples) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(40) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
175 0 obj
3680
endobj
176 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
177 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 176 0 R
/Contents 174 0 R
>>
endobj
178 0 obj
<<
/Length 179 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(EXAMPLE PEQUEL SCRIPTS ) Tj
/F21 10 Tf
1 0 0 1 52.0 714.0 Tm
0.0000 Tw
(Aggregates Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 702.0 Tm
0.6358 Tw
(Demonstrates aggregation and use of various aggregate function. For each PRODUCT_CODE group of) Tj
1 0 0 1 76.0 690.0 Tm
0 Tw
(records, determine: the minimum COST_PRICE, the maximum COST_PRICE, the average) Tj
1 0 0 1 76.0 678.0 Tm
0 Tw
(SALES_PRICE and SALES_QTY; accumulate the sum of SALES_TOTAL; calculate ) Tj
/F22 10 Tf
0 Tw
(range) Tj
/F20 10 Tf
0 Tw
( for) Tj
1 0 0 1 76.0 666.0 Tm
0.0000 Tw
(COST_PRICE. The input field SALES_TOTAL is a ) Tj
/F22 10 Tf
0.0000 Tw
(derived input field) Tj
/F20 10 Tf
0.0000 Tw
(. ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 629.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 621.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 612.6 Tm
0.0000 Tw
(    nulls ) Tj
/F10 7 Tf
1 0 0 1 76.0 595.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 587.4 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 579.0 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 570.6 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 562.2 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 553.8 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 545.4 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 537.0 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 528.6 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 520.2 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 503.4 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 495.0 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 486.6 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 469.8 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 461.4 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 444.6 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 436.2 Tm
0.0000 Tw
(    string LOCATION           LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 427.8 Tm
0.0000 Tw
(    string PRODUCT_CODE       PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 419.4 Tm
0.0000 Tw
(    decimal MIN_COST_PRICE    min COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 411.0 Tm
0.0000 Tw
(    decimal MAX_COST_PRICE    max COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 402.6 Tm
0.0000 Tw
(    decimal AVG_SALES_PRICE   mean SALES_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 394.2 Tm
0.0000 Tw
(    numeric _AVG_SALES_QTY    mean SALES_QTY ) Tj
/F10 7 Tf
1 0 0 1 76.0 385.8 Tm
0.0000 Tw
(    decimal SALES_TOTAL       sum SALES_TOTAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 377.4 Tm
0.0000 Tw
(    decimal SALES_TOTAL_2     sum SALES_TOTAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 369.0 Tm
0.0000 Tw
(    decimal RANGE_COST        range COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 360.6 Tm
0.0000 Tw
(    numeric MODE_SALES_CODE   mode SALES_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 352.2 Tm
0.0000 Tw
(    numeric AVGS              = _AVG_SALES_QTY * 2 ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(41) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
179 0 obj
3386
endobj
180 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
181 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 180 0 R
/Contents 178 0 R
>>
endobj
182 0 obj
<<
/Length 183 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Apache CLF Log Input Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
1.1387 Tw
(Demonstrates reading Apache CLF Log file \217 split record on space delimiter, parse qouted fields and) Tj
1 0 0 1 76.0 726.0 Tm
1.1725 Tw
(square bracketed fields. This is done by 1\) specifying a space delimiter for the `input_delimiter' and 2\)) Tj
1 0 0 1 76.0 714.0 Tm
1.5807 Tw
(specifying a double qoute \(must be escaped\) characted and a open square bracket character for the) Tj
1 0 0 1 76.0 702.0 Tm
1.0169 Tw
(`input_delimiter_extra' option. This option specifies other characters that may delimit fields.  Pequel will) Tj
1 0 0 1 76.0 690.0 Tm
0.0000 Tw
(match open bracket character specfication with their respective closing bracket. ) Tj
/F20 10 Tf
1 0 0 1 76.0 678.0 Tm
0.3879 Tw
(Requires Inline::C and a C compiler to be installed because the `input_delimiter_extra' option will instruct) Tj
1 0 0 1 76.0 666.0 Tm
0.0000 Tw
(Pequel to generate C code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 629.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 621.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 612.6 Tm
0.0000 Tw
(    nulls ) Tj
/F10 7 Tf
1 0 0 1 76.0 604.2 Tm
0.0000 Tw
(    transfer // Copy input to output ) Tj
/F10 7 Tf
1 0 0 1 76.0 595.8 Tm
0.0000 Tw
(    input_delimiter\( \) // Input delimiter is space. ) Tj
/F10 7 Tf
1 0 0 1 76.0 587.4 Tm
0.0000 Tw
(    input_delimiter_extra\(\\"[\) // For Apache Common Log Format \(CLF\). ) Tj
/F10 7 Tf
1 0 0 1 76.0 579.0 Tm
0.0000 Tw
(    inline_CC\(CC\) // C compiler. ) Tj
/F10 7 Tf
1 0 0 1 76.0 570.6 Tm
0.0000 Tw
(    inline_clean_after_build\(0\) // Pass-through Inline options: ) Tj
/F10 7 Tf
1 0 0 1 76.0 562.2 Tm
0.0000 Tw
(    inline_clean_build_area\(0\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 553.8 Tm
0.0000 Tw
(    inline_print_info\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 545.4 Tm
0.0000 Tw
(    inline_build_noisy\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 537.0 Tm
0.0000 Tw
(    inline_build_timers\(0\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 528.6 Tm
0.0000 Tw
(    inline_force_build\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 520.2 Tm
0.0000 Tw
(    inline_directory\(\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 511.8 Tm
0.0000 Tw
(    inline_optimize\("-xO5 -xinline=%auto"\) // Solaris 64 bit ) Tj
/F10 7 Tf
1 0 0 1 76.0 503.4 Tm
0.0000 Tw
(    inline_ccflags\("-xchip=ultra3 -DSS_64BIT_SERVER -DBIT64 -DMACHINE64"\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 486.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 478.2 Tm
0.0000 Tw
(    IP_ADDRESS, ) Tj
/F10 7 Tf
1 0 0 1 76.0 469.8 Tm
0.0000 Tw
(    TIMESTAMP, ) Tj
/F10 7 Tf
1 0 0 1 76.0 461.4 Tm
0.0000 Tw
(    REQUEST, ) Tj
/F10 7 Tf
1 0 0 1 76.0 453.0 Tm
0.0000 Tw
(    F4, ) Tj
/F10 7 Tf
1 0 0 1 76.0 444.6 Tm
0.0000 Tw
(    F5, ) Tj
/F10 7 Tf
1 0 0 1 76.0 436.2 Tm
0.0000 Tw
(    F6 ) Tj
/F10 7 Tf
1 0 0 1 76.0 419.4 Tm
0.0000 Tw
( output section ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(42) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
183 0 obj
3284
endobj
184 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
185 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 184 0 R
/Contents 182 0 R
>>
endobj
186 0 obj
<<
/Length 187 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Array Fields Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
1.4987 Tw
(Demonstrates the use of array-fields. An array-field is denoted by the preceding `@' character.  The) Tj
1 0 0 1 76.0 726.0 Tm
0.2235 Tw
(`salesman_list' field in this example is an `array field' delimited by the default array field delimiter `,'. Array) Tj
1 0 0 1 76.0 714.0 Tm
0.3489 Tw
(type macros \(&arr_...\) will expect all arguments to be array-fields.  Array macros can also be called as a) Tj
1 0 0 1 76.0 702.0 Tm
0.0000 Tw
(method following the array-field. ) Tj
/F10 7 Tf
1 0 0 1 76.0 673.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 665.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 657.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 648.6 Tm
0.0000 Tw
(    nulls ) Tj
/F10 7 Tf
1 0 0 1 76.0 631.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 623.4 Tm
0.0000 Tw
(    product_code, ) Tj
/F10 7 Tf
1 0 0 1 76.0 615.0 Tm
0.0000 Tw
(    cost_price, ) Tj
/F10 7 Tf
1 0 0 1 76.0 606.6 Tm
0.0000 Tw
(    description, ) Tj
/F10 7 Tf
1 0 0 1 76.0 598.2 Tm
0.0000 Tw
(    sales_code, ) Tj
/F10 7 Tf
1 0 0 1 76.0 589.8 Tm
0.0000 Tw
(    sales_price, ) Tj
/F10 7 Tf
1 0 0 1 76.0 581.4 Tm
0.0000 Tw
(    sales_qty, ) Tj
/F10 7 Tf
1 0 0 1 76.0 573.0 Tm
0.0000 Tw
(    sales_date, ) Tj
/F10 7 Tf
1 0 0 1 76.0 564.6 Tm
0.0000 Tw
(    location, ) Tj
/F10 7 Tf
1 0 0 1 76.0 556.2 Tm
0.0000 Tw
(    salesman_list, ) Tj
/F10 7 Tf
1 0 0 1 76.0 547.8 Tm
0.0000 Tw
(    num_salesmen       => &arr_size\(@salesman_list\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 539.4 Tm
0.0000 Tw
(    salesmen_sorted    => &arr_sort\(salesman_list\) // implicit array -- all array macros expect array param vars ) Tj
/F10 7 Tf
1 0 0 1 76.0 531.0 Tm
0.0000 Tw
(    salesmen_sorted_2  => @salesman_list->sort ) Tj
/F10 7 Tf
1 0 0 1 76.0 522.6 Tm
0.0000 Tw
(    salesmen_uniq      => &arr_values_uniq\(@salesman_list\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 514.2 Tm
0.0000 Tw
(    salesmen_uniq_2    => @salesman_list->values_uniq ) Tj
/F10 7 Tf
1 0 0 1 76.0 505.8 Tm
0.0000 Tw
(    salesmen_reverse   => &arr_reverse\(&arr_sort\(@salesman_list\)\)  ) Tj
/F10 7 Tf
1 0 0 1 76.0 489.0 Tm
0.0000 Tw
(  sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 480.6 Tm
0.0000 Tw
(    product_code ) Tj
/F10 7 Tf
1 0 0 1 76.0 463.8 Tm
0.0000 Tw
(  output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 455.4 Tm
0.0000 Tw
(    string location             location ) Tj
/F10 7 Tf
1 0 0 1 76.0 447.0 Tm
0.0000 Tw
(    string product_code         product_code ) Tj
/F10 7 Tf
1 0 0 1 76.0 438.6 Tm
0.0000 Tw
(    string salesman_list        salesman_list ) Tj
/F10 7 Tf
1 0 0 1 76.0 430.2 Tm
0.0000 Tw
(    numeric num_salesmen        num_salesmen ) Tj
/F10 7 Tf
1 0 0 1 76.0 421.8 Tm
0.0000 Tw
(    string salesmen_sorted      salesmen_sorted ) Tj
/F10 7 Tf
1 0 0 1 76.0 413.4 Tm
0.0000 Tw
(    string salesmen_sorted_2    salesmen_sorted_2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 405.0 Tm
0.0000 Tw
(    string salesmen_uniq        salesmen_uniq ) Tj
/F10 7 Tf
1 0 0 1 76.0 396.6 Tm
0.0000 Tw
(    string salesmen_uniq_2      salesmen_uniq_2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 388.2 Tm
0.0000 Tw
(    string salesmen_reverse     salesmen_reverse ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(43) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
187 0 obj
3571
endobj
188 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
189 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 188 0 R
/Contents 186 0 R
>>
endobj
190 0 obj
<<
/Length 191 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Pequel Script Chaining Example Scripts ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.0500 Tw
(This example demonstrates Pequel script `chaining'. By specifying a pequel script name for the `input_file') Tj
1 0 0 1 76.0 726.0 Tm
1.9006 Tw
(option, the input data stream will result by executing the specified script.  Both scripts are executed) Tj
1 0 0 1 76.0 714.0 Tm
0.9729 Tw
(simultaneously \217 with the input_file script as the child and this script as the parent. Beware of circular) Tj
1 0 0 1 76.0 702.0 Tm
0.1686 Tw
(chaining! It is up to the user to ensure that this does not occur.  Currently, `sort by' is not supported in the) Tj
1 0 0 1 76.0 690.0 Tm
0.0000 Tw
(parent script. ) Tj
/F20 10 Tf
1 0 0 1 76.0 663.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(chain_pequel_pt1.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 647.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 639.0 Tm
0.0000 Tw
(    input_file\(sample.data\)) Tj
1 0 0 1 220.0 639.0 Tm
0.0000 Tw
(// Need to specify this script is used as a pequel-table loader. ) Tj
/F10 7 Tf
1 0 0 1 76.0 630.6 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 613.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 605.4 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 597.0 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 588.6 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 580.2 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 571.8 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 563.4 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 555.0 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 546.6 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 538.2 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 521.4 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 513.0 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 504.6 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 487.8 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 479.4 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 471.0 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 454.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 445.8 Tm
0.0000 Tw
(    string LOCATION         LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 437.4 Tm
0.0000 Tw
(    string PRODUCT_CODE     PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 429.0 Tm
0.0000 Tw
(    decimal SALES_TOTAL     sum SALES_TOTAL ) Tj
/F20 10 Tf
1 0 0 1 76.0 414.7 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(chain_pequel_pt2.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 398.5 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 390.1 Tm
0.0000 Tw
(    input_file\(chain_pequel_pt1.pql\) // Need to specify this script is used as a pequel-table loader. ) Tj
/F10 7 Tf
1 0 0 1 76.0 381.7 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 373.3 Tm
0.0000 Tw
(    hash ) Tj
/F10 7 Tf
1 0 0 1 76.0 364.9 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 348.1 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 339.7 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 331.3 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 322.9 Tm
0.0000 Tw
(    SALES_TOTAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 306.1 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 297.7 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 280.9 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 272.5 Tm
0.0000 Tw
(    string LOCATION             LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 264.1 Tm
0.0000 Tw
(    numeric COUNT_PRODUCT_CODE  distinct PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 255.7 Tm
0.0000 Tw
(    decimal SALES_TOTAL         sum SALES_TOTAL ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(44) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
191 0 obj
4171
endobj
192 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
193 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 192 0 R
/Contents 190 0 R
>>
endobj
194 0 obj
<<
/Length 195 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Conditional Aggregation Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
2.2523 Tw
(Demonstrates the use of conditional aggregations. A conditional aggregate is done with the `where') Tj
1 0 0 1 76.0 726.0 Tm
0.0000 Tw
(clause. This example analyses the COST_PRICE in various ways for the two states: NSW and VIC. ) Tj
/F10 7 Tf
1 0 0 1 76.0 697.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 689.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 681.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 664.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 655.8 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 647.4 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 639.0 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 630.6 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 622.2 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 613.8 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 605.4 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 597.0 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 580.2 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 571.8 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 555.0 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 546.6 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 529.8 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 521.4 Tm
0.0000 Tw
(    string PRODUCT_CODE             PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 513.0 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE          avg COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 504.6 Tm
0.0000 Tw
(    numeric MIN_COST_PRICE          min COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 496.2 Tm
0.0000 Tw
(    numeric MAX_COST_PRICE          max COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 487.8 Tm
0.0000 Tw
(    numeric SUM_COST_PRICE          sum COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 471.0 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE_NSW      avg COST_PRICE where LOCATION eq 'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 462.6 Tm
0.0000 Tw
(    numeric MIN_COST_PRICE_NSW      min COST_PRICE where LOCATION eq 'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 454.2 Tm
0.0000 Tw
(    numeric MAX_COST_PRICE_NSW      max COST_PRICE where LOCATION eq 'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 445.8 Tm
0.0000 Tw
(    numeric SUM_COST_PRICE_NSW      sum COST_PRICE where LOCATION eq 'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 429.0 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE_VIC      avg COST_PRICE where LOCATION eq 'VIC' ) Tj
/F10 7 Tf
1 0 0 1 76.0 420.6 Tm
0.0000 Tw
(    numeric MIN_COST_PRICE_VIC      min COST_PRICE where LOCATION eq 'VIC' ) Tj
/F10 7 Tf
1 0 0 1 76.0 412.2 Tm
0.0000 Tw
(    numeric MAX_COST_PRICE_VIC      max COST_PRICE where LOCATION eq 'VIC' ) Tj
/F10 7 Tf
1 0 0 1 76.0 403.8 Tm
0.0000 Tw
(    numeric SUM_COST_PRICE_VIC      sum COST_PRICE where LOCATION eq 'VIC' ) Tj
/F10 7 Tf
1 0 0 1 76.0 387.0 Tm
0.0000 Tw
(    numeric RANGE_COST_PRICE        = MAX_COST_PRICE - MIN_COST_PRICE ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(45) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
195 0 obj
3390
endobj
196 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
197 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 196 0 R
/Contents 194 0 R
>>
endobj
198 0 obj
<<
/Length 199 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(External Tables Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.8718 Tw
(Demonstrates the use of external tables.  The default method for loading an external table is to embed) Tj
1 0 0 1 76.0 726.0 Tm
0.4038 Tw
(the table contents in the generated code. SAMPLE1 is a example of an embedded table. External tables) Tj
1 0 0 1 76.0 714.0 Tm
0.1000 Tw
(may also be loaded dynamically \(at runtime\) \217 the `_' table name prefix instructs Pequel to load the table) Tj
1 0 0 1 76.0 702.0 Tm
4.2646 Tw
(dynamically. SAMPLE2 is an axample of a dynamic table.  The optional environment variable) Tj
1 0 0 1 76.0 690.0 Tm
0.1173 Tw
(`PEQUEL_TABLE_PATH' may be set to the path for the location of the table data-source-files. This path) Tj
1 0 0 1 76.0 678.0 Tm
0.0000 Tw
(will be used to locate the data-source-files unless the data source filename is an absolute path name. ) Tj
/F10 7 Tf
1 0 0 1 76.0 649.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 641.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 633.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 616.2 Tm
0.0000 Tw
( load table ) Tj
/F10 7 Tf
1 0 0 1 76.0 607.8 Tm
0.0000 Tw
(    // External embedded table -- key is field-1 \(PRODUCT_CODE\). 'STRING' is the key-field ) Tj
/F10 7 Tf
1 0 0 1 76.0 599.4 Tm
0.0000 Tw
(    // type. 'sample.data' is the data-source-file to load the table from. Table has two  ) Tj
/F10 7 Tf
1 0 0 1 76.0 591.0 Tm
0.0000 Tw
(    // columns: DESCRIPTION \(field #3 in source file\), and LOCATION \(#8 in source file\).  ) Tj
/F10 7 Tf
1 0 0 1 76.0 582.6 Tm
0.0000 Tw
(    // The default for loading an external table is to embedd the table contents in the generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 574.2 Tm
0.0000 Tw
(    SAMPLE1 sample.data 1 STRING DESCRIPTION=3 LOCATION=8 ) Tj
/F10 7 Tf
1 0 0 1 76.0 557.4 Tm
0.0000 Tw
( load table ) Tj
/F10 7 Tf
1 0 0 1 76.0 549.0 Tm
0.0000 Tw
(    // External dynamic table. The '_' prefix instructs Pequel ) Tj
/F10 7 Tf
1 0 0 1 76.0 540.6 Tm
0.0000 Tw
(    // to load the table dynamically. ) Tj
/F10 7 Tf
1 0 0 1 76.0 532.2 Tm
0.0000 Tw
(    _SAMPLE2 sample.data 1 STRING DESCRIPTION=3 LOCATION=8 ) Tj
/F10 7 Tf
1 0 0 1 76.0 515.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 507.0 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 498.6 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 490.2 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 481.8 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 473.4 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 465.0 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 456.6 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 448.2 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 439.8 Tm
0.0000 Tw
(    S1_DESCRIPTION => %SAMPLE1\(PRODUCT_CODE\)->DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 431.4 Tm
0.0000 Tw
(    S1_LOCATION => %SAMPLE1\(PRODUCT_CODE\)->LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 423.0 Tm
0.0000 Tw
(    S2_DESCRIPTION => %SAMPLE2\(PRODUCT_CODE\)->DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 414.6 Tm
0.0000 Tw
(    S2_LOCATION => %SAMPLE2\(PRODUCT_CODE\)->LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 397.8 Tm
0.0000 Tw
( sort by  ) Tj
/F10 7 Tf
1 0 0 1 76.0 389.4 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 372.6 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 364.2 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 347.4 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 339.0 Tm
0.0000 Tw
(    string PRODUCT_CODE         PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 330.6 Tm
0.0000 Tw
(    numeric RECORD_COUNT        count * ) Tj
/F10 7 Tf
1 0 0 1 76.0 322.2 Tm
0.0000 Tw
(    numeric SALES_QTY_SAMPLE1   sum SALES_QTY where exists %SAMPLE1\(PRODUCT_CODE\)  ) Tj
/F10 7 Tf
1 0 0 1 76.0 313.8 Tm
0.0000 Tw
(    numeric SALES_QTY_SAMPLE2   sum SALES_QTY where exists %SAMPLE2\(PRODUCT_CODE\)  ) Tj
/F10 7 Tf
1 0 0 1 76.0 305.4 Tm
0.0000 Tw
(    string S1_DESCRIPTION       S1_DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 297.0 Tm
0.0000 Tw
(    string S1_LOCATION          S1_LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 288.6 Tm
0.0000 Tw
(    string S2_DESCRIPTION       S2_DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 280.2 Tm
0.0000 Tw
(    string S2_LOCATION          S2_LOCATION ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(46) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
199 0 obj
4708
endobj
200 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
201 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 200 0 R
/Contents 198 0 R
>>
endobj
202 0 obj
<<
/Length 203 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Filter Regex Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.4264 Tw
(Demonstrates use of filter and Perl regular expressions. The reqular expression can contain Pequel field) Tj
1 0 0 1 76.0 726.0 Tm
1.9019 Tw
(names, macros and table names.  This example also demonstrates the use of a simple `local' table) Tj
1 0 0 1 76.0 714.0 Tm
0.0000 Tw
(\(LOC_DESCRIPT\). ) Tj
/F10 7 Tf
1 0 0 1 76.0 685.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 677.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 669.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 652.2 Tm
0.0000 Tw
( init table ) Tj
/F10 7 Tf
1 0 0 1 76.0 643.8 Tm
0.0000 Tw
( // Table-Name      Key-Value   Field->1                Field-2     Field-3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 635.4 Tm
0.0000 Tw
(    LOC_DESCRIPT    NSW         'New South Wales'       '2061'      '02' ) Tj
/F10 7 Tf
1 0 0 1 76.0 627.0 Tm
0.0000 Tw
(    LOC_DESCRIPT    WA          'Western Australia'     '5008'      '07' ) Tj
/F10 7 Tf
1 0 0 1 76.0 618.6 Tm
0.0000 Tw
(    LOC_DESCRIPT    SA          'South Australia'       '8078'      '08' ) Tj
/F10 7 Tf
1 0 0 1 76.0 601.8 Tm
0.0000 Tw
( filter ) Tj
/F10 7 Tf
1 0 0 1 76.0 593.4 Tm
0.0000 Tw
( // Filter out all records except where LOCATION is 'NSW' or 'WA' or 'SA' ) Tj
/F10 7 Tf
1 0 0 1 76.0 585.0 Tm
0.0000 Tw
(    LOCATION =~ /^NSW$|^WA$|^SA$/ ) Tj
/F10 7 Tf
1 0 0 1 76.0 568.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 559.8 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 551.4 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 543.0 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 534.6 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.2 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 517.8 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 509.4 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 501.0 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 492.6 Tm
0.0000 Tw
(    LDESCRIPT => %LOC_DESCRIPT\(LOCATION\)->1 . " in postcode " . %LOC_DESCRIPT\(LOCATION\)->2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 475.8 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 467.4 Tm
0.0000 Tw
(    SALES_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 450.6 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 442.2 Tm
0.0000 Tw
(    SALES_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 425.4 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 417.0 Tm
0.0000 Tw
(    string SALES_CODE               SALES_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 408.6 Tm
0.0000 Tw
(    string LOC_DESCRIPT             LDESCRIPT ) Tj
/F10 7 Tf
1 0 0 1 76.0 400.2 Tm
0.0000 Tw
(    numeric NUM_PRODUCTS            distinct PRODUCT_CODE  ) Tj
/F10 7 Tf
1 0 0 1 76.0 391.8 Tm
0.0000 Tw
(    string _PRODUCT_CODE            PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 383.4 Tm
0.0000 Tw
(    string PROD_NUM                 = _PRODUCT_CODE . "-" . NUM_PRODUCTS ) Tj
/F10 7 Tf
1 0 0 1 76.0 375.0 Tm
0.0000 Tw
(    string LOC_NSW                  = %LOC_DESCRIPT\(NSW\)->1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 366.6 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE_NSW      avg COST_PRICE where LOCATION eq 'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 358.2 Tm
0.0000 Tw
(    string LOC_WA                   = %LOC_DESCRIPT\(WA\)->1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 349.8 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE_WA       avg COST_PRICE where LOCATION eq 'WA' ) Tj
/F10 7 Tf
1 0 0 1 76.0 341.4 Tm
0.0000 Tw
(    string LOC_SA                   = %LOC_DESCRIPT\(SA\)->1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 333.0 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE_SA       avg COST_PRICE where LOCATION eq 'SA' ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(47) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
203 0 obj
4010
endobj
204 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
205 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 204 0 R
/Contents 202 0 R
>>
endobj
206 0 obj
<<
/Length 207 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Group By Derived Example Scripts ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.2524 Tw
(This example demonstrates the use of a derived \(calculated\) field as the grouping field. In this example it) Tj
1 0 0 1 76.0 726.0 Tm
0.0729 Tw
(is assumed that the input data contains mixed case values for LOCATION.  The `hash' option is important) Tj
1 0 0 1 76.0 714.0 Tm
0.3188 Tw
(here because grouping is based on exact values \217 that is, LOCATION`s `NSW' and `Nsw' are not equal,) Tj
1 0 0 1 76.0 702.0 Tm
0.8833 Tw
(but converting both to upper case make them equal. With the `hash' option, the input data need not be) Tj
1 0 0 1 76.0 690.0 Tm
0.9288 Tw
(sorted because the output is generated in memory using Perl`s associative arrays.  For this reason the) Tj
1 0 0 1 76.0 678.0 Tm
0.3594 Tw
(`hash' option should only be used when the total number of groups is small, depending on the amount of) Tj
1 0 0 1 76.0 666.0 Tm
0.0000 Tw
(available memory.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 639.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Example Script 1) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 623.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 615.0 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 606.6 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 598.2 Tm
0.0000 Tw
(    hash // Required because group-by field is derived. ) Tj
/F10 7 Tf
1 0 0 1 76.0 581.4 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 573.0 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 564.6 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 556.2 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 547.8 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 539.4 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 531.0 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 522.6 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 514.2 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 505.8 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 497.4 Tm
0.0000 Tw
(    FIXED_LOC_CODE => &uc\(LOCATION\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 480.6 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 472.2 Tm
0.0000 Tw
(    FIXED_LOC_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 455.4 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 447.0 Tm
0.0000 Tw
(    string FIXED_LOC_CODE FIXED_LOC_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 438.6 Tm
0.0000 Tw
(    decimal SALES_TOTAL sum SALES_TOTAL ) Tj
/F20 10 Tf
1 0 0 1 76.0 424.3 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(Example Script 2) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 408.1 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 399.7 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 391.3 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 382.9 Tm
0.0000 Tw
(    hash // Required because group-by field is derived. ) Tj
/F10 7 Tf
1 0 0 1 76.0 366.1 Tm
0.0000 Tw
( init table // multi-column local table ) Tj
/F10 7 Tf
1 0 0 1 76.0 357.7 Tm
0.0000 Tw
( // Table-Name  Key-Value    Field->1         Field->2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 349.3 Tm
0.0000 Tw
(    TCITY       'SYD'        'Sydney'         'NSW' ) Tj
/F10 7 Tf
1 0 0 1 76.0 340.9 Tm
0.0000 Tw
(    TCITY       'MEL'        'Melbourne'      'VIC' ) Tj
/F10 7 Tf
1 0 0 1 76.0 332.5 Tm
0.0000 Tw
(    TCITY       'PER'        'Perth'          'WA' ) Tj
/F10 7 Tf
1 0 0 1 76.0 324.1 Tm
0.0000 Tw
(    TCITY       'ALIC'       'Alice Springs'  'NT' ) Tj
/F10 7 Tf
1 0 0 1 76.0 307.3 Tm
0.0000 Tw
( init table // single-column local table ) Tj
/F10 7 Tf
1 0 0 1 76.0 298.9 Tm
0.0000 Tw
( // Table-Name  Key-Value    Field->1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 290.5 Tm
0.0000 Tw
(    TSTATE      'WA'         "Western Australia"  ) Tj
/F10 7 Tf
1 0 0 1 76.0 282.1 Tm
0.0000 Tw
(    TSTATE      'NSW'        "New South Wales"  ) Tj
/F10 7 Tf
1 0 0 1 76.0 273.7 Tm
0.0000 Tw
(    TSTATE      'SA'         'South Australia'  ) Tj
/F10 7 Tf
1 0 0 1 76.0 265.3 Tm
0.0000 Tw
(    TSTATE      'QLD'        'Queensland'   ) Tj
/F10 7 Tf
1 0 0 1 76.0 256.9 Tm
0.0000 Tw
(    TSTATE      'NT'         'Northern Territory'  ) Tj
/F10 7 Tf
1 0 0 1 76.0 248.5 Tm
0.0000 Tw
(    TSTATE      'VIC'        'Victoria'  ) Tj
/F10 7 Tf
1 0 0 1 76.0 231.7 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 223.3 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 214.9 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 206.5 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 198.1 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 189.7 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 181.3 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 172.9 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 164.5 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 156.1 Tm
0.0000 Tw
(    SALES_TOTAL     => SALES_QTY * SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 147.7 Tm
0.0000 Tw
(    FIXED_LOC_CODE  => %TCITY\(LOCATION\)->2 || LOCATION,) Tj
1 0 0 1 316.0 147.7 Tm
0.0000 Tw
(// lookup TCITY, return field-2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 139.3 Tm
0.0000 Tw
(    STATE_NAME      => %TSTATE\(FIXED_LOC_CODE\) // lookup TSTATE, return field-1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 122.5 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 114.1 Tm
0.0000 Tw
(    FIXED_LOC_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 97.3 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 88.9 Tm
0.0000 Tw
(    string  FIXED_LOC_CODE    FIXED_LOC_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 80.5 Tm
0.0000 Tw
(    string  STATE_NAME        STATE_NAME ) Tj
/F10 7 Tf
1 0 0 1 76.0 72.1 Tm
0.0000 Tw
(    decimal SALES_TOTAL       sum SALES_TOTAL ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(48) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
207 0 obj
6172
endobj
208 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
209 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 208 0 R
/Contents 206 0 R
>>
endobj
210 0 obj
<<
/Length 211 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Hash Option Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.8394 Tw
(This example demonstrates the use of the `hash' option. With the `hash' option input data sorting is not) Tj
1 0 0 1 76.0 726.0 Tm
0.1374 Tw
(required \217 the data will be aggregated in memory.  For this reason the `hash' option should only be used) Tj
1 0 0 1 76.0 714.0 Tm
0.0000 Tw
(when the total number of groups is small, depending on the amount of available memory.  ) Tj
/F10 7 Tf
1 0 0 1 76.0 685.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 677.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 669.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 660.6 Tm
0.0000 Tw
(    hash ) Tj
/F10 7 Tf
1 0 0 1 76.0 643.8 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 635.4 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 627.0 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 618.6 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 610.2 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 601.8 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 593.4 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 585.0 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 576.6 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 559.8 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 551.4 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 534.6 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.2 Tm
0.0000 Tw
(    string LOCATION                 LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 517.8 Tm
0.0000 Tw
(    numeric MIN_COST_PRICE          min COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 509.4 Tm
0.0000 Tw
(    numeric MAX_COST_PRICE          max COST_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 501.0 Tm
0.0000 Tw
(    numeric _DISTINCT_SALES_CODE    distinct SALES_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 492.6 Tm
0.0000 Tw
(    string SALES_CODE_1             first SALES_CODE where _DISTINCT_SALES_CODE == 1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 484.2 Tm
0.0000 Tw
(    string SALES_CODE_2             first SALES_CODE where _DISTINCT_SALES_CODE == 2 ) Tj
/F10 7 Tf
1 0 0 1 76.0 475.8 Tm
0.0000 Tw
(    string SALES_CODE_3             first SALES_CODE where _DISTINCT_SALES_CODE == 3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 467.4 Tm
0.0000 Tw
(    string SALES_CODE_4             first SALES_CODE where _DISTINCT_SALES_CODE == 4 ) Tj
/F10 7 Tf
1 0 0 1 76.0 459.0 Tm
0.0000 Tw
(    string SALES_CODE_5             first SALES_CODE where _DISTINCT_SALES_CODE == 5 ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(49) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
211 0 obj
2913
endobj
212 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
213 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 212 0 R
/Contents 210 0 R
>>
endobj
214 0 obj
<<
/Length 215 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Local Table Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
1.2769 Tw
(Demonstrates use of local tables. LOC_DESCRIPT is a local table. Each line in the `init table' section) Tj
1 0 0 1 76.0 726.0 Tm
0.0000 Tw
(contains an entry in this table. Each entry constist of table name, key value, field list values.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 714.0 Tm
0.0000 Tw
(The `%' character is used to denote a table name. The parameter contains the key value to look up. ) Tj
/F10 7 Tf
1 0 0 1 76.0 685.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 677.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 669.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 652.2 Tm
0.0000 Tw
( init table // Local table: ) Tj
/F10 7 Tf
1 0 0 1 76.0 643.8 Tm
0.0000 Tw
( // Table-Name      Key-Value   Field->1 ) Tj
/F10 7 Tf
1 0 0 1 76.0 635.4 Tm
0.0000 Tw
(    LOC_DESCRIPT    NSW         'New South Wales') Tj
1 0 0 1 316.0 635.4 Tm
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 627.0 Tm
0.0000 Tw
(    LOC_DESCRIPT    WA          'Western Australia' ) Tj
/F10 7 Tf
1 0 0 1 76.0 618.6 Tm
0.0000 Tw
(    LOC_DESCRIPT    SYD         'Sydney' ) Tj
/F10 7 Tf
1 0 0 1 76.0 610.2 Tm
0.0000 Tw
(    LOC_DESCRIPT    MEL         'Melbourne' ) Tj
/F10 7 Tf
1 0 0 1 76.0 601.8 Tm
0.0000 Tw
(    LOC_DESCRIPT    SA          'South Australia' ) Tj
/F10 7 Tf
1 0 0 1 76.0 593.4 Tm
0.0000 Tw
(    LOC_DESCRIPT    NT          'Northern Territory' ) Tj
/F10 7 Tf
1 0 0 1 76.0 585.0 Tm
0.0000 Tw
(    LOC_DESCRIPT    QLD         'Queensland' ) Tj
/F10 7 Tf
1 0 0 1 76.0 576.6 Tm
0.0000 Tw
(    LOC_DESCRIPT    VIC         'Victoria' ) Tj
/F10 7 Tf
1 0 0 1 76.0 568.2 Tm
0.0000 Tw
(    LOC_DESCRIPT    PER         'Perth' ) Tj
/F10 7 Tf
1 0 0 1 76.0 559.8 Tm
0.0000 Tw
(    LOC_DESCRIPT    ALIC        'Alice Springs' ) Tj
/F10 7 Tf
1 0 0 1 76.0 543.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 534.6 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 526.2 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 517.8 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 509.4 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 501.0 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 492.6 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 484.2 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 475.8 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 467.4 Tm
0.0000 Tw
(    LDESCRIPT => %LOC_DESCRIPT\(LOCATION\) // Look up LOCATION in the table LOC_DESCRIPT ) Tj
/F10 7 Tf
1 0 0 1 76.0 450.6 Tm
0.0000 Tw
( sort by ) Tj
/F10 7 Tf
1 0 0 1 76.0 442.2 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 425.4 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 417.0 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 400.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 391.8 Tm
0.0000 Tw
(    string LOCATION ) Tj
1 0 0 1 268.0 391.8 Tm
0.0000 Tw
(LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 383.4 Tm
0.0000 Tw
(    string DESCRIPTION) Tj
1 0 0 1 268.0 383.4 Tm
0.0000 Tw
(LDESCRIPT ) Tj
/F10 7 Tf
1 0 0 1 76.0 375.0 Tm
0.0000 Tw
(    numeric NUM_PRODUCTS) Tj
1 0 0 1 268.0 375.0 Tm
0.0000 Tw
(distinct PRODUCT_CODE  ) Tj
/F10 7 Tf
1 0 0 1 76.0 366.6 Tm
0.0000 Tw
(    numeric AVG_COST_PRICE) Tj
1 0 0 1 268.0 366.6 Tm
0.0000 Tw
(avg COST_PRICE ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(50) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
215 0 obj
3721
endobj
216 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
217 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 216 0 R
/Contents 214 0 R
>>
endobj
218 0 obj
<<
/Length 219 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Pequel Tables Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
0.7538 Tw
(This script demonstrates the use of pequel tables. This scipt contains a `load table pequel' section. The) Tj
1 0 0 1 76.0 726.0 Tm
0.7747 Tw
(tables specified in this section will have their data loaded by executing the pequel script specified.  The) Tj
1 0 0 1 76.0 714.0 Tm
0.5470 Tw
(field names for the table columns are as per the load table script output format.  The output format for a) Tj
1 0 0 1 76.0 702.0 Tm
0.4971 Tw
(script can be displayed with the `-list output_format' option on the command line. It is important that any) Tj
1 0 0 1 76.0 690.0 Tm
0.0000 Tw
(Pequel script used in the `load table pequal' to load a table must have an input_file option specification. ) Tj
/F20 10 Tf
1 0 0 1 76.0 663.6 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(pequel_tables.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 647.4 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 639.0 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 630.6 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 613.8 Tm
0.0000 Tw
( load table pequel ) Tj
/F10 7 Tf
1 0 0 1 76.0 605.4 Tm
0.0000 Tw
(    // Data for this table is loaded by executing the Pequel script 'sales_ttl_by_loc.pql'. ) Tj
/F10 7 Tf
1 0 0 1 76.0 597.0 Tm
0.0000 Tw
(    // Pequel tables are loaded dynamically \(at runtime\). ) Tj
/F10 7 Tf
1 0 0 1 76.0 588.6 Tm
0.0000 Tw
(    // LOCATION is the key field. ) Tj
/F10 7 Tf
1 0 0 1 76.0 580.2 Tm
0.0000 Tw
(    TSALESBYLOC sales_ttl_by_loc.pql LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 571.8 Tm
0.0000 Tw
(    TSALESBYPROD sales_ttl_by_prod.pql PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 555.0 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 546.6 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 538.2 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 529.8 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 521.4 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 513.0 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 504.6 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 496.2 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 487.8 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 479.4 Tm
0.0000 Tw
(    SALESBYLOC => %TSALESBYLOC\(LOCATION\)->SALES_TOTAL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 471.0 Tm
0.0000 Tw
(    SALESBYPROD => %TSALESBYPROD\(PRODUCT_CODE\)->SALES_TOTAL, ) Tj
/F10 7 Tf
1 0 0 1 76.0 462.6 Tm
0.0000 Tw
(    COMMENT => %TSALESBYLOC\(LOCATION\)->TOP_PRODUCT eq PRODUCT_CODE ? '**Best Seller' : '' ) Tj
/F10 7 Tf
1 0 0 1 76.0 445.8 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 437.4 Tm
0.0000 Tw
(    string PRODUCT_CODE             PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 429.0 Tm
0.0000 Tw
(    decimal PRODUCT_SALES_TOTAL     SALESBYPROD, ) Tj
/F10 7 Tf
1 0 0 1 76.0 420.6 Tm
0.0000 Tw
(    string LOCATION                 LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 412.2 Tm
0.0000 Tw
(    decimal LOCATION_SALES_TOTAL    SALESBYLOC, ) Tj
/F10 7 Tf
1 0 0 1 76.0 403.8 Tm
0.0000 Tw
(    string COMMENT                  COMMENT, ) Tj
/F20 10 Tf
1 0 0 1 76.0 389.5 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(sales_ttl_by_loc.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 373.3 Tm
0.0000 Tw
( input ) Tj
/F10 7 Tf
1 0 0 1 76.0 364.9 Tm
0.0000 Tw
(    input_file\(sample.data\) // Need to specify this script is used as a pequel-table loader. ) Tj
/F10 7 Tf
1 0 0 1 76.0 356.5 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 348.1 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 339.7 Tm
0.0000 Tw
(    hash // Required because group-by field is derived. ) Tj
/F10 7 Tf
1 0 0 1 76.0 322.9 Tm
0.0000 Tw
( load table pequel ) Tj
/F10 7 Tf
1 0 0 1 76.0 314.5 Tm
0.0000 Tw
(    TTOPPRODBYLOC top_prod_by_loc.pql LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 297.7 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 289.3 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 280.9 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 272.5 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 264.1 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 255.7 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 247.3 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 238.9 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 230.5 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 222.1 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 213.7 Tm
0.0000 Tw
(    TOP_PRODUCT => %TTOPPRODBYLOC\(LOCATION\)->PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 196.9 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 188.5 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 171.7 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 163.3 Tm
0.0000 Tw
(    string LOCATION         LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 154.9 Tm
0.0000 Tw
(    decimal SALES_TOTAL     sum SALES_TOTAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 146.5 Tm
0.0000 Tw
(    string TOP_PRODUCT      TOP_PRODUCT ) Tj
/F20 10 Tf
1 0 0 1 76.0 132.2 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(top_prod_by_loc.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 116.0 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 107.6 Tm
0.0000 Tw
(    input_file\(sample.data\)) Tj
1 0 0 1 220.0 107.6 Tm
0.0000 Tw
(// Need to specify this script is used as a pequel-table loader. ) Tj
/F10 7 Tf
1 0 0 1 76.0 99.2 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 90.8 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 82.4 Tm
0.0000 Tw
(    hash // Required because group-by field is derived. ) Tj
/F10 7 Tf
1 0 0 1 76.0 65.6 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(51) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
219 0 obj
6329
endobj
220 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
221 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 220 0 R
/Contents 218 0 R
>>
endobj
222 0 obj
<<
/Length 223 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 763.2 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 754.8 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 746.4 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 738.0 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 721.2 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 712.8 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 704.4 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 687.6 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
(    LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 662.4 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 654.0 Tm
0.0000 Tw
(    string LOCATION        LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
(    decimal _MAXSALES      max SALES_TOTAL ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(    string PRODUCT_CODE    first PRODUCT_CODE where sprintf\("%.2f", SALES_TOTAL\) \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 628.8 Tm
0.0000 Tw
(                                                 eq sprintf\("%.2f", _MAXSALES\) ) Tj
/F20 10 Tf
1 0 0 1 76.0 614.5 Tm
0.0000 Tw
() Tj
/F22 10 Tf
0.0000 Tw
(sales_ttl_by_prod.pql) Tj
/F20 10 Tf
0.0000 Tw
( ) Tj
/F10 7 Tf
1 0 0 1 76.0 598.3 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 589.9 Tm
0.0000 Tw
(    input_file\(sample.data\) // Need to specify this script is used as a pequel-table loader. ) Tj
/F10 7 Tf
1 0 0 1 76.0 581.5 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 573.1 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 556.3 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 547.9 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 539.5 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 531.1 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 522.7 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 514.3 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 505.9 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 497.5 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 489.1 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 480.7 Tm
0.0000 Tw
(    SALES_TOTAL => SALES_QTY * SALES_PRICE ) Tj
/F10 7 Tf
1 0 0 1 76.0 463.9 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 455.5 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 438.7 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 430.3 Tm
0.0000 Tw
(    string PRODUCT_CODE     PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 421.9 Tm
0.0000 Tw
(    decimal SALES_TOTAL     sum SALES_TOTAL ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(52) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
223 0 obj
3076
endobj
224 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
225 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 224 0 R
/Contents 222 0 R
>>
endobj
226 0 obj
<<
/Length 227 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(Oracle Tables Example Script ) Tj
/F20 10 Tf
1 0 0 1 76.0 738.0 Tm
1.1021 Tw
(Demonstrates the use of external Oracle tables. WARNING: this feature is alpha and would \(probably\)) Tj
1 0 0 1 76.0 726.0 Tm
0.0000 Tw
(require some hand coding adjustments to the generated code. ) Tj
/F20 10 Tf
1 0 0 1 76.0 714.0 Tm
0.0000 Tw
(Requires Inline::C and DBI to be installed.  ) Tj
/F20 10 Tf
1 0 0 1 76.0 702.0 Tm
1.8859 Tw
(The `load table oracle' section will load the ASCII data contained in the file specified by the second) Tj
1 0 0 1 76.0 690.0 Tm
0.6300 Tw
(parameter \(`sample.data' inexample SAMPLE1 below\) into an oracle table. The generated inline C code) Tj
1 0 0 1 76.0 678.0 Tm
2.4288 Tw
(will access this table via Oracle OCI. The Oracle table will be re-created with the same name as) Tj
1 0 0 1 76.0 666.0 Tm
0.9306 Tw
(specified by the first parameter\(`SAMPLE1' in this example\).  The data will be loaded via Oracle sqlldr.) Tj
1 0 0 1 76.0 654.0 Tm
1.0640 Tw
(The 4th parameter KeyLoc specifies the location of the key field in sample.data \(field numbers starting) Tj
1 0 0 1 76.0 642.0 Tm
0.5135 Tw
(from 1\). The next parameter KeyType specifies the Oracle type and size to use when creating the table.) Tj
1 0 0 1 76.0 630.0 Tm
0.8253 Tw
(The Columns list specifies field and field-number \(in the SourceData file\) pairs. The `merge' option can) Tj
1 0 0 1 76.0 618.0 Tm
0.2459 Tw
(be used when the table is sorted by the same key as specified in the `sort by' section. This will result in a) Tj
1 0 0 1 76.0 606.0 Tm
0.0000 Tw
(substantial performance gain when looking up values in the table. ) Tj
/F10 7 Tf
1 0 0 1 76.0 577.8 Tm
0.0000 Tw
( options ) Tj
/F10 7 Tf
1 0 0 1 76.0 569.4 Tm
0.0000 Tw
(    header // \(default\) write header record to output. ) Tj
/F10 7 Tf
1 0 0 1 76.0 561.0 Tm
0.0000 Tw
(    optimize // \(default\) optimize generated code. ) Tj
/F10 7 Tf
1 0 0 1 76.0 552.6 Tm
0.0000 Tw
(    inline_CC\(CC\) // C compiler. ) Tj
/F10 7 Tf
1 0 0 1 76.0 544.2 Tm
0.0000 Tw
(    inline_clean_after_build\(0\) // Pass-through Inline options: ) Tj
/F10 7 Tf
1 0 0 1 76.0 535.8 Tm
0.0000 Tw
(    inline_clean_build_area\(0\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 527.4 Tm
0.0000 Tw
(    inline_print_info\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 519.0 Tm
0.0000 Tw
(    inline_build_noisy\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 510.6 Tm
0.0000 Tw
(    inline_build_timers\(0\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 502.2 Tm
0.0000 Tw
(    inline_force_build\(1\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 493.8 Tm
0.0000 Tw
(    inline_directory\(\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 485.4 Tm
0.0000 Tw
(    inline_optimize\("-xO5 -xinline=%auto"\)) Tj
1 0 0 1 268.0 485.4 Tm
0.0000 Tw
(// Solaris 64 bit ) Tj
/F10 7 Tf
1 0 0 1 76.0 477.0 Tm
0.0000 Tw
(    inline_ccflags\("-xchip=ultra3 -DSS_64BIT_SERVER -DBIT64 -DMACHINE64"\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 460.2 Tm
0.0000 Tw
( load table oracle ) Tj
/F10 7 Tf
1 0 0 1 76.0 451.8 Tm
0.0000 Tw
( // Declare SAMPLE1 table -- all parameters must appear on one line or use line continuation char '\\' ) Tj
/F10 7 Tf
1 0 0 1 76.0 443.4 Tm
0.0000 Tw
( // TableName   SourceData  ConnectString              KeyLoc KeyType      Columns ) Tj
/F10 7 Tf
1 0 0 1 76.0 435.0 Tm
0.0000 Tw
(    SAMPLE1     sample.data 'user/passwd@OSCADEV2'     1      STRING\(12\)   DESCRIPTION=3 \\ ) Tj
/F10 7 Tf
1 0 0 1 76.0 426.6 Tm
0.0000 Tw
(                                                                           LOCATION=8 ) Tj
/F10 7 Tf
1 0 0 1 76.0 409.8 Tm
0.0000 Tw
( load table oracle merge ) Tj
/F10 7 Tf
1 0 0 1 76.0 401.4 Tm
0.0000 Tw
( // TableName   SourceData  ConnectString               KeyLoc  KeyType     Columns ) Tj
/F10 7 Tf
1 0 0 1 76.0 393.0 Tm
0.0000 Tw
(    SAMPLE2     sample.data 'gprsdev/gprsdev@OSCADEV2'  1       STRING\(12\)  DESCRIPTION=3 LOCATION=8 ) Tj
/F10 7 Tf
1 0 0 1 76.0 376.2 Tm
0.0000 Tw
( input section ) Tj
/F10 7 Tf
1 0 0 1 76.0 367.8 Tm
0.0000 Tw
(    PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 359.4 Tm
0.0000 Tw
(    COST_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 351.0 Tm
0.0000 Tw
(    DESCRIPTION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 342.6 Tm
0.0000 Tw
(    SALES_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 334.2 Tm
0.0000 Tw
(    SALES_PRICE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 325.8 Tm
0.0000 Tw
(    SALES_QTY, ) Tj
/F10 7 Tf
1 0 0 1 76.0 317.4 Tm
0.0000 Tw
(    SALES_DATE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 309.0 Tm
0.0000 Tw
(    LOCATION, ) Tj
/F10 7 Tf
1 0 0 1 76.0 300.6 Tm
0.0000 Tw
(    S1_DESCRIPTION => %SAMPLE1\(PRODUCT_CODE\)->DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 292.2 Tm
0.0000 Tw
(    S1_LOCATION => %SAMPLE1\(PRODUCT_CODE\)->LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 283.8 Tm
0.0000 Tw
(    S2_DESCRIPTION => %SAMPLE2\(PRODUCT_CODE\)->DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 275.4 Tm
0.0000 Tw
(    S2_LOCATION => %SAMPLE2\(PRODUCT_CODE\)->LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 258.6 Tm
0.0000 Tw
( sort by  ) Tj
/F10 7 Tf
1 0 0 1 76.0 250.2 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 233.4 Tm
0.0000 Tw
( group by ) Tj
/F10 7 Tf
1 0 0 1 76.0 225.0 Tm
0.0000 Tw
(    PRODUCT_CODE ) Tj
/F10 7 Tf
1 0 0 1 76.0 208.2 Tm
0.0000 Tw
( output section ) Tj
/F10 7 Tf
1 0 0 1 76.0 199.8 Tm
0.0000 Tw
(    string PRODUCT_CODE         PRODUCT_CODE, ) Tj
/F10 7 Tf
1 0 0 1 76.0 191.4 Tm
0.0000 Tw
(    numeric RECORD_COUNT        count * ) Tj
/F10 7 Tf
1 0 0 1 76.0 183.0 Tm
0.0000 Tw
(    numeric SALES_QTY_SAMPLE1   sum SALES_QTY where exists %SAMPLE1\(PRODUCT_CODE\)  ) Tj
/F10 7 Tf
1 0 0 1 76.0 174.6 Tm
0.0000 Tw
(    string S1_DESCRIPTION       S1_DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 166.2 Tm
0.0000 Tw
(    string S1_LOCATION          S1_LOCATION ) Tj
/F10 7 Tf
1 0 0 1 76.0 157.8 Tm
0.0000 Tw
(    numeric SALES_QTY_SAMPLE2   sum SALES_QTY where exists %SAMPLE2\(PRODUCT_CODE\)  ) Tj
/F10 7 Tf
1 0 0 1 76.0 149.4 Tm
0.0000 Tw
(    string S2_DESCRIPTION       S2_DESCRIPTION ) Tj
/F10 7 Tf
1 0 0 1 76.0 141.0 Tm
0.0000 Tw
(    string S2_LOCATION          S2_LOCATION ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(53) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
227 0 obj
6265
endobj
228 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
229 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 228 0 R
/Contents 226 0 R
>>
endobj
230 0 obj
<<
/Length 231 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(INSTALLATION INSTRUCTIONS ) Tj
/F20 10 Tf
1 0 0 1 76.0 735.6 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(Pequel) Tj
/F20 10 Tf
0.0000 Tw
( is installed as a Perl module. ) Tj
/F10 7 Tf
1 0 0 1 76.0 707.4 Tm
0.0000 Tw
(  perl Makefile.PL ) Tj
/F10 7 Tf
1 0 0 1 76.0 699.0 Tm
0.0000 Tw
(  make ) Tj
/F10 7 Tf
1 0 0 1 76.0 690.6 Tm
0.0000 Tw
(  make test ) Tj
/F10 7 Tf
1 0 0 1 76.0 682.2 Tm
0.0000 Tw
(  make install ) Tj
/F20 10 Tf
1 0 0 1 76.0 665.4 Tm
0.0000 Tw
(to specify different perl library path: ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(  perl Makefile.PL PREFIX=/product/perldev/Perl/Modules ) Tj
/F21 10 Tf
1 0 0 1 52.0 616.2 Tm
0.0000 Tw
(Installation Troubleshooting ) Tj
/F20 10 Tf
1 0 0 1 76.0 604.2 Tm
0.7006 Tw
(When installing into non-default directory, i.e., if you used the ) Tj
/F23 10 Tf
0.7006 Tw
(PREFIX) Tj
/F20 10 Tf
0.7006 Tw
(, then you need to \(probably\) set) Tj
1 0 0 1 76.0 592.2 Tm
0.0000 Tw
(the ) Tj
/F23 10 Tf
0.0000 Tw
(PERL_INSTALL_ROOT) Tj
/F20 10 Tf
0.0000 Tw
( environment variable before `make install' ) Tj
/F10 7 Tf
1 0 0 1 76.0 564.0 Tm
0.0000 Tw
(  export PERL_INSTALL_ROOT=/product/perldev/Perl/Modules ) Tj
/F20 10 Tf
1 0 0 1 76.0 547.2 Tm
0.0000 Tw
(set this to whatever you specified for ) Tj
/F23 10 Tf
0.0000 Tw
(PREFIX) Tj
/F20 10 Tf
0.0000 Tw
( above.   ) Tj
/F20 10 Tf
1 0 0 1 76.0 535.2 Tm
0.9533 Tw
(You will also need to set the ) Tj
/F23 10 Tf
0.9533 Tw
(PERL5LIB) Tj
/F20 10 Tf
0.9533 Tw
( and ) Tj
/F23 10 Tf
0.9533 Tw
(PATH) Tj
/F20 10 Tf
0.9533 Tw
( environment variables before executing ) Tj
/F22 10 Tf
0.9533 Tw
(pequel) Tj
/F20 10 Tf
0.9533 Tw
(. To) Tj
1 0 0 1 76.0 523.2 Tm
0.2512 Tw
(set ) Tj
/F23 10 Tf
0.2512 Tw
(PERL5LIB) Tj
/F20 10 Tf
0.2512 Tw
( note the Installing messages displayed during the ) Tj
/F22 10 Tf
0.2512 Tw
(make install) Tj
/F20 10 Tf
0.2512 Tw
(, and set this to the path up) Tj
1 0 0 1 76.0 511.2 Tm
1.7293 Tw
(to and excluding ) Tj
/F22 10 Tf
1.7293 Tw
(pequel) Tj
/F20 10 Tf
1.7293 Tw
(. For ) Tj
/F23 10 Tf
1.7293 Tw
(PATH) Tj
/F20 10 Tf
1.7293 Tw
( add the directory containing the Pequel executable to the PATH) Tj
1 0 0 1 76.0 499.2 Tm
1.2487 Tw
(variable \217 note the installation messages for ) Tj
/F22 10 Tf
1.2487 Tw
(.../bin/pequel) Tj
/F20 10 Tf
1.2487 Tw
( \217 add this path to the ) Tj
/F23 10 Tf
1.2487 Tw
(PATH) Tj
/F20 10 Tf
1.2487 Tw
( environment) Tj
1 0 0 1 76.0 487.2 Tm
0.0000 Tw
(variable. ) Tj
/F21 10 Tf
1 0 0 1 52.0 445.2 Tm
0.0000 Tw
(Example Installation ) Tj
/F10 7 Tf
1 0 0 1 76.0 429.0 Tm
0.0000 Tw
(  > perl Makefile.PL PREFIX=/usr/local/Perl ) Tj
/F10 7 Tf
1 0 0 1 76.0 420.6 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 412.2 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 403.8 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 395.4 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 387.0 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Param ) Tj
/F10 7 Tf
1 0 0 1 76.0 378.6 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 370.2 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 361.8 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Code ) Tj
/F10 7 Tf
1 0 0 1 76.0 353.4 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 345.0 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 336.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Collection ) Tj
/F10 7 Tf
1 0 0 1 76.0 328.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 319.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 311.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Docgen ) Tj
/F10 7 Tf
1 0 0 1 76.0 303.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 294.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 286.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 277.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 269.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Engine::Inline ) Tj
/F10 7 Tf
1 0 0 1 76.0 261.0 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Engine ) Tj
/F10 7 Tf
1 0 0 1 76.0 252.6 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 244.2 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 235.8 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Error ) Tj
/F10 7 Tf
1 0 0 1 76.0 227.4 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 219.0 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 210.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Field ) Tj
/F10 7 Tf
1 0 0 1 76.0 202.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 193.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 185.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Lister ) Tj
/F10 7 Tf
1 0 0 1 76.0 177.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 168.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 160.2 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Main ) Tj
/F10 7 Tf
1 0 0 1 76.0 151.8 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 143.4 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 135.0 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Parse ) Tj
/F10 7 Tf
1 0 0 1 76.0 126.6 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 118.2 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 109.8 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Pod2Pdf ) Tj
/F10 7 Tf
1 0 0 1 76.0 101.4 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 93.0 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 84.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Script ) Tj
/F10 7 Tf
1 0 0 1 76.0 76.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 67.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(54) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
231 0 obj
6264
endobj
232 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
233 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 232 0 R
/Contents 230 0 R
>>
endobj
234 0 obj
<<
/Length 235 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Table ) Tj
/F10 7 Tf
1 0 0 1 76.0 763.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 754.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 746.4 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 738.0 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 729.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Aggregate ) Tj
/F10 7 Tf
1 0 0 1 76.0 721.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 712.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 704.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Date ) Tj
/F10 7 Tf
1 0 0 1 76.0 696.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 687.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 670.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 662.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Db::Oracle ) Tj
/F10 7 Tf
1 0 0 1 76.0 654.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Db::Sqlite ) Tj
/F10 7 Tf
1 0 0 1 76.0 628.8 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Db ) Tj
/F10 7 Tf
1 0 0 1 76.0 620.4 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 612.0 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 603.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Macro ) Tj
/F10 7 Tf
1 0 0 1 76.0 595.2 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 586.8 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 578.4 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Option ) Tj
/F10 7 Tf
1 0 0 1 76.0 570.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 561.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 553.2 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Section ) Tj
/F10 7 Tf
1 0 0 1 76.0 544.8 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 536.4 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 528.0 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 519.6 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 511.2 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Table::Oracle ) Tj
/F10 7 Tf
1 0 0 1 76.0 502.8 Tm
0.0000 Tw
(  Checking if your kit is complete... ) Tj
/F10 7 Tf
1 0 0 1 76.0 494.4 Tm
0.0000 Tw
(  Looks good ) Tj
/F10 7 Tf
1 0 0 1 76.0 486.0 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Table::Sqlite ) Tj
/F10 7 Tf
1 0 0 1 76.0 477.6 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type::Table ) Tj
/F10 7 Tf
1 0 0 1 76.0 469.2 Tm
0.0000 Tw
(  Writing Makefile for Pequel::Type ) Tj
/F10 7 Tf
1 0 0 1 76.0 460.8 Tm
0.0000 Tw
(  Writing Makefile for Pequel ) Tj
/F10 7 Tf
1 0 0 1 76.0 444.0 Tm
0.0000 Tw
(  > make ) Tj
/F10 7 Tf
1 0 0 1 76.0 435.6 Tm
0.0000 Tw
(  cp Param.pm ../lib/Pequel/Param.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 427.2 Tm
0.0000 Tw
(  cp Code.pm ../lib/Pequel/Code.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 418.8 Tm
0.0000 Tw
(  cp Collection.pm ../lib/Pequel/Collection.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 410.4 Tm
0.0000 Tw
(  cp Docgen.pm ../lib/Pequel/Docgen.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 402.0 Tm
0.0000 Tw
(  cp Engine.pm ../lib/Pequel/Engine.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 393.6 Tm
0.0000 Tw
(  cp Inline.pm ../../lib/Pequel/Engine/Inline.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 385.2 Tm
0.0000 Tw
(  cp Error.pm ../lib/Pequel/Error.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 376.8 Tm
0.0000 Tw
(  cp Field.pm ../lib/Pequel/Field.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 368.4 Tm
0.0000 Tw
(  cp Lister.pm ../lib/Pequel/Lister.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 360.0 Tm
0.0000 Tw
(  cp Main.pm ../lib/Pequel/Main.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 351.6 Tm
0.0000 Tw
(  cp Parse.pm ../lib/Pequel/Parse.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 343.2 Tm
0.0000 Tw
(  cp Pod2Pdf.pm ../lib/Pequel/Pod2Pdf.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 334.8 Tm
0.0000 Tw
(  Manifying ../blib/man3/Pequel::Pod2Pdf.3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 326.4 Tm
0.0000 Tw
(  cp Script.pm ../lib/Pequel/Script.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 318.0 Tm
0.0000 Tw
(  cp Table.pm ../lib/Pequel/Table.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 309.6 Tm
0.0000 Tw
(  cp Type.pm ../lib/Pequel/Type.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 301.2 Tm
0.0000 Tw
(  cp Aggregate.pm ../../lib/Pequel/Type/Aggregate.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 292.8 Tm
0.0000 Tw
(  cp Date.pm ../../lib/Pequel/Type/Date.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 284.4 Tm
0.0000 Tw
(  cp Db.pm ../../lib/Pequel/Type/Db.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 276.0 Tm
0.0000 Tw
(  cp Oracle.pm ../../../lib/Pequel/Type/Db/Oracle.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 267.6 Tm
0.0000 Tw
(  cp Sqlite.pm ../../../lib/Pequel/Type/Db/Sqlite.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 259.2 Tm
0.0000 Tw
(  cp Macro.pm ../../lib/Pequel/Type/Macro.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 250.8 Tm
0.0000 Tw
(  cp Option.pm ../../lib/Pequel/Type/Option.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 242.4 Tm
0.0000 Tw
(  cp Section.pm ../../lib/Pequel/Type/Section.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 234.0 Tm
0.0000 Tw
(  cp Table.pm ../../lib/Pequel/Type/Table.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 225.6 Tm
0.0000 Tw
(  cp Oracle.pm ../../../lib/Pequel/Type/Table/Oracle.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 217.2 Tm
0.0000 Tw
(  cp Sqlite.pm ../../../lib/Pequel/Type/Table/Sqlite.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 200.4 Tm
0.0000 Tw
(  > export PERL_INSTALL_ROOT=/usr/local/Perl ) Tj
/F10 7 Tf
1 0 0 1 76.0 192.0 Tm
0.0000 Tw
(  > make test ) Tj
/F10 7 Tf
1 0 0 1 76.0 183.6 Tm
0.0000 Tw
(  t/01_aggregates_1........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 175.2 Tm
0.0000 Tw
(  t/02_array_fields........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 166.8 Tm
0.0000 Tw
(  t/03_conditional_aggr....ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 158.4 Tm
0.0000 Tw
(  t/04_filter_regex........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 150.0 Tm
0.0000 Tw
(  t/05_group_by_derived....ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 141.6 Tm
0.0000 Tw
(  t/06_group_by_derived_2..ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 133.2 Tm
0.0000 Tw
(  t/07_hash_option.........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 124.8 Tm
0.0000 Tw
(  t/08_local_table.........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 116.4 Tm
0.0000 Tw
(  t/09_macro_select........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 108.0 Tm
0.0000 Tw
(  t/10_output_calc_fields..ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 99.6 Tm
0.0000 Tw
(  t/11_statistics_aggr.....ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 91.2 Tm
0.0000 Tw
(  t/12_statistics_aggr_2...ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 82.8 Tm
0.0000 Tw
(  t/13_transfer_option.....ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 74.4 Tm
0.0000 Tw
(  t/14_simple_tables.......ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 66.0 Tm
0.0000 Tw
(  t/15_external_tables.....ok ) Tj
/F10 7 Tf
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(55) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
235 0 obj
7220
endobj
236 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F21 15 0 R
>>
>>
endobj
237 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 236 0 R
/Contents 234 0 R
>>
endobj
238 0 obj
<<
/Length 239 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F10 7 Tf
1 0 0 1 76.0 771.6 Tm
0.0000 Tw
(  t/16_sales_ttl_by_loc....ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 763.2 Tm
0.0000 Tw
(  t/17_pequel_tables.......ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 754.8 Tm
0.0000 Tw
(  t/18_chain_pequel........ok ) Tj
/F10 7 Tf
1 0 0 1 76.0 746.4 Tm
0.0000 Tw
(  All tests successful. ) Tj
/F10 7 Tf
1 0 0 1 76.0 738.0 Tm
0.0000 Tw
(  Files=18, Tests=18, 71 wallclock secs \(64.37 cusr +  6.79 csys = 71.16 CPU\) ) Tj
/F10 7 Tf
1 0 0 1 76.0 721.2 Tm
0.0000 Tw
(  > make install ) Tj
/F10 7 Tf
1 0 0 1 76.0 712.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/local/Perl/man/man3/Pequel::Pod2Pdf.3 ) Tj
/F10 7 Tf
1 0 0 1 76.0 704.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Param.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 696.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Code.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 687.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Collection.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 679.2 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Docgen.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 670.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Engine.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 662.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Error.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 654.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Field.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 645.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Lister.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 637.2 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Main.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 628.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Parse.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 620.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Pod2Pdf.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 612.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Script.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 603.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Table.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 595.2 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 586.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Aggregate.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 578.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Date.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 570.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Db.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 561.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Macro.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 553.2 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Option.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 544.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Section.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 536.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Table.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 528.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Table/Oracle.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 519.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Table/Sqlite.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 511.2 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Db/Oracle.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 502.8 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Type/Db/Sqlite.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 494.4 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/perl5/site_perl/5.6.1/Pequel/Engine/Inline.pm ) Tj
/F10 7 Tf
1 0 0 1 76.0 486.0 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/local/Perl/bin/pequel ) Tj
/F10 7 Tf
1 0 0 1 76.0 477.6 Tm
0.0000 Tw
(  Installing /usr/local/Perl/usr/local/Perl/bin/pequelpod2pdf ) Tj
/F10 7 Tf
1 0 0 1 76.0 469.2 Tm
0.0000 Tw
(  Writing /usr/perl5/site_perl/5.6.1/sun4-solaris-64int/auto/Pequel/.packlist ) Tj
/F10 7 Tf
1 0 0 1 76.0 460.8 Tm
0.0000 Tw
(  Appending installation info to /usr/local/Perl/lib/sun4-solaris-64int/perllocal.pod ) Tj
/F10 7 Tf
1 0 0 1 76.0 444.0 Tm
0.0000 Tw
(  > export PERL5LIB=/usr/local/Perl/usr/perl5/site_perl ) Tj
/F10 7 Tf
1 0 0 1 76.0 435.6 Tm
0.0000 Tw
(  > export PATH=$PATH:/usr/local/Perl/usr/local/Perl/bin ) Tj
/F10 7 Tf
1 0 0 1 76.0 427.2 Tm
0.0000 Tw
(  > pequel -v ) Tj
/F10 7 Tf
1 0 0 1 76.0 418.8 Tm
0.0000 Tw
(  pequel Version 2.2-5, Build: Thu Jun 17 10:57:29 EST 2005 ) Tj
/F21 10 Tf
1 0 0 1 52.0 397.8 Tm
0.0000 Tw
(Using Inline ) Tj
/F20 10 Tf
1 0 0 1 76.0 385.8 Tm
1.1925 Tw
(Certain options \(such as ) Tj
/F22 10 Tf
1.1925 Tw
(use_inline) Tj
/F20 10 Tf
1.1925 Tw
(, ) Tj
/F22 10 Tf
1.1925 Tw
(input_delimiter_extra) Tj
/F20 10 Tf
1.1925 Tw
(\) will cause ) Tj
/F23 10 Tf
1.1925 Tw
(Pequel) Tj
/F20 10 Tf
1.1925 Tw
( to generate embedded C) Tj
1 0 0 1 76.0 373.8 Tm
2.4581 Tw
(code. The resulting program will then require the Inline::C module and a C compiler system to be) Tj
1 0 0 1 76.0 361.8 Tm
3.1020 Tw
(available. Once you have Inline::C installed you can verify its availability to Pequel by running a) Tj
1 0 0 1 76.0 349.8 Tm
0.0000 Tw
(compile-check on the ) Tj
/F22 10 Tf
0.0000 Tw
(apachelog.pql) Tj
/F20 10 Tf
0.0000 Tw
( script ) Tj
/F10 7 Tf
1 0 0 1 76.0 321.6 Tm
0.0000 Tw
(  pequel -c examples/apachelog.pql ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(56) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
239 0 obj
5815
endobj
240 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
241 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 240 0 R
/Contents 238 0 R
>>
endobj
242 0 obj
<<
/Length 243 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 12 Tf
1 0 0 1 52.0 750.0 Tm
0.0000 Tw
(BUGS ) Tj
/F20 10 Tf
1 0 0 1 76.0 732.7 Tm
0.0000 Tw
() Tj
ET
q
76 733.72 4 4 re
f
Q
BT
1 0 0 1 84 732.72 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 720.7 Tm
0.0000 Tw
(The Inline Oracle and Sqlite Tables functionality as of version 2.2-8 requires further extensive testing. ) Tj
/F20 10 Tf
1 0 0 1 76.0 694.3 Tm
0.0000 Tw
() Tj
ET
q
76 695.32 4 4 re
f
Q
BT
1 0 0 1 84 694.32 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 682.3 Tm
0.0000 Tw
(Array fields and macros not handling single element arrays. ) Tj
/F20 10 Tf
1 0 0 1 76.0 655.9 Tm
0.0000 Tw
() Tj
ET
q
76 656.92 4 4 re
f
Q
BT
1 0 0 1 84 655.92 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 643.9 Tm
0.0000 Tw
(&period and &month not implemented. ) Tj
/F20 10 Tf
1 0 0 1 76.0 617.5 Tm
0.0000 Tw
() Tj
ET
q
76 618.52 4 4 re
f
Q
BT
1 0 0 1 84 617.52 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 605.5 Tm
0.0000 Tw
() Tj
/F23 10 Tf
0.0000 Tw
(summary section) Tj
/F20 10 Tf
0.0000 Tw
( is not implemented. ) Tj
/F20 10 Tf
1 0 0 1 76.0 579.1 Tm
0.0000 Tw
() Tj
ET
q
76 580.12 4 4 re
f
Q
BT
1 0 0 1 84 579.12 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 567.1 Tm
0.0000 Tw
(When using a ) Tj
/F22 10 Tf
0.0000 Tw
(derived input field) Tj
/F20 10 Tf
0.0000 Tw
( in ) Tj
/F23 10 Tf
0.0000 Tw
(group by) Tj
/F20 10 Tf
0.0000 Tw
(, the derived field is not calculated early enough. ) Tj
/F20 10 Tf
1 0 0 1 76.0 540.7 Tm
0.0000 Tw
() Tj
ET
q
76 541.72 4 4 re
f
Q
BT
1 0 0 1 84 540.72 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 76.0 528.7 Tm
0.1984 Tw
(If you specify ) Tj
/F23 10 Tf
0.1984 Tw
(group by) Tj
/F20 10 Tf
0.1984 Tw
( you must also specify ) Tj
/F23 10 Tf
0.1984 Tw
(sort by) Tj
/F20 10 Tf
0.1984 Tw
( \(unless your input is already sorted in the required) Tj
1 0 0 1 76.0 516.7 Tm
0.0000 Tw
(order\). ) Tj
/F21 12 Tf
1 0 0 1 52.0 474.7 Tm
0.0000 Tw
(AUTHOR ) Tj
/F20 10 Tf
1 0 0 1 76.0 460.3 Tm
0.0000 Tw
(Mario Gaffiero <gaffie@users.sourceforge.net> ) Tj
/F21 12 Tf
1 0 0 1 52.0 430.3 Tm
0.0000 Tw
(COPYRIGHT ) Tj
/F20 10 Tf
1 0 0 1 76.0 415.9 Tm
0.0000 Tw
(Copyright \2511999-2005, Mario Gaffiero. All Rights Reserved. ) Tj
/F20 10 Tf
1 0 0 1 76.0 403.9 Tm
0.0000 Tw
("Pequel" TM Copyright \2511999-2005, Mario Gaffiero. All Rights Reserved. ) Tj
/F20 10 Tf
1 0 0 1 76.0 391.9 Tm
2.3993 Tw
(This program and all its component contents is copyrighted free software by Mario Gaffiero and is) Tj
1 0 0 1 76.0 379.9 Tm
1.5600 Tw
(released under the GNU General Public License \(GPL\), Version 2, a copy of which may be found at) Tj
1 0 0 1 76.0 367.9 Tm
0.0000 Tw
(http://www.opensource.org/licenses/gpl-license.html ) Tj
/F20 10 Tf
1 0 0 1 76.0 355.9 Tm
0.0000 Tw
(This file is part of Pequel \(TM\). ) Tj
/F20 10 Tf
1 0 0 1 76.0 343.9 Tm
1.7241 Tw
(Pequel is free software; you can redistribute it and/or modify it under the terms of the GNU General) Tj
1 0 0 1 76.0 331.9 Tm
0.2841 Tw
(Public License as published by the Free Software Foundation; either version 2 of the License, or \(at your) Tj
1 0 0 1 76.0 319.9 Tm
0.0000 Tw
(option\) any later version. ) Tj
/F20 10 Tf
1 0 0 1 76.0 307.9 Tm
0.3847 Tw
(Pequel is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the) Tj
1 0 0 1 76.0 295.9 Tm
0.8077 Tw
(implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU) Tj
1 0 0 1 76.0 283.9 Tm
0.0000 Tw
(General Public License for more details. ) Tj
/F20 10 Tf
1 0 0 1 76.0 271.9 Tm
0.7933 Tw
(You should have received a copy of the GNU General Public License along with Pequel; if not, write to) Tj
1 0 0 1 76.0 259.9 Tm
0.0000 Tw
(the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA ) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(57) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
243 0 obj
4024
endobj
244 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
/F23 17 0 R
>>
>>
endobj
245 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 244 0 R
/Contents 242 0 R
>>
endobj
246 0 obj
<<
/Length 247 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 489.65 797 Tm
(User Guide) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(58) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
247 0 obj
248
endobj
248 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F21 15 0 R
>>
>>
endobj
249 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 248 0 R
/Contents 246 0 R
>>
endobj
250 0 obj
<<
/Length 251 0 R
>>
stream
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
/F20 20 Tf
1 0 0 1 218.57 770 Tm
(Table of Contents) Tj
1 0 0 1 245.25 746 Tm
(Pequel ETL) Tj
/F20 10 Tf
ET
q
0.95 g
52 695 491 12 re
f
Q
BT
1 0 0 1 76 698 Tm
(NAME) Tj
1 0 0 1 513.44 698 Tm
(1) Tj
ET
q
1 g
52 683 491 12 re
f
Q
BT
1 0 0 1 76 686 Tm
(OVERVIEW \217 WHAT IS PEQUEL?) Tj
1 0 0 1 513.44 686 Tm
(1) Tj
ET
q
0.95 g
52 671 491 12 re
f
Q
BT
1 0 0 1 100 674 Tm
(Selecting records \(filtering\)) Tj
1 0 0 1 513.44 674 Tm
(1) Tj
ET
q
1 g
52 659 491 12 re
f
Q
BT
1 0 0 1 100 662 Tm
(Grouping and Statistics) Tj
1 0 0 1 513.44 662 Tm
(1) Tj
ET
q
0.95 g
52 647 491 12 re
f
Q
BT
1 0 0 1 100 650 Tm
(Calculations) Tj
1 0 0 1 513.44 650 Tm
(1) Tj
ET
q
1 g
52 635 491 12 re
f
Q
BT
1 0 0 1 100 638 Tm
(Cleaning Data) Tj
1 0 0 1 513.44 638 Tm
(1) Tj
ET
q
0.95 g
52 623 491 12 re
f
Q
BT
1 0 0 1 100 626 Tm
(Analysing Data Quality) Tj
1 0 0 1 513.44 626 Tm
(1) Tj
ET
q
1 g
52 611 491 12 re
f
Q
BT
1 0 0 1 100 614 Tm
(Statistics) Tj
1 0 0 1 513.44 614 Tm
(2) Tj
ET
q
0.95 g
52 599 491 12 re
f
Q
BT
1 0 0 1 100 602 Tm
(Converting Data) Tj
1 0 0 1 513.44 602 Tm
(2) Tj
ET
q
1 g
52 587 491 12 re
f
Q
BT
1 0 0 1 100 590 Tm
(Tables and Cross References) Tj
1 0 0 1 513.44 590 Tm
(2) Tj
ET
q
0.95 g
52 575 491 12 re
f
Q
BT
1 0 0 1 100 578 Tm
(Database Connectivity) Tj
1 0 0 1 513.44 578 Tm
(2) Tj
ET
q
1 g
52 563 491 12 re
f
Q
BT
1 0 0 1 100 566 Tm
(Merge and n-Way Join) Tj
1 0 0 1 513.44 566 Tm
(2) Tj
ET
q
0.95 g
52 551 491 12 re
f
Q
BT
1 0 0 1 100 554 Tm
(Extract Data from Database Table\(s\)) Tj
1 0 0 1 513.44 554 Tm
(2) Tj
ET
q
1 g
52 539 491 12 re
f
Q
BT
1 0 0 1 100 542 Tm
(Load Data into Database Table\(s\)) Tj
1 0 0 1 513.44 542 Tm
(2) Tj
ET
q
0.95 g
52 527 491 12 re
f
Q
BT
1 0 0 1 100 530 Tm
(Input Binary Data Files) Tj
1 0 0 1 513.44 530 Tm
(2) Tj
ET
q
1 g
52 515 491 12 re
f
Q
BT
1 0 0 1 76 518 Tm
(USAGE) Tj
1 0 0 1 513.44 518 Tm
(3) Tj
ET
q
0.95 g
52 503 491 12 re
f
Q
BT
1 0 0 1 100 506 Tm
(pequel scriptfile.pql  <  file_in  >  file_out) Tj
1 0 0 1 513.44 506 Tm
(3) Tj
ET
q
1 g
52 491 491 12 re
f
Q
BT
1 0 0 1 100 494 Tm
(pequel -c scriptfile.pql) Tj
1 0 0 1 513.44 494 Tm
(3) Tj
ET
q
0.95 g
52 479 491 12 re
f
Q
BT
1 0 0 1 100 482 Tm
(pequel -viewcode scriptfile.pql) Tj
1 0 0 1 513.44 482 Tm
(3) Tj
ET
q
1 g
52 467 491 12 re
f
Q
BT
1 0 0 1 100 470 Tm
(pequel -dumpcode scriptfile.pql) Tj
1 0 0 1 513.44 470 Tm
(3) Tj
ET
q
0.95 g
52 455 491 12 re
f
Q
BT
1 0 0 1 100 458 Tm
(pequel -v) Tj
1 0 0 1 513.44 458 Tm
(3) Tj
ET
q
1 g
52 443 491 12 re
f
Q
BT
1 0 0 1 100 446 Tm
(pequel -usage) Tj
1 0 0 1 513.44 446 Tm
(3) Tj
ET
q
0.95 g
52 431 491 12 re
f
Q
BT
1 0 0 1 100 434 Tm
(pequel -pequeldoc pdf -detail scriptfile.pql) Tj
1 0 0 1 513.44 434 Tm
(3) Tj
ET
q
1 g
52 419 491 12 re
f
Q
BT
1 0 0 1 76 422 Tm
(TUTORIAL) Tj
1 0 0 1 513.44 422 Tm
(4) Tj
ET
q
0.95 g
52 407 491 12 re
f
Q
BT
1 0 0 1 100 410 Tm
(Create Pequel Script) Tj
1 0 0 1 513.44 410 Tm
(4) Tj
ET
q
1 g
52 395 491 12 re
f
Q
BT
1 0 0 1 100 398 Tm
(Check The Pequel Script) Tj
1 0 0 1 513.44 398 Tm
(4) Tj
ET
q
0.95 g
52 383 491 12 re
f
Q
BT
1 0 0 1 100 386 Tm
(Run The Pequel Script) Tj
1 0 0 1 513.44 386 Tm
(4) Tj
ET
q
1 g
52 371 491 12 re
f
Q
BT
1 0 0 1 100 374 Tm
(Select A Subset Of Records) Tj
1 0 0 1 513.44 374 Tm
(4) Tj
ET
q
0.95 g
52 359 491 12 re
f
Q
BT
1 0 0 1 100 362 Tm
(Create New Derived Fields) Tj
1 0 0 1 513.44 362 Tm
(4) Tj
ET
q
1 g
52 347 491 12 re
f
Q
BT
1 0 0 1 100 350 Tm
(Select Which Fields To Output) Tj
1 0 0 1 513.44 350 Tm
(5) Tj
ET
q
0.95 g
52 335 491 12 re
f
Q
BT
1 0 0 1 100 338 Tm
(Group Records For Analysis) Tj
1 0 0 1 513.44 338 Tm
(5) Tj
ET
q
1 g
52 323 491 12 re
f
Q
BT
1 0 0 1 100 326 Tm
(Select A Subset Of Grouped Records) Tj
1 0 0 1 513.44 326 Tm
(6) Tj
ET
q
0.95 g
52 311 491 12 re
f
Q
BT
1 0 0 1 100 314 Tm
(Aggregation Based On Conditions) Tj
1 0 0 1 513.44 314 Tm
(6) Tj
ET
q
1 g
52 299 491 12 re
f
Q
BT
1 0 0 1 100 302 Tm
(Derived Fields Based On Output Fields) Tj
1 0 0 1 513.44 302 Tm
(7) Tj
ET
q
0.95 g
52 287 491 12 re
f
Q
BT
1 0 0 1 100 290 Tm
(Create Intermediate \(Transparent\) Output Fields) Tj
1 0 0 1 513.44 290 Tm
(7) Tj
ET
q
1 g
52 275 491 12 re
f
Q
BT
1 0 0 1 100 278 Tm
(Cleaning Data) Tj
1 0 0 1 513.44 278 Tm
(8) Tj
ET
q
0.95 g
52 263 491 12 re
f
Q
BT
1 0 0 1 100 266 Tm
(Converting Data) Tj
1 0 0 1 513.44 266 Tm
(8) Tj
ET
q
1 g
52 251 491 12 re
f
Q
BT
1 0 0 1 100 254 Tm
(Using Date Fields) Tj
1 0 0 1 513.44 254 Tm
(8) Tj
ET
q
0.95 g
52 239 491 12 re
f
Q
BT
1 0 0 1 100 242 Tm
(Counting Records) Tj
1 0 0 1 513.44 242 Tm
(8) Tj
ET
q
1 g
52 227 491 12 re
f
Q
BT
1 0 0 1 100 230 Tm
(Extracting n Distinct Values For A Field) Tj
1 0 0 1 513.44 230 Tm
(8) Tj
ET
q
0.95 g
52 215 491 12 re
f
Q
BT
1 0 0 1 100 218 Tm
(Tabulating Data) Tj
1 0 0 1 513.44 218 Tm
(8) Tj
ET
q
1 g
52 203 491 12 re
f
Q
BT
1 0 0 1 100 206 Tm
(Statistical Analysis) Tj
1 0 0 1 513.44 206 Tm
(9) Tj
ET
q
0.95 g
52 191 491 12 re
f
Q
BT
1 0 0 1 100 194 Tm
(Declaring And Using Tables For Value Lookup) Tj
1 0 0 1 513.44 194 Tm
(9) Tj
ET
q
1 g
52 179 491 12 re
f
Q
BT
1 0 0 1 100 182 Tm
(Using External Tables) Tj
1 0 0 1 513.44 182 Tm
(9) Tj
ET
q
0.95 g
52 167 491 12 re
f
Q
BT
1 0 0 1 100 170 Tm
(Using Date Fields) Tj
1 0 0 1 513.44 170 Tm
(9) Tj
ET
q
1 g
52 155 491 12 re
f
Q
BT
1 0 0 1 100 158 Tm
(Create A Summary Report) Tj
1 0 0 1 513.44 158 Tm
(9) Tj
ET
q
0.95 g
52 143 491 12 re
f
Q
BT
1 0 0 1 100 146 Tm
(Using Array Fields) Tj
1 0 0 1 513.44 146 Tm
(9) Tj
ET
q
1 g
52 131 491 12 re
f
Q
BT
1 0 0 1 100 134 Tm
(Database Tables: oracle) Tj
1 0 0 1 513.44 134 Tm
(9) Tj
ET
q
0.95 g
52 119 491 12 re
f
Q
BT
1 0 0 1 100 122 Tm
(Database Tables: sqlite) Tj
1 0 0 1 513.44 122 Tm
(9) Tj
ET
q
1 g
52 107 491 12 re
f
Q
BT
1 0 0 1 100 110 Tm
(Merg Database Tables) Tj
1 0 0 1 513.44 110 Tm
(9) Tj
ET
q
0.95 g
52 95 491 12 re
f
Q
BT
1 0 0 1 100 98 Tm
(View The Generated Perl Code) Tj
1 0 0 1 513.44 98 Tm
(9) Tj
ET
q
1 g
52 83 491 12 re
f
Q
BT
1 0 0 1 100 86 Tm
(Dump The Generated Perl Code) Tj
1 0 0 1 513.44 86 Tm
(9) Tj
ET
q
0.95 g
52 71 491 12 re
f
Q
BT
1 0 0 1 100 74 Tm
(Produce The Script Specification Document) Tj
1 0 0 1 513.44 74 Tm
(9) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 540.22 37 Tm
(i) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
251 0 obj
6214
endobj
252 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
253 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 252 0 R
/Contents 250 0 R
>>
endobj
254 0 obj
<<
/Length 255 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 458.55 797 Tm
(Table of Contents) Tj
/F20 10 Tf
ET
q
1 g
52 767 491 12 re
f
Q
BT
1 0 0 1 100 770 Tm
(Display Summary Information For Script) Tj
1 0 0 1 507.88 770 Tm
(10) Tj
ET
q
0.95 g
52 755 491 12 re
f
Q
BT
1 0 0 1 76 758 Tm
(COMMAND LINE OPTIONS) Tj
1 0 0 1 507.88 758 Tm
(11) Tj
ET
q
1 g
52 743 491 12 re
f
Q
BT
1 0 0 1 100 746 Tm
(\217prefix, \217prefix_path) Tj
1 0 0 1 507.88 746 Tm
(11) Tj
ET
q
0.95 g
52 731 491 12 re
f
Q
BT
1 0 0 1 100 734 Tm
(\217verbose, \217ver) Tj
1 0 0 1 507.88 734 Tm
(11) Tj
ET
q
1 g
52 719 491 12 re
f
Q
BT
1 0 0 1 100 722 Tm
(\217noverbose, \217silent, \217quite) Tj
1 0 0 1 507.88 722 Tm
(11) Tj
ET
q
0.95 g
52 707 491 12 re
f
Q
BT
1 0 0 1 100 710 Tm
(\217input_file, \217is, \217if, \217i) Tj
1 0 0 1 507.88 710 Tm
(11) Tj
ET
q
1 g
52 695 491 12 re
f
Q
BT
1 0 0 1 100 698 Tm
(\217usage) Tj
1 0 0 1 507.88 698 Tm
(11) Tj
ET
q
0.95 g
52 683 491 12 re
f
Q
BT
1 0 0 1 100 686 Tm
(\217output_file, \217os, \217of, \217o) Tj
1 0 0 1 507.88 686 Tm
(11) Tj
ET
q
1 g
52 671 491 12 re
f
Q
BT
1 0 0 1 100 674 Tm
(\217script_name, \217script, \217s, \217pql) Tj
1 0 0 1 507.88 674 Tm
(11) Tj
ET
q
0.95 g
52 659 491 12 re
f
Q
BT
1 0 0 1 100 662 Tm
(\217header) Tj
1 0 0 1 507.88 662 Tm
(11) Tj
ET
q
1 g
52 647 491 12 re
f
Q
BT
1 0 0 1 100 650 Tm
(\217pequeldoc, \217doc) Tj
1 0 0 1 507.88 650 Tm
(11) Tj
ET
q
0.95 g
52 635 491 12 re
f
Q
BT
1 0 0 1 100 638 Tm
(\217viewcode, \217vc) Tj
1 0 0 1 507.88 638 Tm
(11) Tj
ET
q
1 g
52 623 491 12 re
f
Q
BT
1 0 0 1 100 626 Tm
(\217dumpcode, \217dc, \217diag) Tj
1 0 0 1 507.88 626 Tm
(11) Tj
ET
q
0.95 g
52 611 491 12 re
f
Q
BT
1 0 0 1 100 614 Tm
(\217syntax_check, \217c, \217check) Tj
1 0 0 1 507.88 614 Tm
(11) Tj
ET
q
1 g
52 599 491 12 re
f
Q
BT
1 0 0 1 100 602 Tm
(\217version, \217v) Tj
1 0 0 1 507.88 602 Tm
(11) Tj
ET
q
0.95 g
52 587 491 12 re
f
Q
BT
1 0 0 1 100 590 Tm
(\217table_info, \217ti) Tj
1 0 0 1 507.88 590 Tm
(11) Tj
ET
q
1 g
52 575 491 12 re
f
Q
BT
1 0 0 1 76 578 Tm
(PEQUEL LANGUAGE REFERENCE) Tj
1 0 0 1 507.88 578 Tm
(12) Tj
ET
q
0.95 g
52 563 491 12 re
f
Q
BT
1 0 0 1 100 566 Tm
(Comments) Tj
1 0 0 1 507.88 566 Tm
(12) Tj
ET
q
1 g
52 551 491 12 re
f
Q
BT
1 0 0 1 100 554 Tm
(Pre Processor) Tj
1 0 0 1 507.88 554 Tm
(12) Tj
ET
q
0.95 g
52 539 491 12 re
f
Q
BT
1 0 0 1 100 542 Tm
(OPTIONS SECTION) Tj
1 0 0 1 507.88 542 Tm
(12) Tj
ET
q
1 g
52 527 491 12 re
f
Q
BT
1 0 0 1 124 530 Tm
(Format) Tj
1 0 0 1 507.88 530 Tm
(12) Tj
ET
q
0.95 g
52 515 491 12 re
f
Q
BT
1 0 0 1 124 518 Tm
(Example) Tj
1 0 0 1 507.88 518 Tm
(12) Tj
ET
q
1 g
52 503 491 12 re
f
Q
BT
1 0 0 1 124 506 Tm
(verbose ) Tj
1 0 0 1 507.88 506 Tm
(13) Tj
ET
q
0.95 g
52 491 491 12 re
f
Q
BT
1 0 0 1 124 494 Tm
(input_delimiter) Tj
1 0 0 1 507.88 494 Tm
(13) Tj
ET
q
1 g
52 479 491 12 re
f
Q
BT
1 0 0 1 124 482 Tm
(output_delimiter) Tj
1 0 0 1 507.88 482 Tm
(13) Tj
ET
q
0.95 g
52 467 491 12 re
f
Q
BT
1 0 0 1 124 470 Tm
(discard_header ) Tj
1 0 0 1 507.88 470 Tm
(13) Tj
ET
q
1 g
52 455 491 12 re
f
Q
BT
1 0 0 1 124 458 Tm
(input_file ) Tj
1 0 0 1 507.88 458 Tm
(13) Tj
ET
q
0.95 g
52 443 491 12 re
f
Q
BT
1 0 0 1 124 446 Tm
(output_file ) Tj
1 0 0 1 507.88 446 Tm
(13) Tj
ET
q
1 g
52 431 491 12 re
f
Q
BT
1 0 0 1 124 434 Tm
(transfer) Tj
1 0 0 1 507.88 434 Tm
(13) Tj
ET
q
0.95 g
52 419 491 12 re
f
Q
BT
1 0 0 1 124 422 Tm
(hash ) Tj
1 0 0 1 507.88 422 Tm
(13) Tj
ET
q
1 g
52 407 491 12 re
f
Q
BT
1 0 0 1 124 410 Tm
(header) Tj
1 0 0 1 507.88 410 Tm
(13) Tj
ET
q
0.95 g
52 395 491 12 re
f
Q
BT
1 0 0 1 124 398 Tm
(noheader) Tj
1 0 0 1 507.88 398 Tm
(13) Tj
ET
q
1 g
52 383 491 12 re
f
Q
BT
1 0 0 1 124 386 Tm
(addpipe) Tj
1 0 0 1 507.88 386 Tm
(13) Tj
ET
q
0.95 g
52 371 491 12 re
f
Q
BT
1 0 0 1 124 374 Tm
(noaddpipe) Tj
1 0 0 1 507.88 374 Tm
(13) Tj
ET
q
1 g
52 359 491 12 re
f
Q
BT
1 0 0 1 124 362 Tm
(optimize) Tj
1 0 0 1 507.88 362 Tm
(13) Tj
ET
q
0.95 g
52 347 491 12 re
f
Q
BT
1 0 0 1 124 350 Tm
(nooptimize) Tj
1 0 0 1 507.88 350 Tm
(14) Tj
ET
q
1 g
52 335 491 12 re
f
Q
BT
1 0 0 1 124 338 Tm
(nulls ) Tj
1 0 0 1 507.88 338 Tm
(14) Tj
ET
q
0.95 g
52 323 491 12 re
f
Q
BT
1 0 0 1 124 326 Tm
(nonulls) Tj
1 0 0 1 507.88 326 Tm
(14) Tj
ET
q
1 g
52 311 491 12 re
f
Q
BT
1 0 0 1 124 314 Tm
(varnames ) Tj
1 0 0 1 507.88 314 Tm
(14) Tj
ET
q
0.95 g
52 299 491 12 re
f
Q
BT
1 0 0 1 124 302 Tm
(novarnames ) Tj
1 0 0 1 507.88 302 Tm
(14) Tj
ET
q
1 g
52 287 491 12 re
f
Q
BT
1 0 0 1 124 290 Tm
(noexecute ) Tj
1 0 0 1 507.88 290 Tm
(14) Tj
ET
q
0.95 g
52 275 491 12 re
f
Q
BT
1 0 0 1 124 278 Tm
(reject_file ) Tj
1 0 0 1 507.88 278 Tm
(14) Tj
ET
q
1 g
52 263 491 12 re
f
Q
BT
1 0 0 1 124 266 Tm
(dumpcode ) Tj
1 0 0 1 507.88 266 Tm
(14) Tj
ET
q
0.95 g
52 251 491 12 re
f
Q
BT
1 0 0 1 124 254 Tm
(default_date_type) Tj
1 0 0 1 507.88 254 Tm
(14) Tj
ET
q
1 g
52 239 491 12 re
f
Q
BT
1 0 0 1 124 242 Tm
(default_list_delimiter) Tj
1 0 0 1 507.88 242 Tm
(14) Tj
ET
q
0.95 g
52 227 491 12 re
f
Q
BT
1 0 0 1 124 230 Tm
(rmctrlm v3) Tj
1 0 0 1 507.88 230 Tm
(14) Tj
ET
q
1 g
52 215 491 12 re
f
Q
BT
1 0 0 1 124 218 Tm
(input_record_limit v3) Tj
1 0 0 1 507.88 218 Tm
(14) Tj
ET
q
0.95 g
52 203 491 12 re
f
Q
BT
1 0 0 1 124 206 Tm
(suppress_output v3) Tj
1 0 0 1 507.88 206 Tm
(14) Tj
ET
q
1 g
52 191 491 12 re
f
Q
BT
1 0 0 1 124 194 Tm
(pequeldoc) Tj
1 0 0 1 507.88 194 Tm
(14) Tj
ET
q
0.95 g
52 179 491 12 re
f
Q
BT
1 0 0 1 124 182 Tm
(doc_title) Tj
1 0 0 1 507.88 182 Tm
(15) Tj
ET
q
1 g
52 167 491 12 re
f
Q
BT
1 0 0 1 124 170 Tm
(doc_email) Tj
1 0 0 1 507.88 170 Tm
(15) Tj
ET
q
0.95 g
52 155 491 12 re
f
Q
BT
1 0 0 1 124 158 Tm
(doc_version) Tj
1 0 0 1 507.88 158 Tm
(15) Tj
ET
q
1 g
52 143 491 12 re
f
Q
BT
1 0 0 1 100 146 Tm
(INLINE OPTIONS) Tj
1 0 0 1 507.88 146 Tm
(15) Tj
ET
q
0.95 g
52 131 491 12 re
f
Q
BT
1 0 0 1 124 134 Tm
(use_inline ) Tj
1 0 0 1 507.88 134 Tm
(15) Tj
ET
q
1 g
52 119 491 12 re
f
Q
BT
1 0 0 1 124 122 Tm
(input_delimiter_extra) Tj
1 0 0 1 507.88 122 Tm
(15) Tj
ET
q
0.95 g
52 107 491 12 re
f
Q
BT
1 0 0 1 124 110 Tm
(inline_clean_after_build) Tj
1 0 0 1 507.88 110 Tm
(15) Tj
ET
q
1 g
52 95 491 12 re
f
Q
BT
1 0 0 1 124 98 Tm
(inline_clean_build_area) Tj
1 0 0 1 507.88 98 Tm
(15) Tj
ET
q
0.95 g
52 83 491 12 re
f
Q
BT
1 0 0 1 124 86 Tm
(inline_print_info) Tj
1 0 0 1 507.88 86 Tm
(15) Tj
ET
q
1 g
52 71 491 12 re
f
Q
BT
1 0 0 1 124 74 Tm
(inline_build_noisy) Tj
1 0 0 1 507.88 74 Tm
(15) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(ii) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
255 0 obj
6488
endobj
256 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
257 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 256 0 R
/Contents 254 0 R
>>
endobj
258 0 obj
<<
/Length 259 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Table of Contents) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
ET
q
0.95 g
52 767 491 12 re
f
Q
BT
1 0 0 1 124 770 Tm
(inline_build_timers) Tj
1 0 0 1 507.88 770 Tm
(15) Tj
ET
q
1 g
52 755 491 12 re
f
Q
BT
1 0 0 1 124 758 Tm
(inline_force_build) Tj
1 0 0 1 507.88 758 Tm
(15) Tj
ET
q
0.95 g
52 743 491 12 re
f
Q
BT
1 0 0 1 124 746 Tm
(inline_directory) Tj
1 0 0 1 507.88 746 Tm
(15) Tj
ET
q
1 g
52 731 491 12 re
f
Q
BT
1 0 0 1 124 734 Tm
(inline_CC) Tj
1 0 0 1 507.88 734 Tm
(15) Tj
ET
q
0.95 g
52 719 491 12 re
f
Q
BT
1 0 0 1 124 722 Tm
(inline_OPTIMIZE) Tj
1 0 0 1 507.88 722 Tm
(15) Tj
ET
q
1 g
52 707 491 12 re
f
Q
BT
1 0 0 1 124 710 Tm
(inline_CCFLAGS) Tj
1 0 0 1 507.88 710 Tm
(16) Tj
ET
q
0.95 g
52 695 491 12 re
f
Q
BT
1 0 0 1 124 698 Tm
(inline_LIBS) Tj
1 0 0 1 507.88 698 Tm
(16) Tj
ET
q
1 g
52 683 491 12 re
f
Q
BT
1 0 0 1 124 686 Tm
(inline_INC) Tj
1 0 0 1 507.88 686 Tm
(16) Tj
ET
q
0.95 g
52 671 491 12 re
f
Q
BT
1 0 0 1 124 674 Tm
(inline_LDDLFLAGS) Tj
1 0 0 1 507.88 674 Tm
(16) Tj
ET
q
1 g
52 659 491 12 re
f
Q
BT
1 0 0 1 124 662 Tm
(inline_MAKE) Tj
1 0 0 1 507.88 662 Tm
(16) Tj
ET
q
0.95 g
52 647 491 12 re
f
Q
BT
1 0 0 1 100 650 Tm
(USE PACKAGE SECTION) Tj
1 0 0 1 507.88 650 Tm
(16) Tj
ET
q
1 g
52 635 491 12 re
f
Q
BT
1 0 0 1 124 638 Tm
(Format) Tj
1 0 0 1 507.88 638 Tm
(16) Tj
ET
q
0.95 g
52 623 491 12 re
f
Q
BT
1 0 0 1 124 626 Tm
(Examples) Tj
1 0 0 1 507.88 626 Tm
(16) Tj
ET
q
1 g
52 611 491 12 re
f
Q
BT
1 0 0 1 100 614 Tm
(INIT TABLE SECTION) Tj
1 0 0 1 507.88 614 Tm
(16) Tj
ET
q
0.95 g
52 599 491 12 re
f
Q
BT
1 0 0 1 124 602 Tm
(Format) Tj
1 0 0 1 507.88 602 Tm
(16) Tj
ET
q
1 g
52 587 491 12 re
f
Q
BT
1 0 0 1 124 590 Tm
(Example) Tj
1 0 0 1 507.88 590 Tm
(16) Tj
ET
q
0.95 g
52 575 491 12 re
f
Q
BT
1 0 0 1 100 578 Tm
(LOAD TABLE SECTION) Tj
1 0 0 1 507.88 578 Tm
(16) Tj
ET
q
1 g
52 563 491 12 re
f
Q
BT
1 0 0 1 124 566 Tm
(persistant option) Tj
1 0 0 1 507.88 566 Tm
(17) Tj
ET
q
0.95 g
52 551 491 12 re
f
Q
BT
1 0 0 1 124 554 Tm
(Format) Tj
1 0 0 1 507.88 554 Tm
(17) Tj
ET
q
1 g
52 539 491 12 re
f
Q
BT
1 0 0 1 124 542 Tm
(Examples) Tj
1 0 0 1 507.88 542 Tm
(17) Tj
ET
q
0.95 g
52 527 491 12 re
f
Q
BT
1 0 0 1 100 530 Tm
(INIT _PERIOD SECTION) Tj
1 0 0 1 507.88 530 Tm
(17) Tj
ET
q
1 g
52 515 491 12 re
f
Q
BT
1 0 0 1 124 518 Tm
(Format) Tj
1 0 0 1 507.88 518 Tm
(17) Tj
ET
q
0.95 g
52 503 491 12 re
f
Q
BT
1 0 0 1 124 506 Tm
(Examples) Tj
1 0 0 1 507.88 506 Tm
(17) Tj
ET
q
1 g
52 491 491 12 re
f
Q
BT
1 0 0 1 100 494 Tm
(INIT _MONTH SECTION) Tj
1 0 0 1 507.88 494 Tm
(17) Tj
ET
q
0.95 g
52 479 491 12 re
f
Q
BT
1 0 0 1 124 482 Tm
(Format) Tj
1 0 0 1 507.88 482 Tm
(17) Tj
ET
q
1 g
52 467 491 12 re
f
Q
BT
1 0 0 1 124 470 Tm
(Examples) Tj
1 0 0 1 507.88 470 Tm
(17) Tj
ET
q
0.95 g
52 455 491 12 re
f
Q
BT
1 0 0 1 100 458 Tm
(INPUT SECTION) Tj
1 0 0 1 507.88 458 Tm
(18) Tj
ET
q
1 g
52 443 491 12 re
f
Q
BT
1 0 0 1 124 446 Tm
(Format) Tj
1 0 0 1 507.88 446 Tm
(18) Tj
ET
q
0.95 g
52 431 491 12 re
f
Q
BT
1 0 0 1 124 434 Tm
(Example) Tj
1 0 0 1 507.88 434 Tm
(18) Tj
ET
q
1 g
52 419 491 12 re
f
Q
BT
1 0 0 1 100 422 Tm
(FIELD PREPROCESS SECTION) Tj
1 0 0 1 507.88 422 Tm
(18) Tj
ET
q
0.95 g
52 407 491 12 re
f
Q
BT
1 0 0 1 100 410 Tm
(FIELD POSTPROCESS SECTION) Tj
1 0 0 1 507.88 410 Tm
(18) Tj
ET
q
1 g
52 395 491 12 re
f
Q
BT
1 0 0 1 100 398 Tm
(SORT BY SECTION) Tj
1 0 0 1 507.88 398 Tm
(18) Tj
ET
q
0.95 g
52 383 491 12 re
f
Q
BT
1 0 0 1 124 386 Tm
(Format) Tj
1 0 0 1 507.88 386 Tm
(18) Tj
ET
q
1 g
52 371 491 12 re
f
Q
BT
1 0 0 1 124 374 Tm
(Examples) Tj
1 0 0 1 507.88 374 Tm
(18) Tj
ET
q
0.95 g
52 359 491 12 re
f
Q
BT
1 0 0 1 100 362 Tm
(REJECT SECTION) Tj
1 0 0 1 507.88 362 Tm
(18) Tj
ET
q
1 g
52 347 491 12 re
f
Q
BT
1 0 0 1 124 350 Tm
(Format) Tj
1 0 0 1 507.88 350 Tm
(19) Tj
ET
q
0.95 g
52 335 491 12 re
f
Q
BT
1 0 0 1 124 338 Tm
(Examples) Tj
1 0 0 1 507.88 338 Tm
(19) Tj
ET
q
1 g
52 323 491 12 re
f
Q
BT
1 0 0 1 100 326 Tm
(FILTER SECTION) Tj
1 0 0 1 507.88 326 Tm
(19) Tj
ET
q
0.95 g
52 311 491 12 re
f
Q
BT
1 0 0 1 124 314 Tm
(Format) Tj
1 0 0 1 507.88 314 Tm
(19) Tj
ET
q
1 g
52 299 491 12 re
f
Q
BT
1 0 0 1 124 302 Tm
(Examples) Tj
1 0 0 1 507.88 302 Tm
(19) Tj
ET
q
0.95 g
52 287 491 12 re
f
Q
BT
1 0 0 1 100 290 Tm
(GROUP BY SECTION) Tj
1 0 0 1 507.88 290 Tm
(19) Tj
ET
q
1 g
52 275 491 12 re
f
Q
BT
1 0 0 1 124 278 Tm
(Format) Tj
1 0 0 1 507.88 278 Tm
(19) Tj
ET
q
0.95 g
52 263 491 12 re
f
Q
BT
1 0 0 1 124 266 Tm
(Examples) Tj
1 0 0 1 507.88 266 Tm
(19) Tj
ET
q
1 g
52 251 491 12 re
f
Q
BT
1 0 0 1 100 254 Tm
(DEDUP ON SECTION) Tj
1 0 0 1 507.88 254 Tm
(19) Tj
ET
q
0.95 g
52 239 491 12 re
f
Q
BT
1 0 0 1 100 242 Tm
(OUTPUT SECTION) Tj
1 0 0 1 507.88 242 Tm
(19) Tj
ET
q
1 g
52 227 491 12 re
f
Q
BT
1 0 0 1 124 230 Tm
(Format) Tj
1 0 0 1 507.88 230 Tm
(20) Tj
ET
q
0.95 g
52 215 491 12 re
f
Q
BT
1 0 0 1 100 218 Tm
(Aggregates) Tj
1 0 0 1 507.88 218 Tm
(20) Tj
ET
q
1 g
52 203 491 12 re
f
Q
BT
1 0 0 1 124 206 Tm
(sum <input field>) Tj
1 0 0 1 507.88 206 Tm
(20) Tj
ET
q
0.95 g
52 191 491 12 re
f
Q
BT
1 0 0 1 124 194 Tm
(sum_distinct <input field>) Tj
1 0 0 1 507.88 194 Tm
(20) Tj
ET
q
1 g
52 179 491 12 re
f
Q
BT
1 0 0 1 124 182 Tm
(maximum | max <input field>) Tj
1 0 0 1 507.88 182 Tm
(20) Tj
ET
q
0.95 g
52 167 491 12 re
f
Q
BT
1 0 0 1 124 170 Tm
(minimum | min  <input field>) Tj
1 0 0 1 507.88 170 Tm
(21) Tj
ET
q
1 g
52 155 491 12 re
f
Q
BT
1 0 0 1 124 158 Tm
(avg | mean <input field>) Tj
1 0 0 1 507.88 158 Tm
(21) Tj
ET
q
0.95 g
52 143 491 12 re
f
Q
BT
1 0 0 1 124 146 Tm
(avg_distinct <input field>) Tj
1 0 0 1 507.88 146 Tm
(21) Tj
ET
q
1 g
52 131 491 12 re
f
Q
BT
1 0 0 1 124 134 Tm
(first <input field>) Tj
1 0 0 1 507.88 134 Tm
(21) Tj
ET
q
0.95 g
52 119 491 12 re
f
Q
BT
1 0 0 1 124 122 Tm
(last <input field>) Tj
1 0 0 1 507.88 122 Tm
(21) Tj
ET
q
1 g
52 107 491 12 re
f
Q
BT
1 0 0 1 124 110 Tm
(count_distinct | distinct <input field>) Tj
1 0 0 1 507.88 110 Tm
(21) Tj
ET
q
0.95 g
52 95 491 12 re
f
Q
BT
1 0 0 1 124 98 Tm
(median <input field>) Tj
1 0 0 1 507.88 98 Tm
(21) Tj
ET
q
1 g
52 83 491 12 re
f
Q
BT
1 0 0 1 124 86 Tm
(variance <input field>) Tj
1 0 0 1 507.88 86 Tm
(21) Tj
ET
q
0.95 g
52 71 491 12 re
f
Q
BT
1 0 0 1 124 74 Tm
(stddev <input field>) Tj
1 0 0 1 507.88 74 Tm
(21) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 534.66 37 Tm
(iii) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
259 0 obj
6381
endobj
260 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
261 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 260 0 R
/Contents 258 0 R
>>
endobj
262 0 obj
<<
/Length 263 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 458.55 797 Tm
(Table of Contents) Tj
/F20 10 Tf
ET
q
1 g
52 767 491 12 re
f
Q
BT
1 0 0 1 124 770 Tm
(range <input field>) Tj
1 0 0 1 507.88 770 Tm
(21) Tj
ET
q
0.95 g
52 755 491 12 re
f
Q
BT
1 0 0 1 124 758 Tm
(mode <input field>) Tj
1 0 0 1 507.88 758 Tm
(21) Tj
ET
q
1 g
52 743 491 12 re
f
Q
BT
1 0 0 1 124 746 Tm
(values_all <input field>) Tj
1 0 0 1 507.88 746 Tm
(21) Tj
ET
q
0.95 g
52 731 491 12 re
f
Q
BT
1 0 0 1 124 734 Tm
(values_uniq <input field>) Tj
1 0 0 1 507.88 734 Tm
(21) Tj
ET
q
1 g
52 719 491 12 re
f
Q
BT
1 0 0 1 124 722 Tm
(serial <n>) Tj
1 0 0 1 507.88 722 Tm
(21) Tj
ET
q
0.95 g
52 707 491 12 re
f
Q
BT
1 0 0 1 124 710 Tm
(count *) Tj
1 0 0 1 507.88 710 Tm
(21) Tj
ET
q
1 g
52 695 491 12 re
f
Q
BT
1 0 0 1 124 698 Tm
(flag *) Tj
1 0 0 1 507.88 698 Tm
(22) Tj
ET
q
0.95 g
52 683 491 12 re
f
Q
BT
1 0 0 1 124 686 Tm
(corr <input field>) Tj
1 0 0 1 507.88 686 Tm
(22) Tj
ET
q
1 g
52 671 491 12 re
f
Q
BT
1 0 0 1 124 674 Tm
(covar_pop <input field>) Tj
1 0 0 1 507.88 674 Tm
(22) Tj
ET
q
0.95 g
52 659 491 12 re
f
Q
BT
1 0 0 1 124 662 Tm
(covar_samp <input field>) Tj
1 0 0 1 507.88 662 Tm
(22) Tj
ET
q
1 g
52 647 491 12 re
f
Q
BT
1 0 0 1 124 650 Tm
(cume_dist <input field>) Tj
1 0 0 1 507.88 650 Tm
(22) Tj
ET
q
0.95 g
52 635 491 12 re
f
Q
BT
1 0 0 1 124 638 Tm
(dense_rank <input field>) Tj
1 0 0 1 507.88 638 Tm
(22) Tj
ET
q
1 g
52 623 491 12 re
f
Q
BT
1 0 0 1 124 626 Tm
(rank <input field>) Tj
1 0 0 1 507.88 626 Tm
(22) Tj
ET
q
0.95 g
52 611 491 12 re
f
Q
BT
1 0 0 1 124 614 Tm
(= <calculation expression>) Tj
1 0 0 1 507.88 614 Tm
(22) Tj
ET
q
1 g
52 599 491 12 re
f
Q
BT
1 0 0 1 124 602 Tm
(Examples) Tj
1 0 0 1 507.88 602 Tm
(22) Tj
ET
q
0.95 g
52 587 491 12 re
f
Q
BT
1 0 0 1 100 590 Tm
(HAVING SECTION) Tj
1 0 0 1 507.88 590 Tm
(22) Tj
ET
q
1 g
52 575 491 12 re
f
Q
BT
1 0 0 1 124 578 Tm
(Format) Tj
1 0 0 1 507.88 578 Tm
(22) Tj
ET
q
0.95 g
52 563 491 12 re
f
Q
BT
1 0 0 1 124 566 Tm
(Examples) Tj
1 0 0 1 507.88 566 Tm
(22) Tj
ET
q
1 g
52 551 491 12 re
f
Q
BT
1 0 0 1 100 554 Tm
(SUMMARY SECTION) Tj
1 0 0 1 507.88 554 Tm
(22) Tj
ET
q
0.95 g
52 539 491 12 re
f
Q
BT
1 0 0 1 124 542 Tm
(Format) Tj
1 0 0 1 507.88 542 Tm
(23) Tj
ET
q
1 g
52 527 491 12 re
f
Q
BT
1 0 0 1 124 530 Tm
(Examples) Tj
1 0 0 1 507.88 530 Tm
(23) Tj
ET
q
0.95 g
52 515 491 12 re
f
Q
BT
1 0 0 1 76 518 Tm
(GENERATED PROGRAM OUTLINE) Tj
1 0 0 1 507.88 518 Tm
(24) Tj
ET
q
1 g
52 503 491 12 re
f
Q
BT
1 0 0 1 100 506 Tm
(Open Input Stream) Tj
1 0 0 1 507.88 506 Tm
(24) Tj
ET
q
0.95 g
52 491 491 12 re
f
Q
BT
1 0 0 1 100 494 Tm
(Load/Connect Tables) Tj
1 0 0 1 507.88 494 Tm
(24) Tj
ET
q
1 g
52 479 491 12 re
f
Q
BT
1 0 0 1 100 482 Tm
(Read Next Input Record) Tj
1 0 0 1 507.88 482 Tm
(24) Tj
ET
q
0.95 g
52 467 491 12 re
f
Q
BT
1 0 0 1 100 470 Tm
(Output Aggregated Record If Grouping Key Changes) Tj
1 0 0 1 507.88 470 Tm
(24) Tj
ET
q
1 g
52 455 491 12 re
f
Q
BT
1 0 0 1 100 458 Tm
(Calculate Derived Input Fields) Tj
1 0 0 1 507.88 458 Tm
(24) Tj
ET
q
0.95 g
52 443 491 12 re
f
Q
BT
1 0 0 1 100 446 Tm
(Perform Aggregations) Tj
1 0 0 1 507.88 446 Tm
(24) Tj
ET
q
1 g
52 431 491 12 re
f
Q
BT
1 0 0 1 100 434 Tm
(Process Outline:) Tj
1 0 0 1 507.88 434 Tm
(24) Tj
ET
q
0.95 g
52 419 491 12 re
f
Q
BT
1 0 0 1 76 422 Tm
(ARRAY FIELDS) Tj
1 0 0 1 507.88 422 Tm
(25) Tj
ET
q
1 g
52 407 491 12 re
f
Q
BT
1 0 0 1 76 410 Tm
(DATABASE CONNECTIVITY) Tj
1 0 0 1 507.88 410 Tm
(26) Tj
ET
q
0.95 g
52 395 491 12 re
f
Q
BT
1 0 0 1 100 398 Tm
(Connecting To Oracle Databases) Tj
1 0 0 1 507.88 398 Tm
(26) Tj
ET
q
1 g
52 383 491 12 re
f
Q
BT
1 0 0 1 100 386 Tm
(Connecting To Sqlite Databases) Tj
1 0 0 1 507.88 386 Tm
(26) Tj
ET
q
0.95 g
52 371 491 12 re
f
Q
BT
1 0 0 1 100 374 Tm
(Connecting To Mysql Databases) Tj
1 0 0 1 507.88 374 Tm
(26) Tj
ET
q
1 g
52 359 491 12 re
f
Q
BT
1 0 0 1 76 362 Tm
(MACROS) Tj
1 0 0 1 507.88 362 Tm
(27) Tj
ET
q
0.95 g
52 347 491 12 re
f
Q
BT
1 0 0 1 100 350 Tm
(&lookup) Tj
1 0 0 1 507.88 350 Tm
(27) Tj
ET
q
1 g
52 335 491 12 re
f
Q
BT
1 0 0 1 124 338 Tm
(Format) Tj
1 0 0 1 507.88 338 Tm
(27) Tj
ET
q
0.95 g
52 323 491 12 re
f
Q
BT
1 0 0 1 124 326 Tm
(Examples) Tj
1 0 0 1 507.88 326 Tm
(27) Tj
ET
q
1 g
52 311 491 12 re
f
Q
BT
1 0 0 1 100 314 Tm
(&date) Tj
1 0 0 1 507.88 314 Tm
(27) Tj
ET
q
0.95 g
52 299 491 12 re
f
Q
BT
1 0 0 1 124 302 Tm
(Format) Tj
1 0 0 1 507.88 302 Tm
(27) Tj
ET
q
1 g
52 287 491 12 re
f
Q
BT
1 0 0 1 124 290 Tm
(Examples) Tj
1 0 0 1 507.88 290 Tm
(27) Tj
ET
q
0.95 g
52 275 491 12 re
f
Q
BT
1 0 0 1 100 278 Tm
(&d &m &y) Tj
1 0 0 1 507.88 278 Tm
(27) Tj
ET
q
1 g
52 263 491 12 re
f
Q
BT
1 0 0 1 124 266 Tm
(Format) Tj
1 0 0 1 507.88 266 Tm
(27) Tj
ET
q
0.95 g
52 251 491 12 re
f
Q
BT
1 0 0 1 124 254 Tm
(Examples) Tj
1 0 0 1 507.88 254 Tm
(27) Tj
ET
q
1 g
52 239 491 12 re
f
Q
BT
1 0 0 1 100 242 Tm
(&today) Tj
1 0 0 1 507.88 242 Tm
(27) Tj
ET
q
0.95 g
52 227 491 12 re
f
Q
BT
1 0 0 1 124 230 Tm
(Format) Tj
1 0 0 1 507.88 230 Tm
(28) Tj
ET
q
1 g
52 215 491 12 re
f
Q
BT
1 0 0 1 124 218 Tm
(Examples) Tj
1 0 0 1 507.88 218 Tm
(28) Tj
ET
q
0.95 g
52 203 491 12 re
f
Q
BT
1 0 0 1 100 206 Tm
(&months_since) Tj
1 0 0 1 507.88 206 Tm
(28) Tj
ET
q
1 g
52 191 491 12 re
f
Q
BT
1 0 0 1 124 194 Tm
(Format) Tj
1 0 0 1 507.88 194 Tm
(28) Tj
ET
q
0.95 g
52 179 491 12 re
f
Q
BT
1 0 0 1 124 182 Tm
(Examples) Tj
1 0 0 1 507.88 182 Tm
(28) Tj
ET
q
1 g
52 167 491 12 re
f
Q
BT
1 0 0 1 100 170 Tm
(&add_months) Tj
1 0 0 1 507.88 170 Tm
(28) Tj
ET
q
0.95 g
52 155 491 12 re
f
Q
BT
1 0 0 1 124 158 Tm
(Format) Tj
1 0 0 1 507.88 158 Tm
(28) Tj
ET
q
1 g
52 143 491 12 re
f
Q
BT
1 0 0 1 124 146 Tm
(Examples) Tj
1 0 0 1 507.88 146 Tm
(28) Tj
ET
q
0.95 g
52 131 491 12 re
f
Q
BT
1 0 0 1 100 134 Tm
(&months_between) Tj
1 0 0 1 507.88 134 Tm
(28) Tj
ET
q
1 g
52 119 491 12 re
f
Q
BT
1 0 0 1 124 122 Tm
(Format) Tj
1 0 0 1 507.88 122 Tm
(28) Tj
ET
q
0.95 g
52 107 491 12 re
f
Q
BT
1 0 0 1 124 110 Tm
(Examples) Tj
1 0 0 1 507.88 110 Tm
(28) Tj
ET
q
1 g
52 95 491 12 re
f
Q
BT
1 0 0 1 100 98 Tm
(&last_day) Tj
1 0 0 1 507.88 98 Tm
(28) Tj
ET
q
0.95 g
52 83 491 12 re
f
Q
BT
1 0 0 1 124 86 Tm
(Format) Tj
1 0 0 1 507.88 86 Tm
(28) Tj
ET
q
1 g
52 71 491 12 re
f
Q
BT
1 0 0 1 124 74 Tm
(Examples) Tj
1 0 0 1 507.88 74 Tm
(28) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(iv) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
263 0 obj
6373
endobj
264 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
265 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 264 0 R
/Contents 262 0 R
>>
endobj
266 0 obj
<<
/Length 267 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Table of Contents) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
ET
q
0.95 g
52 767 491 12 re
f
Q
BT
1 0 0 1 100 770 Tm
(&date_last_day) Tj
1 0 0 1 507.88 770 Tm
(28) Tj
ET
q
1 g
52 755 491 12 re
f
Q
BT
1 0 0 1 124 758 Tm
(Format) Tj
1 0 0 1 507.88 758 Tm
(28) Tj
ET
q
0.95 g
52 743 491 12 re
f
Q
BT
1 0 0 1 124 746 Tm
(Examples) Tj
1 0 0 1 507.88 746 Tm
(28) Tj
ET
q
1 g
52 731 491 12 re
f
Q
BT
1 0 0 1 100 734 Tm
(&date_next_day) Tj
1 0 0 1 507.88 734 Tm
(29) Tj
ET
q
0.95 g
52 719 491 12 re
f
Q
BT
1 0 0 1 124 722 Tm
(Format) Tj
1 0 0 1 507.88 722 Tm
(29) Tj
ET
q
1 g
52 707 491 12 re
f
Q
BT
1 0 0 1 124 710 Tm
(Examples) Tj
1 0 0 1 507.88 710 Tm
(29) Tj
ET
q
0.95 g
52 695 491 12 re
f
Q
BT
1 0 0 1 100 698 Tm
(&day_number) Tj
1 0 0 1 507.88 698 Tm
(29) Tj
ET
q
1 g
52 683 491 12 re
f
Q
BT
1 0 0 1 124 686 Tm
(Format) Tj
1 0 0 1 507.88 686 Tm
(29) Tj
ET
q
0.95 g
52 671 491 12 re
f
Q
BT
1 0 0 1 124 674 Tm
(Examples) Tj
1 0 0 1 507.88 674 Tm
(29) Tj
ET
q
1 g
52 659 491 12 re
f
Q
BT
1 0 0 1 100 662 Tm
(&month) Tj
1 0 0 1 507.88 662 Tm
(29) Tj
ET
q
0.95 g
52 647 491 12 re
f
Q
BT
1 0 0 1 124 650 Tm
(Format) Tj
1 0 0 1 507.88 650 Tm
(29) Tj
ET
q
1 g
52 635 491 12 re
f
Q
BT
1 0 0 1 124 638 Tm
(Examples) Tj
1 0 0 1 507.88 638 Tm
(29) Tj
ET
q
0.95 g
52 623 491 12 re
f
Q
BT
1 0 0 1 100 626 Tm
(&period) Tj
1 0 0 1 507.88 626 Tm
(29) Tj
ET
q
1 g
52 611 491 12 re
f
Q
BT
1 0 0 1 124 614 Tm
(Format) Tj
1 0 0 1 507.88 614 Tm
(29) Tj
ET
q
0.95 g
52 599 491 12 re
f
Q
BT
1 0 0 1 124 602 Tm
(Examples) Tj
1 0 0 1 507.88 602 Tm
(29) Tj
ET
q
1 g
52 587 491 12 re
f
Q
BT
1 0 0 1 100 590 Tm
(&select) Tj
1 0 0 1 507.88 590 Tm
(29) Tj
ET
q
0.95 g
52 575 491 12 re
f
Q
BT
1 0 0 1 124 578 Tm
(Format) Tj
1 0 0 1 507.88 578 Tm
(29) Tj
ET
q
1 g
52 563 491 12 re
f
Q
BT
1 0 0 1 124 566 Tm
(Examples) Tj
1 0 0 1 507.88 566 Tm
(29) Tj
ET
q
0.95 g
52 551 491 12 re
f
Q
BT
1 0 0 1 100 554 Tm
(&map) Tj
1 0 0 1 507.88 554 Tm
(30) Tj
ET
q
1 g
52 539 491 12 re
f
Q
BT
1 0 0 1 124 542 Tm
(Format) Tj
1 0 0 1 507.88 542 Tm
(30) Tj
ET
q
0.95 g
52 527 491 12 re
f
Q
BT
1 0 0 1 124 530 Tm
(Examples) Tj
1 0 0 1 507.88 530 Tm
(30) Tj
ET
q
1 g
52 515 491 12 re
f
Q
BT
1 0 0 1 100 518 Tm
(&to_array) Tj
1 0 0 1 507.88 518 Tm
(30) Tj
ET
q
0.95 g
52 503 491 12 re
f
Q
BT
1 0 0 1 124 506 Tm
(Format) Tj
1 0 0 1 507.88 506 Tm
(30) Tj
ET
q
1 g
52 491 491 12 re
f
Q
BT
1 0 0 1 124 494 Tm
(Examples) Tj
1 0 0 1 507.88 494 Tm
(30) Tj
ET
q
0.95 g
52 479 491 12 re
f
Q
BT
1 0 0 1 100 482 Tm
(&arr_size) Tj
1 0 0 1 507.88 482 Tm
(30) Tj
ET
q
1 g
52 467 491 12 re
f
Q
BT
1 0 0 1 124 470 Tm
(Format) Tj
1 0 0 1 507.88 470 Tm
(30) Tj
ET
q
0.95 g
52 455 491 12 re
f
Q
BT
1 0 0 1 124 458 Tm
(Examples) Tj
1 0 0 1 507.88 458 Tm
(30) Tj
ET
q
1 g
52 443 491 12 re
f
Q
BT
1 0 0 1 100 446 Tm
(&arr_sort) Tj
1 0 0 1 507.88 446 Tm
(30) Tj
ET
q
0.95 g
52 431 491 12 re
f
Q
BT
1 0 0 1 124 434 Tm
(Format) Tj
1 0 0 1 507.88 434 Tm
(30) Tj
ET
q
1 g
52 419 491 12 re
f
Q
BT
1 0 0 1 124 422 Tm
(Examples) Tj
1 0 0 1 507.88 422 Tm
(30) Tj
ET
q
0.95 g
52 407 491 12 re
f
Q
BT
1 0 0 1 100 410 Tm
(&arr_reverse) Tj
1 0 0 1 507.88 410 Tm
(30) Tj
ET
q
1 g
52 395 491 12 re
f
Q
BT
1 0 0 1 124 398 Tm
(Format) Tj
1 0 0 1 507.88 398 Tm
(30) Tj
ET
q
0.95 g
52 383 491 12 re
f
Q
BT
1 0 0 1 124 386 Tm
(Examples) Tj
1 0 0 1 507.88 386 Tm
(30) Tj
ET
q
1 g
52 371 491 12 re
f
Q
BT
1 0 0 1 100 374 Tm
(&arr_first) Tj
1 0 0 1 507.88 374 Tm
(30) Tj
ET
q
0.95 g
52 359 491 12 re
f
Q
BT
1 0 0 1 124 362 Tm
(Format) Tj
1 0 0 1 507.88 362 Tm
(30) Tj
ET
q
1 g
52 347 491 12 re
f
Q
BT
1 0 0 1 124 350 Tm
(Examples) Tj
1 0 0 1 507.88 350 Tm
(31) Tj
ET
q
0.95 g
52 335 491 12 re
f
Q
BT
1 0 0 1 100 338 Tm
(&arr_last) Tj
1 0 0 1 507.88 338 Tm
(31) Tj
ET
q
1 g
52 323 491 12 re
f
Q
BT
1 0 0 1 124 326 Tm
(Format) Tj
1 0 0 1 507.88 326 Tm
(31) Tj
ET
q
0.95 g
52 311 491 12 re
f
Q
BT
1 0 0 1 124 314 Tm
(Examples) Tj
1 0 0 1 507.88 314 Tm
(31) Tj
ET
q
1 g
52 299 491 12 re
f
Q
BT
1 0 0 1 100 302 Tm
(&arr_min) Tj
1 0 0 1 507.88 302 Tm
(31) Tj
ET
q
0.95 g
52 287 491 12 re
f
Q
BT
1 0 0 1 124 290 Tm
(Format) Tj
1 0 0 1 507.88 290 Tm
(31) Tj
ET
q
1 g
52 275 491 12 re
f
Q
BT
1 0 0 1 124 278 Tm
(Examples) Tj
1 0 0 1 507.88 278 Tm
(31) Tj
ET
q
0.95 g
52 263 491 12 re
f
Q
BT
1 0 0 1 100 266 Tm
(&arr_max) Tj
1 0 0 1 507.88 266 Tm
(31) Tj
ET
q
1 g
52 251 491 12 re
f
Q
BT
1 0 0 1 124 254 Tm
(Format) Tj
1 0 0 1 507.88 254 Tm
(31) Tj
ET
q
0.95 g
52 239 491 12 re
f
Q
BT
1 0 0 1 124 242 Tm
(Examples) Tj
1 0 0 1 507.88 242 Tm
(31) Tj
ET
q
1 g
52 227 491 12 re
f
Q
BT
1 0 0 1 100 230 Tm
(&arr_avg) Tj
1 0 0 1 507.88 230 Tm
(31) Tj
ET
q
0.95 g
52 215 491 12 re
f
Q
BT
1 0 0 1 124 218 Tm
(Format) Tj
1 0 0 1 507.88 218 Tm
(31) Tj
ET
q
1 g
52 203 491 12 re
f
Q
BT
1 0 0 1 124 206 Tm
(Examples) Tj
1 0 0 1 507.88 206 Tm
(31) Tj
ET
q
0.95 g
52 191 491 12 re
f
Q
BT
1 0 0 1 100 194 Tm
(&arr_sum) Tj
1 0 0 1 507.88 194 Tm
(31) Tj
ET
q
1 g
52 179 491 12 re
f
Q
BT
1 0 0 1 124 182 Tm
(Format) Tj
1 0 0 1 507.88 182 Tm
(31) Tj
ET
q
0.95 g
52 167 491 12 re
f
Q
BT
1 0 0 1 124 170 Tm
(Examples) Tj
1 0 0 1 507.88 170 Tm
(31) Tj
ET
q
1 g
52 155 491 12 re
f
Q
BT
1 0 0 1 100 158 Tm
(&arr_median) Tj
1 0 0 1 507.88 158 Tm
(31) Tj
ET
q
0.95 g
52 143 491 12 re
f
Q
BT
1 0 0 1 124 146 Tm
(Format) Tj
1 0 0 1 507.88 146 Tm
(32) Tj
ET
q
1 g
52 131 491 12 re
f
Q
BT
1 0 0 1 124 134 Tm
(Examples) Tj
1 0 0 1 507.88 134 Tm
(32) Tj
ET
q
0.95 g
52 119 491 12 re
f
Q
BT
1 0 0 1 100 122 Tm
(&arr_variance) Tj
1 0 0 1 507.88 122 Tm
(32) Tj
ET
q
1 g
52 107 491 12 re
f
Q
BT
1 0 0 1 124 110 Tm
(Format) Tj
1 0 0 1 507.88 110 Tm
(32) Tj
ET
q
0.95 g
52 95 491 12 re
f
Q
BT
1 0 0 1 124 98 Tm
(Examples) Tj
1 0 0 1 507.88 98 Tm
(32) Tj
ET
q
1 g
52 83 491 12 re
f
Q
BT
1 0 0 1 100 86 Tm
(&arr_stddev) Tj
1 0 0 1 507.88 86 Tm
(32) Tj
ET
q
0.95 g
52 71 491 12 re
f
Q
BT
1 0 0 1 124 74 Tm
(Format) Tj
1 0 0 1 507.88 74 Tm
(32) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 537.44 37 Tm
(v) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
267 0 obj
5998
endobj
268 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
269 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 268 0 R
/Contents 266 0 R
>>
endobj
270 0 obj
<<
/Length 271 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 458.55 797 Tm
(Table of Contents) Tj
/F20 10 Tf
ET
q
1 g
52 767 491 12 re
f
Q
BT
1 0 0 1 124 770 Tm
(Examples) Tj
1 0 0 1 507.88 770 Tm
(32) Tj
ET
q
0.95 g
52 755 491 12 re
f
Q
BT
1 0 0 1 100 758 Tm
(&arr_range) Tj
1 0 0 1 507.88 758 Tm
(32) Tj
ET
q
1 g
52 743 491 12 re
f
Q
BT
1 0 0 1 124 746 Tm
(Format) Tj
1 0 0 1 507.88 746 Tm
(32) Tj
ET
q
0.95 g
52 731 491 12 re
f
Q
BT
1 0 0 1 124 734 Tm
(Examples) Tj
1 0 0 1 507.88 734 Tm
(32) Tj
ET
q
1 g
52 719 491 12 re
f
Q
BT
1 0 0 1 100 722 Tm
(&arr_mode) Tj
1 0 0 1 507.88 722 Tm
(32) Tj
ET
q
0.95 g
52 707 491 12 re
f
Q
BT
1 0 0 1 124 710 Tm
(Format) Tj
1 0 0 1 507.88 710 Tm
(32) Tj
ET
q
1 g
52 695 491 12 re
f
Q
BT
1 0 0 1 124 698 Tm
(Examples) Tj
1 0 0 1 507.88 698 Tm
(32) Tj
ET
q
0.95 g
52 683 491 12 re
f
Q
BT
1 0 0 1 100 686 Tm
(&arr_values_uniq) Tj
1 0 0 1 507.88 686 Tm
(32) Tj
ET
q
1 g
52 671 491 12 re
f
Q
BT
1 0 0 1 124 674 Tm
(Format) Tj
1 0 0 1 507.88 674 Tm
(32) Tj
ET
q
0.95 g
52 659 491 12 re
f
Q
BT
1 0 0 1 124 662 Tm
(Examples) Tj
1 0 0 1 507.88 662 Tm
(32) Tj
ET
q
1 g
52 647 491 12 re
f
Q
BT
1 0 0 1 100 650 Tm
(&arr_shift) Tj
1 0 0 1 507.88 650 Tm
(32) Tj
ET
q
0.95 g
52 635 491 12 re
f
Q
BT
1 0 0 1 124 638 Tm
(Format) Tj
1 0 0 1 507.88 638 Tm
(32) Tj
ET
q
1 g
52 623 491 12 re
f
Q
BT
1 0 0 1 124 626 Tm
(Examples) Tj
1 0 0 1 507.88 626 Tm
(32) Tj
ET
q
0.95 g
52 611 491 12 re
f
Q
BT
1 0 0 1 100 614 Tm
(&arr_push) Tj
1 0 0 1 507.88 614 Tm
(33) Tj
ET
q
1 g
52 599 491 12 re
f
Q
BT
1 0 0 1 124 602 Tm
(Format) Tj
1 0 0 1 507.88 602 Tm
(33) Tj
ET
q
0.95 g
52 587 491 12 re
f
Q
BT
1 0 0 1 124 590 Tm
(Examples) Tj
1 0 0 1 507.88 590 Tm
(33) Tj
ET
q
1 g
52 575 491 12 re
f
Q
BT
1 0 0 1 100 578 Tm
(&arr_pop) Tj
1 0 0 1 507.88 578 Tm
(33) Tj
ET
q
0.95 g
52 563 491 12 re
f
Q
BT
1 0 0 1 124 566 Tm
(Format) Tj
1 0 0 1 507.88 566 Tm
(33) Tj
ET
q
1 g
52 551 491 12 re
f
Q
BT
1 0 0 1 124 554 Tm
(Examples) Tj
1 0 0 1 507.88 554 Tm
(33) Tj
ET
q
0.95 g
52 539 491 12 re
f
Q
BT
1 0 0 1 100 542 Tm
(&arr_lookup) Tj
1 0 0 1 507.88 542 Tm
(33) Tj
ET
q
1 g
52 527 491 12 re
f
Q
BT
1 0 0 1 124 530 Tm
(Format) Tj
1 0 0 1 507.88 530 Tm
(33) Tj
ET
q
0.95 g
52 515 491 12 re
f
Q
BT
1 0 0 1 124 518 Tm
(Examples) Tj
1 0 0 1 507.88 518 Tm
(33) Tj
ET
q
1 g
52 503 491 12 re
f
Q
BT
1 0 0 1 100 506 Tm
(&extract_init) Tj
1 0 0 1 507.88 506 Tm
(33) Tj
ET
q
0.95 g
52 491 491 12 re
f
Q
BT
1 0 0 1 124 494 Tm
(Format) Tj
1 0 0 1 507.88 494 Tm
(33) Tj
ET
q
1 g
52 479 491 12 re
f
Q
BT
1 0 0 1 124 482 Tm
(Examples) Tj
1 0 0 1 507.88 482 Tm
(33) Tj
ET
q
0.95 g
52 467 491 12 re
f
Q
BT
1 0 0 1 100 470 Tm
(&remove_numeric) Tj
1 0 0 1 507.88 470 Tm
(33) Tj
ET
q
1 g
52 455 491 12 re
f
Q
BT
1 0 0 1 124 458 Tm
(Format) Tj
1 0 0 1 507.88 458 Tm
(33) Tj
ET
q
0.95 g
52 443 491 12 re
f
Q
BT
1 0 0 1 124 446 Tm
(Examples) Tj
1 0 0 1 507.88 446 Tm
(33) Tj
ET
q
1 g
52 431 491 12 re
f
Q
BT
1 0 0 1 100 434 Tm
(&remove_special) Tj
1 0 0 1 507.88 434 Tm
(34) Tj
ET
q
0.95 g
52 419 491 12 re
f
Q
BT
1 0 0 1 124 422 Tm
(Format) Tj
1 0 0 1 507.88 422 Tm
(34) Tj
ET
q
1 g
52 407 491 12 re
f
Q
BT
1 0 0 1 124 410 Tm
(Examples) Tj
1 0 0 1 507.88 410 Tm
(34) Tj
ET
q
0.95 g
52 395 491 12 re
f
Q
BT
1 0 0 1 100 398 Tm
(&remove_spaces) Tj
1 0 0 1 507.88 398 Tm
(34) Tj
ET
q
1 g
52 383 491 12 re
f
Q
BT
1 0 0 1 124 386 Tm
(Format) Tj
1 0 0 1 507.88 386 Tm
(34) Tj
ET
q
0.95 g
52 371 491 12 re
f
Q
BT
1 0 0 1 124 374 Tm
(Examples) Tj
1 0 0 1 507.88 374 Tm
(34) Tj
ET
q
1 g
52 359 491 12 re
f
Q
BT
1 0 0 1 100 362 Tm
(&match, &match_all) Tj
1 0 0 1 507.88 362 Tm
(34) Tj
ET
q
0.95 g
52 347 491 12 re
f
Q
BT
1 0 0 1 124 350 Tm
(Format) Tj
1 0 0 1 507.88 350 Tm
(34) Tj
ET
q
1 g
52 335 491 12 re
f
Q
BT
1 0 0 1 124 338 Tm
(Examples) Tj
1 0 0 1 507.88 338 Tm
(34) Tj
ET
q
0.95 g
52 323 491 12 re
f
Q
BT
1 0 0 1 100 326 Tm
(&remove_non_numeric, &extract_numeric, &to_number) Tj
1 0 0 1 507.88 326 Tm
(34) Tj
ET
q
1 g
52 311 491 12 re
f
Q
BT
1 0 0 1 124 314 Tm
(Format) Tj
1 0 0 1 507.88 314 Tm
(34) Tj
ET
q
0.95 g
52 299 491 12 re
f
Q
BT
1 0 0 1 124 302 Tm
(Examples) Tj
1 0 0 1 507.88 302 Tm
(34) Tj
ET
q
1 g
52 287 491 12 re
f
Q
BT
1 0 0 1 100 290 Tm
(&length) Tj
1 0 0 1 507.88 290 Tm
(34) Tj
ET
q
0.95 g
52 275 491 12 re
f
Q
BT
1 0 0 1 124 278 Tm
(Format) Tj
1 0 0 1 507.88 278 Tm
(34) Tj
ET
q
1 g
52 263 491 12 re
f
Q
BT
1 0 0 1 124 266 Tm
(Examples) Tj
1 0 0 1 507.88 266 Tm
(34) Tj
ET
q
0.95 g
52 251 491 12 re
f
Q
BT
1 0 0 1 100 254 Tm
(&substr) Tj
1 0 0 1 507.88 254 Tm
(34) Tj
ET
q
1 g
52 239 491 12 re
f
Q
BT
1 0 0 1 124 242 Tm
(Format) Tj
1 0 0 1 507.88 242 Tm
(34) Tj
ET
q
0.95 g
52 227 491 12 re
f
Q
BT
1 0 0 1 124 230 Tm
(Examples) Tj
1 0 0 1 507.88 230 Tm
(35) Tj
ET
q
1 g
52 215 491 12 re
f
Q
BT
1 0 0 1 100 218 Tm
(&index) Tj
1 0 0 1 507.88 218 Tm
(35) Tj
ET
q
0.95 g
52 203 491 12 re
f
Q
BT
1 0 0 1 124 206 Tm
(Format) Tj
1 0 0 1 507.88 206 Tm
(35) Tj
ET
q
1 g
52 191 491 12 re
f
Q
BT
1 0 0 1 124 194 Tm
(Examples) Tj
1 0 0 1 507.88 194 Tm
(35) Tj
ET
q
0.95 g
52 179 491 12 re
f
Q
BT
1 0 0 1 100 182 Tm
(&rindex) Tj
1 0 0 1 507.88 182 Tm
(35) Tj
ET
q
1 g
52 167 491 12 re
f
Q
BT
1 0 0 1 124 170 Tm
(Format) Tj
1 0 0 1 507.88 170 Tm
(35) Tj
ET
q
0.95 g
52 155 491 12 re
f
Q
BT
1 0 0 1 124 158 Tm
(Examples) Tj
1 0 0 1 507.88 158 Tm
(35) Tj
ET
q
1 g
52 143 491 12 re
f
Q
BT
1 0 0 1 100 146 Tm
(&lc) Tj
1 0 0 1 507.88 146 Tm
(35) Tj
ET
q
0.95 g
52 131 491 12 re
f
Q
BT
1 0 0 1 124 134 Tm
(Format) Tj
1 0 0 1 507.88 134 Tm
(35) Tj
ET
q
1 g
52 119 491 12 re
f
Q
BT
1 0 0 1 124 122 Tm
(Examples) Tj
1 0 0 1 507.88 122 Tm
(35) Tj
ET
q
0.95 g
52 107 491 12 re
f
Q
BT
1 0 0 1 100 110 Tm
(&lc_first) Tj
1 0 0 1 507.88 110 Tm
(35) Tj
ET
q
1 g
52 95 491 12 re
f
Q
BT
1 0 0 1 124 98 Tm
(Format) Tj
1 0 0 1 507.88 98 Tm
(35) Tj
ET
q
0.95 g
52 83 491 12 re
f
Q
BT
1 0 0 1 124 86 Tm
(Examples) Tj
1 0 0 1 507.88 86 Tm
(35) Tj
ET
q
1 g
52 71 491 12 re
f
Q
BT
1 0 0 1 100 74 Tm
(&uc) Tj
1 0 0 1 507.88 74 Tm
(35) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(vi) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
271 0 obj
6049
endobj
272 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
273 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 272 0 R
/Contents 270 0 R
>>
endobj
274 0 obj
<<
/Length 275 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Table of Contents) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F20 10 Tf
ET
q
0.95 g
52 767 491 12 re
f
Q
BT
1 0 0 1 124 770 Tm
(Format) Tj
1 0 0 1 507.88 770 Tm
(35) Tj
ET
q
1 g
52 755 491 12 re
f
Q
BT
1 0 0 1 124 758 Tm
(Examples) Tj
1 0 0 1 507.88 758 Tm
(35) Tj
ET
q
0.95 g
52 743 491 12 re
f
Q
BT
1 0 0 1 100 746 Tm
(&uc_first) Tj
1 0 0 1 507.88 746 Tm
(36) Tj
ET
q
1 g
52 731 491 12 re
f
Q
BT
1 0 0 1 124 734 Tm
(Format) Tj
1 0 0 1 507.88 734 Tm
(36) Tj
ET
q
0.95 g
52 719 491 12 re
f
Q
BT
1 0 0 1 124 722 Tm
(Examples) Tj
1 0 0 1 507.88 722 Tm
(36) Tj
ET
q
1 g
52 707 491 12 re
f
Q
BT
1 0 0 1 100 710 Tm
(&clip_str) Tj
1 0 0 1 507.88 710 Tm
(36) Tj
ET
q
0.95 g
52 695 491 12 re
f
Q
BT
1 0 0 1 124 698 Tm
(Format) Tj
1 0 0 1 507.88 698 Tm
(36) Tj
ET
q
1 g
52 683 491 12 re
f
Q
BT
1 0 0 1 124 686 Tm
(Examples) Tj
1 0 0 1 507.88 686 Tm
(36) Tj
ET
q
0.95 g
52 671 491 12 re
f
Q
BT
1 0 0 1 100 674 Tm
(&left_clip_str) Tj
1 0 0 1 507.88 674 Tm
(36) Tj
ET
q
1 g
52 659 491 12 re
f
Q
BT
1 0 0 1 124 662 Tm
(Format) Tj
1 0 0 1 507.88 662 Tm
(36) Tj
ET
q
0.95 g
52 647 491 12 re
f
Q
BT
1 0 0 1 124 650 Tm
(Examples) Tj
1 0 0 1 507.88 650 Tm
(36) Tj
ET
q
1 g
52 635 491 12 re
f
Q
BT
1 0 0 1 100 638 Tm
(&right_clip_str) Tj
1 0 0 1 507.88 638 Tm
(36) Tj
ET
q
0.95 g
52 623 491 12 re
f
Q
BT
1 0 0 1 124 626 Tm
(Format) Tj
1 0 0 1 507.88 626 Tm
(36) Tj
ET
q
1 g
52 611 491 12 re
f
Q
BT
1 0 0 1 124 614 Tm
(Examples) Tj
1 0 0 1 507.88 614 Tm
(36) Tj
ET
q
0.95 g
52 599 491 12 re
f
Q
BT
1 0 0 1 100 602 Tm
(&left_pad_str) Tj
1 0 0 1 507.88 602 Tm
(37) Tj
ET
q
1 g
52 587 491 12 re
f
Q
BT
1 0 0 1 124 590 Tm
(Format) Tj
1 0 0 1 507.88 590 Tm
(37) Tj
ET
q
0.95 g
52 575 491 12 re
f
Q
BT
1 0 0 1 124 578 Tm
(Examples) Tj
1 0 0 1 507.88 578 Tm
(37) Tj
ET
q
1 g
52 563 491 12 re
f
Q
BT
1 0 0 1 100 566 Tm
(&right_pad_str) Tj
1 0 0 1 507.88 566 Tm
(37) Tj
ET
q
0.95 g
52 551 491 12 re
f
Q
BT
1 0 0 1 124 554 Tm
(Format) Tj
1 0 0 1 507.88 554 Tm
(37) Tj
ET
q
1 g
52 539 491 12 re
f
Q
BT
1 0 0 1 124 542 Tm
(Examples) Tj
1 0 0 1 507.88 542 Tm
(37) Tj
ET
q
0.95 g
52 527 491 12 re
f
Q
BT
1 0 0 1 100 530 Tm
(&trim) Tj
1 0 0 1 507.88 530 Tm
(37) Tj
ET
q
1 g
52 515 491 12 re
f
Q
BT
1 0 0 1 124 518 Tm
(Format) Tj
1 0 0 1 507.88 518 Tm
(37) Tj
ET
q
0.95 g
52 503 491 12 re
f
Q
BT
1 0 0 1 124 506 Tm
(Examples) Tj
1 0 0 1 507.88 506 Tm
(37) Tj
ET
q
1 g
52 491 491 12 re
f
Q
BT
1 0 0 1 100 494 Tm
(&trim_leading) Tj
1 0 0 1 507.88 494 Tm
(37) Tj
ET
q
0.95 g
52 479 491 12 re
f
Q
BT
1 0 0 1 124 482 Tm
(Format) Tj
1 0 0 1 507.88 482 Tm
(37) Tj
ET
q
1 g
52 467 491 12 re
f
Q
BT
1 0 0 1 124 470 Tm
(Examples) Tj
1 0 0 1 507.88 470 Tm
(37) Tj
ET
q
0.95 g
52 455 491 12 re
f
Q
BT
1 0 0 1 100 458 Tm
(&trim_trailing) Tj
1 0 0 1 507.88 458 Tm
(37) Tj
ET
q
1 g
52 443 491 12 re
f
Q
BT
1 0 0 1 124 446 Tm
(Format) Tj
1 0 0 1 507.88 446 Tm
(37) Tj
ET
q
0.95 g
52 431 491 12 re
f
Q
BT
1 0 0 1 124 434 Tm
(Examples) Tj
1 0 0 1 507.88 434 Tm
(37) Tj
ET
q
1 g
52 419 491 12 re
f
Q
BT
1 0 0 1 100 422 Tm
(&translate) Tj
1 0 0 1 507.88 422 Tm
(37) Tj
ET
q
0.95 g
52 407 491 12 re
f
Q
BT
1 0 0 1 124 410 Tm
(Format) Tj
1 0 0 1 507.88 410 Tm
(38) Tj
ET
q
1 g
52 395 491 12 re
f
Q
BT
1 0 0 1 124 398 Tm
(Examples) Tj
1 0 0 1 507.88 398 Tm
(38) Tj
ET
q
0.95 g
52 383 491 12 re
f
Q
BT
1 0 0 1 100 386 Tm
(&soundex) Tj
1 0 0 1 507.88 386 Tm
(38) Tj
ET
q
1 g
52 371 491 12 re
f
Q
BT
1 0 0 1 124 374 Tm
(Format) Tj
1 0 0 1 507.88 374 Tm
(38) Tj
ET
q
0.95 g
52 359 491 12 re
f
Q
BT
1 0 0 1 124 362 Tm
(Examples) Tj
1 0 0 1 507.88 362 Tm
(38) Tj
ET
q
1 g
52 347 491 12 re
f
Q
BT
1 0 0 1 100 350 Tm
(&initcap) Tj
1 0 0 1 507.88 350 Tm
(38) Tj
ET
q
0.95 g
52 335 491 12 re
f
Q
BT
1 0 0 1 124 338 Tm
(Format) Tj
1 0 0 1 507.88 338 Tm
(38) Tj
ET
q
1 g
52 323 491 12 re
f
Q
BT
1 0 0 1 124 326 Tm
(Examples) Tj
1 0 0 1 507.88 326 Tm
(38) Tj
ET
q
0.95 g
52 311 491 12 re
f
Q
BT
1 0 0 1 100 314 Tm
(&banding) Tj
1 0 0 1 507.88 314 Tm
(38) Tj
ET
q
1 g
52 299 491 12 re
f
Q
BT
1 0 0 1 124 302 Tm
(Format) Tj
1 0 0 1 507.88 302 Tm
(38) Tj
ET
q
0.95 g
52 287 491 12 re
f
Q
BT
1 0 0 1 124 290 Tm
(Examples) Tj
1 0 0 1 507.88 290 Tm
(38) Tj
ET
q
1 g
52 275 491 12 re
f
Q
BT
1 0 0 1 100 278 Tm
(&env) Tj
1 0 0 1 507.88 278 Tm
(39) Tj
ET
q
0.95 g
52 263 491 12 re
f
Q
BT
1 0 0 1 124 266 Tm
(Format) Tj
1 0 0 1 507.88 266 Tm
(39) Tj
ET
q
1 g
52 251 491 12 re
f
Q
BT
1 0 0 1 124 254 Tm
(Examples) Tj
1 0 0 1 507.88 254 Tm
(39) Tj
ET
q
0.95 g
52 239 491 12 re
f
Q
BT
1 0 0 1 100 242 Tm
(&option) Tj
1 0 0 1 507.88 242 Tm
(39) Tj
ET
q
1 g
52 227 491 12 re
f
Q
BT
1 0 0 1 124 230 Tm
(Format) Tj
1 0 0 1 507.88 230 Tm
(39) Tj
ET
q
0.95 g
52 215 491 12 re
f
Q
BT
1 0 0 1 124 218 Tm
(Examples) Tj
1 0 0 1 507.88 218 Tm
(39) Tj
ET
q
1 g
52 203 491 12 re
f
Q
BT
1 0 0 1 100 206 Tm
(&sqrt &rand &log &sin &exp &cos &abs &atan2 &ord &chr &int) Tj
1 0 0 1 507.88 206 Tm
(39) Tj
ET
q
0.95 g
52 191 491 12 re
f
Q
BT
1 0 0 1 124 194 Tm
(Format) Tj
1 0 0 1 507.88 194 Tm
(39) Tj
ET
q
1 g
52 179 491 12 re
f
Q
BT
1 0 0 1 100 182 Tm
(&sign) Tj
1 0 0 1 507.88 182 Tm
(39) Tj
ET
q
0.95 g
52 167 491 12 re
f
Q
BT
1 0 0 1 124 170 Tm
(Format) Tj
1 0 0 1 507.88 170 Tm
(39) Tj
ET
q
1 g
52 155 491 12 re
f
Q
BT
1 0 0 1 124 158 Tm
(Examples) Tj
1 0 0 1 507.88 158 Tm
(40) Tj
ET
q
0.95 g
52 143 491 12 re
f
Q
BT
1 0 0 1 100 146 Tm
(&trunc) Tj
1 0 0 1 507.88 146 Tm
(40) Tj
ET
q
1 g
52 131 491 12 re
f
Q
BT
1 0 0 1 124 134 Tm
(Format) Tj
1 0 0 1 507.88 134 Tm
(40) Tj
ET
q
0.95 g
52 119 491 12 re
f
Q
BT
1 0 0 1 124 122 Tm
(Examples) Tj
1 0 0 1 507.88 122 Tm
(40) Tj
ET
q
1 g
52 107 491 12 re
f
Q
BT
1 0 0 1 100 110 Tm
(&arr_set_and) Tj
1 0 0 1 507.88 110 Tm
(40) Tj
ET
q
0.95 g
52 95 491 12 re
f
Q
BT
1 0 0 1 124 98 Tm
(Format) Tj
1 0 0 1 507.88 98 Tm
(40) Tj
ET
q
1 g
52 83 491 12 re
f
Q
BT
1 0 0 1 124 86 Tm
(Examples) Tj
1 0 0 1 507.88 86 Tm
(40) Tj
ET
q
0.95 g
52 71 491 12 re
f
Q
BT
1 0 0 1 100 74 Tm
(&arr_set_xor) Tj
1 0 0 1 507.88 74 Tm
(40) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 531.88 37 Tm
(vii) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
275 0 obj
6056
endobj
276 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
277 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 276 0 R
/Contents 274 0 R
>>
endobj
278 0 obj
<<
/Length 279 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(Pequel ETL) Tj
1 0 0 1 458.55 797 Tm
(Table of Contents) Tj
/F20 10 Tf
ET
q
1 g
52 767 491 12 re
f
Q
BT
1 0 0 1 124 770 Tm
(Format) Tj
1 0 0 1 507.88 770 Tm
(40) Tj
ET
q
0.95 g
52 755 491 12 re
f
Q
BT
1 0 0 1 124 758 Tm
(Examples) Tj
1 0 0 1 507.88 758 Tm
(40) Tj
ET
q
1 g
52 743 491 12 re
f
Q
BT
1 0 0 1 100 746 Tm
(&arr_set_or) Tj
1 0 0 1 507.88 746 Tm
(40) Tj
ET
q
0.95 g
52 731 491 12 re
f
Q
BT
1 0 0 1 124 734 Tm
(Format) Tj
1 0 0 1 507.88 734 Tm
(40) Tj
ET
q
1 g
52 719 491 12 re
f
Q
BT
1 0 0 1 124 722 Tm
(Examples) Tj
1 0 0 1 507.88 722 Tm
(40) Tj
ET
q
0.95 g
52 707 491 12 re
f
Q
BT
1 0 0 1 76 710 Tm
(EXAMPLE PEQUEL SCRIPTS) Tj
1 0 0 1 507.88 710 Tm
(41) Tj
ET
q
1 g
52 695 491 12 re
f
Q
BT
1 0 0 1 100 698 Tm
(Aggregates Example Script) Tj
1 0 0 1 507.88 698 Tm
(41) Tj
ET
q
0.95 g
52 683 491 12 re
f
Q
BT
1 0 0 1 100 686 Tm
(Apache CLF Log Input Example Script) Tj
1 0 0 1 507.88 686 Tm
(42) Tj
ET
q
1 g
52 671 491 12 re
f
Q
BT
1 0 0 1 100 674 Tm
(Array Fields Example Script) Tj
1 0 0 1 507.88 674 Tm
(43) Tj
ET
q
0.95 g
52 659 491 12 re
f
Q
BT
1 0 0 1 100 662 Tm
(Pequel Script Chaining Example Scripts) Tj
1 0 0 1 507.88 662 Tm
(44) Tj
ET
q
1 g
52 647 491 12 re
f
Q
BT
1 0 0 1 124 650 Tm
(chain_pequel_pt1.pql) Tj
1 0 0 1 507.88 650 Tm
(44) Tj
ET
q
0.95 g
52 635 491 12 re
f
Q
BT
1 0 0 1 124 638 Tm
(chain_pequel_pt2.pql) Tj
1 0 0 1 507.88 638 Tm
(44) Tj
ET
q
1 g
52 623 491 12 re
f
Q
BT
1 0 0 1 100 626 Tm
(Conditional Aggregation Example Script) Tj
1 0 0 1 507.88 626 Tm
(45) Tj
ET
q
0.95 g
52 611 491 12 re
f
Q
BT
1 0 0 1 100 614 Tm
(External Tables Example Script) Tj
1 0 0 1 507.88 614 Tm
(46) Tj
ET
q
1 g
52 599 491 12 re
f
Q
BT
1 0 0 1 100 602 Tm
(Filter Regex Example Script) Tj
1 0 0 1 507.88 602 Tm
(47) Tj
ET
q
0.95 g
52 587 491 12 re
f
Q
BT
1 0 0 1 100 590 Tm
(Group By Derived Example Scripts) Tj
1 0 0 1 507.88 590 Tm
(48) Tj
ET
q
1 g
52 575 491 12 re
f
Q
BT
1 0 0 1 124 578 Tm
(Example Script 1) Tj
1 0 0 1 507.88 578 Tm
(48) Tj
ET
q
0.95 g
52 563 491 12 re
f
Q
BT
1 0 0 1 124 566 Tm
(Example Script 2) Tj
1 0 0 1 507.88 566 Tm
(48) Tj
ET
q
1 g
52 551 491 12 re
f
Q
BT
1 0 0 1 100 554 Tm
(Hash Option Example Script) Tj
1 0 0 1 507.88 554 Tm
(49) Tj
ET
q
0.95 g
52 539 491 12 re
f
Q
BT
1 0 0 1 100 542 Tm
(Local Table Example Script) Tj
1 0 0 1 507.88 542 Tm
(50) Tj
ET
q
1 g
52 527 491 12 re
f
Q
BT
1 0 0 1 100 530 Tm
(Pequel Tables Example Script) Tj
1 0 0 1 507.88 530 Tm
(51) Tj
ET
q
0.95 g
52 515 491 12 re
f
Q
BT
1 0 0 1 124 518 Tm
(pequel_tables.pql) Tj
1 0 0 1 507.88 518 Tm
(51) Tj
ET
q
1 g
52 503 491 12 re
f
Q
BT
1 0 0 1 124 506 Tm
(sales_ttl_by_loc.pql) Tj
1 0 0 1 507.88 506 Tm
(51) Tj
ET
q
0.95 g
52 491 491 12 re
f
Q
BT
1 0 0 1 124 494 Tm
(top_prod_by_loc.pql) Tj
1 0 0 1 507.88 494 Tm
(51) Tj
ET
q
1 g
52 479 491 12 re
f
Q
BT
1 0 0 1 124 482 Tm
(sales_ttl_by_prod.pql) Tj
1 0 0 1 507.88 482 Tm
(52) Tj
ET
q
0.95 g
52 467 491 12 re
f
Q
BT
1 0 0 1 100 470 Tm
(Oracle Tables Example Script) Tj
1 0 0 1 507.88 470 Tm
(53) Tj
ET
q
1 g
52 455 491 12 re
f
Q
BT
1 0 0 1 76 458 Tm
(INSTALLATION INSTRUCTIONS) Tj
1 0 0 1 507.88 458 Tm
(54) Tj
ET
q
0.95 g
52 443 491 12 re
f
Q
BT
1 0 0 1 100 446 Tm
(Installation Troubleshooting) Tj
1 0 0 1 507.88 446 Tm
(54) Tj
ET
q
1 g
52 431 491 12 re
f
Q
BT
1 0 0 1 100 434 Tm
(Example Installation) Tj
1 0 0 1 507.88 434 Tm
(54) Tj
ET
q
0.95 g
52 419 491 12 re
f
Q
BT
1 0 0 1 100 422 Tm
(Using Inline) Tj
1 0 0 1 507.88 422 Tm
(56) Tj
ET
q
1 g
52 407 491 12 re
f
Q
BT
1 0 0 1 76 410 Tm
(BUGS) Tj
1 0 0 1 507.88 410 Tm
(57) Tj
ET
q
0.95 g
52 395 491 12 re
f
Q
BT
1 0 0 1 76 398 Tm
(AUTHOR) Tj
1 0 0 1 507.88 398 Tm
(57) Tj
ET
q
1 g
52 383 491 12 re
f
Q
BT
1 0 0 1 76 386 Tm
(COPYRIGHT) Tj
1 0 0 1 507.88 386 Tm
(57) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(viii) Tj
1 0 0 1 424.05 37 Tm
(30 September 2005 14:36) Tj
ET
52 50 m
543 50 l
S
endstream
endobj
279 0 obj
3889
endobj
280 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
281 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 280 0 R
/Contents 278 0 R
>>
endobj
282 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 285 0 R
/Contents 283 0 R
>>
endobj
283 0 obj
<<
/Length 284 0 R
>>
stream
q
1 0 0 rg
180 626 8 130 re
F
Q
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
210 626 m
543 626 l
s
BT
/F21 24 Tf
1 0 0 1 210 706 Tm
0 -30 TD
(User Guide) Tj
T* (by ) Tj
0 0 0.8 rg
/F22 12 Tf
(M Gaffiero) Tj
/F21 9 Tf
T* (gaffie@users.sourceforge.net) Tj
/F20 20 Tf
0 g
1 0 0 1 245.25 371 Tm
(Pequel ETL) Tj
/F21 9 Tf
T* (2.3-2) Tj
ET
endstream
endobj
284 0 obj
322
endobj
285 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
286 0 obj
<<
/Length 287 0 R
>>
stream
52 792 m
543 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 52 797 Tm
(User Guide) Tj
1 0 0 1 488.54 797 Tm
(Pequel ETL) Tj
/F21 10 Tf
1 0 0 1 52 37 Tm
(30 September 2005 14:36) Tj
1 0 0 1 543 37 Tm
() Tj
ET
52 50 m
543 50 l
S
endstream
endobj
287 0 obj
243
endobj
288 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F21 15 0 R
>>
>>
endobj
289 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 288 0 R
/Contents 286 0 R
>>
endobj
291 0 obj
<<
/Parent 290 0 R
/Dest [253 0 R /Fit]
/First 292 0 R
/Last 731 0 R
/Count 440 
/Title (Table of Contents)
>>
endobj
292 0 obj
<<
/Parent 291 0 R
/Dest [21 0 R /FitH 764.4]
/Next 293 0 R
/Title (NAME)
>>
endobj
293 0 obj
<<
/Parent 291 0 R
/Dest [21 0 R /FitH 720]
/Previous 292 0 R
/Next 307 0 R
/First 294 0 R
/Last 306 0 R
/Count 13 
/Title (OVERVIEW \217 WHAT IS PEQUEL?)
>>
endobj
294 0 obj
<<
/Parent 293 0 R
/Dest [21 0 R /FitH 364.8]
/Next 295 0 R
/Title (Selecting records \(filtering\))
>>
endobj
295 0 obj
<<
/Parent 293 0 R
/Dest [21 0 R /FitH 314.4]
/Previous 294 0 R
/Next 296 0 R
/Title (Grouping and Statistics)
>>
endobj
296 0 obj
<<
/Parent 293 0 R
/Dest [21 0 R /FitH 252]
/Previous 295 0 R
/Next 297 0 R
/Title (Calculations)
>>
endobj
297 0 obj
<<
/Parent 293 0 R
/Dest [21 0 R /FitH 189.6]
/Previous 296 0 R
/Next 298 0 R
/Title (Cleaning Data)
>>
endobj
298 0 obj
<<
/Parent 293 0 R
/Dest [21 0 R /FitH 139.2]
/Previous 297 0 R
/Next 299 0 R
/Title (Analysing Data Quality)
>>
endobj
299 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 777.6]
/Previous 298 0 R
/Next 300 0 R
/Title (Statistics)
>>
endobj
300 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 739.2]
/Previous 299 0 R
/Next 301 0 R
/Title (Converting Data)
>>
endobj
301 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 676.8]
/Previous 300 0 R
/Next 302 0 R
/Title (Tables and Cross References)
>>
endobj
302 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 638.4]
/Previous 301 0 R
/Next 303 0 R
/Title (Database Connectivity)
>>
endobj
303 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 588]
/Previous 302 0 R
/Next 304 0 R
/Title (Merge and n-Way Join)
>>
endobj
304 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 537.6]
/Previous 303 0 R
/Next 305 0 R
/Title (Extract Data from Database Table\(s\))
>>
endobj
305 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 475.2]
/Previous 304 0 R
/Next 306 0 R
/Title (Load Data into Database Table\(s\))
>>
endobj
306 0 obj
<<
/Parent 293 0 R
/Dest [25 0 R /FitH 424.8]
/Previous 305 0 R
/Title (Input Binary Data Files)
>>
endobj
307 0 obj
<<
/Parent 291 0 R
/Dest [29 0 R /FitH 764.4]
/Previous 293 0 R
/Next 315 0 R
/First 308 0 R
/Last 314 0 R
/Count 7 
/Title (USAGE)
>>
endobj
308 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 744.72]
/Next 309 0 R
/Title (pequel scriptfile.pql  <  file_in  >  file_out)
>>
endobj
309 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 706.32]
/Previous 308 0 R
/Next 310 0 R
/Title (pequel -c scriptfile.pql)
>>
endobj
310 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 667.92]
/Previous 309 0 R
/Next 311 0 R
/Title (pequel -viewcode scriptfile.pql)
>>
endobj
311 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 629.52]
/Previous 310 0 R
/Next 312 0 R
/Title (pequel -dumpcode scriptfile.pql)
>>
endobj
312 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 579.12]
/Previous 311 0 R
/Next 313 0 R
/Title (pequel -v)
>>
endobj
313 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 540.72]
/Previous 312 0 R
/Next 314 0 R
/Title (pequel -usage)
>>
endobj
314 0 obj
<<
/Parent 307 0 R
/Dest [29 0 R /FitH 502.32]
/Previous 313 0 R
/Title (pequel -pequeldoc pdf -detail scriptfile.pql)
>>
endobj
315 0 obj
<<
/Parent 291 0 R
/Dest [33 0 R /FitH 764.4]
/Previous 307 0 R
/Next 346 0 R
/First 316 0 R
/Last 345 0 R
/Count 30 
/Title (TUTORIAL)
>>
endobj
316 0 obj
<<
/Parent 315 0 R
/Dest [33 0 R /FitH 726]
/Next 317 0 R
/Title (Create Pequel Script)
>>
endobj
317 0 obj
<<
/Parent 315 0 R
/Dest [33 0 R /FitH 507.6]
/Previous 316 0 R
/Next 318 0 R
/Title (Check The Pequel Script)
>>
endobj
318 0 obj
<<
/Parent 315 0 R
/Dest [33 0 R /FitH 405.6]
/Previous 317 0 R
/Next 319 0 R
/Title (Run The Pequel Script)
>>
endobj
319 0 obj
<<
/Parent 315 0 R
/Dest [33 0 R /FitH 327.6]
/Previous 318 0 R
/Next 320 0 R
/Title (Select A Subset Of Records)
>>
endobj
320 0 obj
<<
/Parent 315 0 R
/Dest [33 0 R /FitH 112.8]
/Previous 319 0 R
/Next 321 0 R
/Title (Create New Derived Fields)
>>
endobj
321 0 obj
<<
/Parent 315 0 R
/Dest [37 0 R /FitH 591.6]
/Previous 320 0 R
/Next 322 0 R
/Title (Select Which Fields To Output)
>>
endobj
322 0 obj
<<
/Parent 315 0 R
/Dest [37 0 R /FitH 277.200000000001]
/Previous 321 0 R
/Next 323 0 R
/Title (Group Records For Analysis)
>>
endobj
323 0 obj
<<
/Parent 315 0 R
/Dest [41 0 R /FitH 636.6]
/Previous 322 0 R
/Next 324 0 R
/Title (Select A Subset Of Grouped Records)
>>
endobj
324 0 obj
<<
/Parent 315 0 R
/Dest [41 0 R /FitH 246.600000000001]
/Previous 323 0 R
/Next 325 0 R
/Title (Aggregation Based On Conditions)
>>
endobj
325 0 obj
<<
/Parent 315 0 R
/Dest [45 0 R /FitH 586.200000000001]
/Previous 324 0 R
/Next 326 0 R
/Title (Derived Fields Based On Output Fields)
>>
endobj
326 0 obj
<<
/Parent 315 0 R
/Dest [45 0 R /FitH 134.400000000001]
/Previous 325 0 R
/Next 327 0 R
/Title (Create Intermediate \(Transparent\) Output Fields)
>>
endobj
327 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 762.6]
/Previous 326 0 R
/Next 328 0 R
/Title (Cleaning Data)
>>
endobj
328 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 527.4]
/Previous 327 0 R
/Next 329 0 R
/Title (Converting Data)
>>
endobj
329 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 245.400000000001]
/Previous 328 0 R
/Next 330 0 R
/Title (Using Date Fields)
>>
endobj
330 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 203.400000000001]
/Previous 329 0 R
/Next 331 0 R
/Title (Counting Records)
>>
endobj
331 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 161.400000000001]
/Previous 330 0 R
/Next 332 0 R
/Title (Extracting n Distinct Values For A Field)
>>
endobj
332 0 obj
<<
/Parent 315 0 R
/Dest [49 0 R /FitH 119.400000000001]
/Previous 331 0 R
/Next 333 0 R
/Title (Tabulating Data)
>>
endobj
333 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 792]
/Previous 332 0 R
/Next 334 0 R
/Title (Statistical Analysis)
>>
endobj
334 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 750]
/Previous 333 0 R
/Next 335 0 R
/Title (Declaring And Using Tables For Value Lookup)
>>
endobj
335 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 708]
/Previous 334 0 R
/Next 336 0 R
/Title (Using External Tables)
>>
endobj
336 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 666]
/Previous 335 0 R
/Next 337 0 R
/Title (Using Date Fields)
>>
endobj
337 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 624]
/Previous 336 0 R
/Next 338 0 R
/Title (Create A Summary Report)
>>
endobj
338 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 582]
/Previous 337 0 R
/Next 339 0 R
/Title (Using Array Fields)
>>
endobj
339 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 540]
/Previous 338 0 R
/Next 340 0 R
/Title (Database Tables: oracle)
>>
endobj
340 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 498]
/Previous 339 0 R
/Next 341 0 R
/Title (Database Tables: sqlite)
>>
endobj
341 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 456]
/Previous 340 0 R
/Next 342 0 R
/Title (Merg Database Tables)
>>
endobj
342 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 402]
/Previous 341 0 R
/Next 343 0 R
/Title (View The Generated Perl Code)
>>
endobj
343 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 324]
/Previous 342 0 R
/Next 344 0 R
/Title (Dump The Generated Perl Code)
>>
endobj
344 0 obj
<<
/Parent 315 0 R
/Dest [53 0 R /FitH 222]
/Previous 343 0 R
/Next 345 0 R
/Title (Produce The Script Specification Document)
>>
endobj
345 0 obj
<<
/Parent 315 0 R
/Dest [57 0 R /FitH 792]
/Previous 344 0 R
/Title (Display Summary Information For Script)
>>
endobj
346 0 obj
<<
/Parent 291 0 R
/Dest [61 0 R /FitH 764.4]
/Previous 315 0 R
/Next 361 0 R
/First 347 0 R
/Last 360 0 R
/Count 14 
/Title (COMMAND LINE OPTIONS)
>>
endobj
347 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 744.72]
/Next 348 0 R
/Title (\217prefix, \217prefix_path)
>>
endobj
348 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 706.32]
/Previous 347 0 R
/Next 349 0 R
/Title (\217verbose, \217ver)
>>
endobj
349 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 667.92]
/Previous 348 0 R
/Next 350 0 R
/Title (\217noverbose, \217silent, \217quite)
>>
endobj
350 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 629.52]
/Previous 349 0 R
/Next 351 0 R
/Title (\217input_file, \217is, \217if, \217i)
>>
endobj
351 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 591.12]
/Previous 350 0 R
/Next 352 0 R
/Title (\217usage)
>>
endobj
352 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 552.72]
/Previous 351 0 R
/Next 353 0 R
/Title (\217output_file, \217os, \217of, \217o)
>>
endobj
353 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 514.32]
/Previous 352 0 R
/Next 354 0 R
/Title (\217script_name, \217script, \217s, \217pql)
>>
endobj
354 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 475.92]
/Previous 353 0 R
/Next 355 0 R
/Title (\217header)
>>
endobj
355 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 437.52]
/Previous 354 0 R
/Next 356 0 R
/Title (\217pequeldoc, \217doc)
>>
endobj
356 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 399.12]
/Previous 355 0 R
/Next 357 0 R
/Title (\217viewcode, \217vc)
>>
endobj
357 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 360.72]
/Previous 356 0 R
/Next 358 0 R
/Title (\217dumpcode, \217dc, \217diag)
>>
endobj
358 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 322.32]
/Previous 357 0 R
/Next 359 0 R
/Title (\217syntax_check, \217c, \217check)
>>
endobj
359 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 283.92]
/Previous 358 0 R
/Next 360 0 R
/Title (\217version, \217v)
>>
endobj
360 0 obj
<<
/Parent 346 0 R
/Dest [61 0 R /FitH 245.52]
/Previous 359 0 R
/Title (\217table_info, \217ti)
>>
endobj
361 0 obj
<<
/Parent 291 0 R
/Dest [65 0 R /FitH 764.4]
/Previous 346 0 R
/Next 484 0 R
/First 362 0 R
/Last 481 0 R
/Count 122 
/Title (PEQUEL LANGUAGE REFERENCE)
>>
endobj
362 0 obj
<<
/Parent 361 0 R
/Dest [65 0 R /FitH 381.6]
/Next 363 0 R
/Title (Comments)
>>
endobj
363 0 obj
<<
/Parent 361 0 R
/Dest [65 0 R /FitH 315.6]
/Previous 362 0 R
/Next 364 0 R
/Title (Pre Processor)
>>
endobj
364 0 obj
<<
/Parent 361 0 R
/Dest [65 0 R /FitH 249.6]
/Previous 363 0 R
/Next 397 0 R
/First 365 0 R
/Last 396 0 R
/Count 32 
/Title (OPTIONS SECTION)
>>
endobj
365 0 obj
<<
/Parent 364 0 R
/Dest [65 0 R /FitH 199.2]
/Next 366 0 R
/Title (Format)
>>
endobj
366 0 obj
<<
/Parent 364 0 R
/Dest [65 0 R /FitH 148.8]
/Previous 365 0 R
/Next 367 0 R
/Title (Example)
>>
endobj
367 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 769.32]
/Previous 366 0 R
/Next 368 0 R
/Title (verbose )
>>
endobj
368 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 706.92]
/Previous 367 0 R
/Next 369 0 R
/Title (input_delimiter)
>>
endobj
369 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 632.52]
/Previous 368 0 R
/Next 370 0 R
/Title (output_delimiter)
>>
endobj
370 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 570.12]
/Previous 369 0 R
/Next 371 0 R
/Title (discard_header )
>>
endobj
371 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 519.72]
/Previous 370 0 R
/Next 372 0 R
/Title (input_file )
>>
endobj
372 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 469.32]
/Previous 371 0 R
/Next 373 0 R
/Title (output_file )
>>
endobj
373 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 418.92]
/Previous 372 0 R
/Next 374 0 R
/Title (transfer)
>>
endobj
374 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 356.52]
/Previous 373 0 R
/Next 375 0 R
/Title (hash )
>>
endobj
375 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 282.12]
/Previous 374 0 R
/Next 376 0 R
/Title (header)
>>
endobj
376 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 231.72]
/Previous 375 0 R
/Next 377 0 R
/Title (noheader)
>>
endobj
377 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 193.32]
/Previous 376 0 R
/Next 378 0 R
/Title (addpipe)
>>
endobj
378 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 142.92]
/Previous 377 0 R
/Next 379 0 R
/Title (noaddpipe)
>>
endobj
379 0 obj
<<
/Parent 364 0 R
/Dest [69 0 R /FitH 104.52]
/Previous 378 0 R
/Next 380 0 R
/Title (optimize)
>>
endobj
380 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 753.6]
/Previous 379 0 R
/Next 381 0 R
/Title (nooptimize)
>>
endobj
381 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 715.2]
/Previous 380 0 R
/Next 382 0 R
/Title (nulls )
>>
endobj
382 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 664.8]
/Previous 381 0 R
/Next 383 0 R
/Title (nonulls)
>>
endobj
383 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 626.4]
/Previous 382 0 R
/Next 384 0 R
/Title (varnames )
>>
endobj
384 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 576]
/Previous 383 0 R
/Next 385 0 R
/Title (novarnames )
>>
endobj
385 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 537.6]
/Previous 384 0 R
/Next 386 0 R
/Title (noexecute )
>>
endobj
386 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 487.2]
/Previous 385 0 R
/Next 387 0 R
/Title (reject_file )
>>
endobj
387 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 424.8]
/Previous 386 0 R
/Next 388 0 R
/Title (dumpcode )
>>
endobj
388 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 362.4]
/Previous 387 0 R
/Next 389 0 R
/Title (default_date_type)
>>
endobj
389 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 300]
/Previous 388 0 R
/Next 390 0 R
/Title (default_list_delimiter)
>>
endobj
390 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 249.6]
/Previous 389 0 R
/Next 391 0 R
/Title (rmctrlm v3)
>>
endobj
391 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 211.2]
/Previous 390 0 R
/Next 392 0 R
/Title (input_record_limit v3)
>>
endobj
392 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 160.8]
/Previous 391 0 R
/Next 393 0 R
/Title (suppress_output v3)
>>
endobj
393 0 obj
<<
/Parent 364 0 R
/Dest [73 0 R /FitH 122.4]
/Previous 392 0 R
/Next 394 0 R
/Title (pequeldoc)
>>
endobj
394 0 obj
<<
/Parent 364 0 R
/Dest [77 0 R /FitH 792]
/Previous 393 0 R
/Next 395 0 R
/Title (doc_title)
>>
endobj
395 0 obj
<<
/Parent 364 0 R
/Dest [77 0 R /FitH 753.6]
/Previous 394 0 R
/Next 396 0 R
/Title (doc_email)
>>
endobj
396 0 obj
<<
/Parent 364 0 R
/Dest [77 0 R /FitH 715.2]
/Previous 395 0 R
/Title (doc_version)
>>
endobj
397 0 obj
<<
/Parent 361 0 R
/Dest [77 0 R /FitH 661.2]
/Previous 364 0 R
/Next 414 0 R
/First 398 0 R
/Last 413 0 R
/Count 16 
/Title (INLINE OPTIONS)
>>
endobj
398 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 610.8]
/Next 399 0 R
/Title (use_inline )
>>
endobj
399 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 548.4]
/Previous 398 0 R
/Next 400 0 R
/Title (input_delimiter_extra)
>>
endobj
400 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 461.52]
/Previous 399 0 R
/Next 401 0 R
/Title (inline_clean_after_build)
>>
endobj
401 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 411.12]
/Previous 400 0 R
/Next 402 0 R
/Title (inline_clean_build_area)
>>
endobj
402 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 372.72]
/Previous 401 0 R
/Next 403 0 R
/Title (inline_print_info)
>>
endobj
403 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 334.32]
/Previous 402 0 R
/Next 404 0 R
/Title (inline_build_noisy)
>>
endobj
404 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 283.92]
/Previous 403 0 R
/Next 405 0 R
/Title (inline_build_timers)
>>
endobj
405 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 245.52]
/Previous 404 0 R
/Next 406 0 R
/Title (inline_force_build)
>>
endobj
406 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 207.12]
/Previous 405 0 R
/Next 407 0 R
/Title (inline_directory)
>>
endobj
407 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 120.72]
/Previous 406 0 R
/Next 408 0 R
/Title (inline_CC)
>>
endobj
408 0 obj
<<
/Parent 397 0 R
/Dest [77 0 R /FitH 82.3200000000002]
/Previous 407 0 R
/Next 409 0 R
/Title (inline_OPTIMIZE)
>>
endobj
409 0 obj
<<
/Parent 397 0 R
/Dest [81 0 R /FitH 741.6]
/Previous 408 0 R
/Next 410 0 R
/Title (inline_CCFLAGS)
>>
endobj
410 0 obj
<<
/Parent 397 0 R
/Dest [81 0 R /FitH 703.2]
/Previous 409 0 R
/Next 411 0 R
/Title (inline_LIBS)
>>
endobj
411 0 obj
<<
/Parent 397 0 R
/Dest [81 0 R /FitH 664.8]
/Previous 410 0 R
/Next 412 0 R
/Title (inline_INC)
>>
endobj
412 0 obj
<<
/Parent 397 0 R
/Dest [81 0 R /FitH 626.4]
/Previous 411 0 R
/Next 413 0 R
/Title (inline_LDDLFLAGS)
>>
endobj
413 0 obj
<<
/Parent 397 0 R
/Dest [81 0 R /FitH 564]
/Previous 412 0 R
/Title (inline_MAKE)
>>
endobj
414 0 obj
<<
/Parent 361 0 R
/Dest [81 0 R /FitH 510]
/Previous 397 0 R
/Next 417 0 R
/First 415 0 R
/Last 416 0 R
/Count 2 
/Title (USE PACKAGE SECTION)
>>
endobj
415 0 obj
<<
/Parent 414 0 R
/Dest [81 0 R /FitH 471.6]
/Next 416 0 R
/Title (Format)
>>
endobj
416 0 obj
<<
/Parent 414 0 R
/Dest [81 0 R /FitH 421.2]
/Previous 415 0 R
/Title (Examples)
>>
endobj
417 0 obj
<<
/Parent 361 0 R
/Dest [81 0 R /FitH 367.2]
/Previous 414 0 R
/Next 420 0 R
/First 418 0 R
/Last 419 0 R
/Count 2 
/Title (INIT TABLE SECTION)
>>
endobj
418 0 obj
<<
/Parent 417 0 R
/Dest [81 0 R /FitH 256.8]
/Next 419 0 R
/Title (Format)
>>
endobj
419 0 obj
<<
/Parent 417 0 R
/Dest [81 0 R /FitH 206.4]
/Previous 418 0 R
/Title (Example)
>>
endobj
420 0 obj
<<
/Parent 361 0 R
/Dest [81 0 R /FitH 102]
/Previous 417 0 R
/Next 424 0 R
/First 421 0 R
/Last 423 0 R
/Count 3 
/Title (LOAD TABLE SECTION)
>>
endobj
421 0 obj
<<
/Parent 420 0 R
/Dest [85 0 R /FitH 705.6]
/Next 422 0 R
/Title (persistant option)
>>
endobj
422 0 obj
<<
/Parent 420 0 R
/Dest [85 0 R /FitH 583.2]
/Previous 421 0 R
/Next 423 0 R
/Title (Format)
>>
endobj
423 0 obj
<<
/Parent 420 0 R
/Dest [85 0 R /FitH 532.8]
/Previous 422 0 R
/Title (Examples)
>>
endobj
424 0 obj
<<
/Parent 361 0 R
/Dest [85 0 R /FitH 462]
/Previous 420 0 R
/Next 427 0 R
/First 425 0 R
/Last 426 0 R
/Count 2 
/Title (INIT _PERIOD SECTION)
>>
endobj
425 0 obj
<<
/Parent 424 0 R
/Dest [85 0 R /FitH 387.6]
/Next 426 0 R
/Title (Format)
>>
endobj
426 0 obj
<<
/Parent 424 0 R
/Dest [85 0 R /FitH 337.2]
/Previous 425 0 R
/Title (Examples)
>>
endobj
427 0 obj
<<
/Parent 361 0 R
/Dest [85 0 R /FitH 266.4]
/Previous 424 0 R
/Next 430 0 R
/First 428 0 R
/Last 429 0 R
/Count 2 
/Title (INIT _MONTH SECTION)
>>
endobj
428 0 obj
<<
/Parent 427 0 R
/Dest [85 0 R /FitH 192]
/Next 429 0 R
/Title (Format)
>>
endobj
429 0 obj
<<
/Parent 427 0 R
/Dest [85 0 R /FitH 141.6]
/Previous 428 0 R
/Title (Examples)
>>
endobj
430 0 obj
<<
/Parent 361 0 R
/Dest [89 0 R /FitH 792]
/Previous 427 0 R
/Next 433 0 R
/First 431 0 R
/Last 432 0 R
/Count 2 
/Title (INPUT SECTION)
>>
endobj
431 0 obj
<<
/Parent 430 0 R
/Dest [89 0 R /FitH 705.6]
/Next 432 0 R
/Title (Format)
>>
endobj
432 0 obj
<<
/Parent 430 0 R
/Dest [89 0 R /FitH 655.2]
/Previous 431 0 R
/Title (Example)
>>
endobj
433 0 obj
<<
/Parent 361 0 R
/Dest [89 0 R /FitH 492]
/Previous 430 0 R
/Next 434 0 R
/Title (FIELD PREPROCESS SECTION)
>>
endobj
434 0 obj
<<
/Parent 361 0 R
/Dest [89 0 R /FitH 426]
/Previous 433 0 R
/Next 435 0 R
/Title (FIELD POSTPROCESS SECTION)
>>
endobj
435 0 obj
<<
/Parent 361 0 R
/Dest [89 0 R /FitH 360]
/Previous 434 0 R
/Next 438 0 R
/First 436 0 R
/Last 437 0 R
/Count 2 
/Title (SORT BY SECTION)
>>
endobj
436 0 obj
<<
/Parent 435 0 R
/Dest [89 0 R /FitH 249.6]
/Next 437 0 R
/Title (Format)
>>
endobj
437 0 obj
<<
/Parent 435 0 R
/Dest [89 0 R /FitH 199.2]
/Previous 436 0 R
/Title (Examples)
>>
endobj
438 0 obj
<<
/Parent 361 0 R
/Dest [89 0 R /FitH 145.2]
/Previous 435 0 R
/Next 441 0 R
/First 439 0 R
/Last 440 0 R
/Count 2 
/Title (REJECT SECTION)
>>
endobj
439 0 obj
<<
/Parent 438 0 R
/Dest [93 0 R /FitH 792]
/Next 440 0 R
/Title (Format)
>>
endobj
440 0 obj
<<
/Parent 438 0 R
/Dest [93 0 R /FitH 741.6]
/Previous 439 0 R
/Title (Examples)
>>
endobj
441 0 obj
<<
/Parent 361 0 R
/Dest [93 0 R /FitH 687.6]
/Previous 438 0 R
/Next 444 0 R
/First 442 0 R
/Last 443 0 R
/Count 2 
/Title (FILTER SECTION)
>>
endobj
442 0 obj
<<
/Parent 441 0 R
/Dest [93 0 R /FitH 613.2]
/Next 443 0 R
/Title (Format)
>>
endobj
443 0 obj
<<
/Parent 441 0 R
/Dest [93 0 R /FitH 562.8]
/Previous 442 0 R
/Title (Examples)
>>
endobj
444 0 obj
<<
/Parent 361 0 R
/Dest [93 0 R /FitH 500.4]
/Previous 441 0 R
/Next 447 0 R
/First 445 0 R
/Last 446 0 R
/Count 2 
/Title (GROUP BY SECTION)
>>
endobj
445 0 obj
<<
/Parent 444 0 R
/Dest [93 0 R /FitH 402]
/Next 446 0 R
/Title (Format)
>>
endobj
446 0 obj
<<
/Parent 444 0 R
/Dest [93 0 R /FitH 351.6]
/Previous 445 0 R
/Title (Examples)
>>
endobj
447 0 obj
<<
/Parent 361 0 R
/Dest [93 0 R /FitH 297.6]
/Previous 444 0 R
/Next 448 0 R
/Title (DEDUP ON SECTION)
>>
endobj
448 0 obj
<<
/Parent 361 0 R
/Dest [93 0 R /FitH 267.6]
/Previous 447 0 R
/Next 450 0 R
/First 449 0 R
/Last 449 0 R
/Count 1 
/Title (OUTPUT SECTION)
>>
endobj
449 0 obj
<<
/Parent 448 0 R
/Dest [97 0 R /FitH 792]
/Title (Format)
>>
endobj
450 0 obj
<<
/Parent 361 0 R
/Dest [97 0 R /FitH 186]
/Previous 448 0 R
/Next 478 0 R
/First 451 0 R
/Last 477 0 R
/Count 27 
/Title (Aggregates)
>>
endobj
451 0 obj
<<
/Parent 450 0 R
/Dest [97 0 R /FitH 171.6]
/Next 452 0 R
/Title (sum <input field>)
>>
endobj
452 0 obj
<<
/Parent 450 0 R
/Dest [97 0 R /FitH 133.2]
/Previous 451 0 R
/Next 453 0 R
/Title (sum_distinct <input field>)
>>
endobj
453 0 obj
<<
/Parent 450 0 R
/Dest [97 0 R /FitH 82.8]
/Previous 452 0 R
/Next 454 0 R
/Title (maximum | max <input field>)
>>
endobj
454 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 765.6]
/Previous 453 0 R
/Next 455 0 R
/Title (minimum | min  <input field>)
>>
endobj
455 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 727.2]
/Previous 454 0 R
/Next 456 0 R
/Title (avg | mean <input field>)
>>
endobj
456 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 688.8]
/Previous 455 0 R
/Next 457 0 R
/Title (avg_distinct <input field>)
>>
endobj
457 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 638.4]
/Previous 456 0 R
/Next 458 0 R
/Title (first <input field>)
>>
endobj
458 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 600]
/Previous 457 0 R
/Next 459 0 R
/Title (last <input field>)
>>
endobj
459 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 561.6]
/Previous 458 0 R
/Next 460 0 R
/Title (count_distinct | distinct <input field>)
>>
endobj
460 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 523.2]
/Previous 459 0 R
/Next 461 0 R
/Title (median <input field>)
>>
endobj
461 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 448.8]
/Previous 460 0 R
/Next 462 0 R
/Title (variance <input field>)
>>
endobj
462 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 386.4]
/Previous 461 0 R
/Next 463 0 R
/Title (stddev <input field>)
>>
endobj
463 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 348]
/Previous 462 0 R
/Next 464 0 R
/Title (range <input field>)
>>
endobj
464 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 297.6]
/Previous 463 0 R
/Next 465 0 R
/Title (mode <input field>)
>>
endobj
465 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 235.2]
/Previous 464 0 R
/Next 466 0 R
/Title (values_all <input field>)
>>
endobj
466 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 184.8]
/Previous 465 0 R
/Next 467 0 R
/Title (values_uniq <input field>)
>>
endobj
467 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 134.4]
/Previous 466 0 R
/Next 468 0 R
/Title (serial <n>)
>>
endobj
468 0 obj
<<
/Parent 450 0 R
/Dest [101 0 R /FitH 84.0000000000002]
/Previous 467 0 R
/Next 469 0 R
/Title (count *)
>>
endobj
469 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 765.6]
/Previous 468 0 R
/Next 470 0 R
/Title (flag *)
>>
endobj
470 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 703.2]
/Previous 469 0 R
/Next 471 0 R
/Title (corr <input field>)
>>
endobj
471 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 664.8]
/Previous 470 0 R
/Next 472 0 R
/Title (covar_pop <input field>)
>>
endobj
472 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 626.4]
/Previous 471 0 R
/Next 473 0 R
/Title (covar_samp <input field>)
>>
endobj
473 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 588]
/Previous 472 0 R
/Next 474 0 R
/Title (cume_dist <input field>)
>>
endobj
474 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 549.6]
/Previous 473 0 R
/Next 475 0 R
/Title (dense_rank <input field>)
>>
endobj
475 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 511.2]
/Previous 474 0 R
/Next 476 0 R
/Title (rank <input field>)
>>
endobj
476 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 472.8]
/Previous 475 0 R
/Next 477 0 R
/Title (= <calculation expression>)
>>
endobj
477 0 obj
<<
/Parent 450 0 R
/Dest [105 0 R /FitH 410.4]
/Previous 476 0 R
/Title (Examples)
>>
endobj
478 0 obj
<<
/Parent 361 0 R
/Dest [105 0 R /FitH 314.4]
/Previous 450 0 R
/Next 481 0 R
/First 479 0 R
/Last 480 0 R
/Count 2 
/Title (HAVING SECTION)
>>
endobj
479 0 obj
<<
/Parent 478 0 R
/Dest [105 0 R /FitH 204]
/Next 480 0 R
/Title (Format)
>>
endobj
480 0 obj
<<
/Parent 478 0 R
/Dest [105 0 R /FitH 153.6]
/Previous 479 0 R
/Title (Examples)
>>
endobj
481 0 obj
<<
/Parent 361 0 R
/Dest [105 0 R /FitH 99.6000000000004]
/Previous 478 0 R
/First 482 0 R
/Last 483 0 R
/Count 2 
/Title (SUMMARY SECTION)
>>
endobj
482 0 obj
<<
/Parent 481 0 R
/Dest [109 0 R /FitH 741.6]
/Next 483 0 R
/Title (Format)
>>
endobj
483 0 obj
<<
/Parent 481 0 R
/Dest [109 0 R /FitH 691.2]
/Previous 482 0 R
/Title (Examples)
>>
endobj
484 0 obj
<<
/Parent 291 0 R
/Dest [113 0 R /FitH 764.4]
/Previous 361 0 R
/Next 492 0 R
/First 485 0 R
/Last 491 0 R
/Count 7 
/Title (GENERATED PROGRAM OUTLINE)
>>
endobj
485 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 744.72]
/Next 486 0 R
/Title (Open Input Stream)
>>
endobj
486 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 730.32]
/Previous 485 0 R
/Next 487 0 R
/Title (Load/Connect Tables)
>>
endobj
487 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 715.92]
/Previous 486 0 R
/Next 488 0 R
/Title (Read Next Input Record)
>>
endobj
488 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 701.52]
/Previous 487 0 R
/Next 489 0 R
/Title (Output Aggregated Record If Grouping Key Changes)
>>
endobj
489 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 687.12]
/Previous 488 0 R
/Next 490 0 R
/Title (Calculate Derived Input Fields)
>>
endobj
490 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 672.72]
/Previous 489 0 R
/Next 491 0 R
/Title (Perform Aggregations)
>>
endobj
491 0 obj
<<
/Parent 484 0 R
/Dest [113 0 R /FitH 658.32]
/Previous 490 0 R
/Title (Process Outline:)
>>
endobj
492 0 obj
<<
/Parent 291 0 R
/Dest [117 0 R /FitH 764.4]
/Previous 484 0 R
/Next 493 0 R
/Title (ARRAY FIELDS)
>>
endobj
493 0 obj
<<
/Parent 291 0 R
/Dest [121 0 R /FitH 764.4]
/Previous 492 0 R
/Next 497 0 R
/First 494 0 R
/Last 496 0 R
/Count 3 
/Title (DATABASE CONNECTIVITY)
>>
endobj
494 0 obj
<<
/Parent 493 0 R
/Dest [121 0 R /FitH 705.6]
/Next 495 0 R
/Title (Connecting To Oracle Databases)
>>
endobj
495 0 obj
<<
/Parent 493 0 R
/Dest [121 0 R /FitH 651.6]
/Previous 494 0 R
/Next 496 0 R
/Title (Connecting To Sqlite Databases)
>>
endobj
496 0 obj
<<
/Parent 493 0 R
/Dest [121 0 R /FitH 597.6]
/Previous 495 0 R
/Title (Connecting To Mysql Databases)
>>
endobj
497 0 obj
<<
/Parent 291 0 R
/Dest [125 0 R /FitH 764.4]
/Previous 493 0 R
/Next 704 0 R
/First 498 0 R
/Last 701 0 R
/Count 206 
/Title (MACROS)
>>
endobj
498 0 obj
<<
/Parent 497 0 R
/Dest [125 0 R /FitH 717.6]
/Next 501 0 R
/First 499 0 R
/Last 500 0 R
/Count 2 
/Title (&lookup)
>>
endobj
499 0 obj
<<
/Parent 498 0 R
/Dest [125 0 R /FitH 655.2]
/Next 500 0 R
/Title (Format)
>>
endobj
500 0 obj
<<
/Parent 498 0 R
/Dest [125 0 R /FitH 592.8]
/Previous 499 0 R
/Title (Examples)
>>
endobj
501 0 obj
<<
/Parent 497 0 R
/Dest [125 0 R /FitH 513.6]
/Previous 498 0 R
/Next 504 0 R
/First 502 0 R
/Last 503 0 R
/Count 2 
/Title (&date)
>>
endobj
502 0 obj
<<
/Parent 501 0 R
/Dest [125 0 R /FitH 379.2]
/Next 503 0 R
/Title (Format)
>>
endobj
503 0 obj
<<
/Parent 501 0 R
/Dest [125 0 R /FitH 340.8]
/Previous 502 0 R
/Title (Examples)
>>
endobj
504 0 obj
<<
/Parent 497 0 R
/Dest [125 0 R /FitH 286.8]
/Previous 501 0 R
/Next 507 0 R
/First 505 0 R
/Last 506 0 R
/Count 2 
/Title (&d &m &y)
>>
endobj
505 0 obj
<<
/Parent 504 0 R
/Dest [125 0 R /FitH 224.4]
/Next 506 0 R
/Title (Format)
>>
endobj
506 0 obj
<<
/Parent 504 0 R
/Dest [125 0 R /FitH 162]
/Previous 505 0 R
/Title (Examples)
>>
endobj
507 0 obj
<<
/Parent 497 0 R
/Dest [125 0 R /FitH 99.6000000000003]
/Previous 504 0 R
/Next 510 0 R
/First 508 0 R
/Last 509 0 R
/Count 2 
/Title (&today)
>>
endobj
508 0 obj
<<
/Parent 507 0 R
/Dest [129 0 R /FitH 792]
/Next 509 0 R
/Title (Format)
>>
endobj
509 0 obj
<<
/Parent 507 0 R
/Dest [129 0 R /FitH 753.6]
/Previous 508 0 R
/Title (Examples)
>>
endobj
510 0 obj
<<
/Parent 497 0 R
/Dest [129 0 R /FitH 708]
/Previous 507 0 R
/Next 513 0 R
/First 511 0 R
/Last 512 0 R
/Count 2 
/Title (&months_since)
>>
endobj
511 0 obj
<<
/Parent 510 0 R
/Dest [129 0 R /FitH 657.6]
/Next 512 0 R
/Title (Format)
>>
endobj
512 0 obj
<<
/Parent 510 0 R
/Dest [129 0 R /FitH 619.2]
/Previous 511 0 R
/Title (Examples)
>>
endobj
513 0 obj
<<
/Parent 497 0 R
/Dest [129 0 R /FitH 573.6]
/Previous 510 0 R
/Next 516 0 R
/First 514 0 R
/Last 515 0 R
/Count 2 
/Title (&add_months)
>>
endobj
514 0 obj
<<
/Parent 513 0 R
/Dest [129 0 R /FitH 499.2]
/Next 515 0 R
/Title (Format)
>>
endobj
515 0 obj
<<
/Parent 513 0 R
/Dest [129 0 R /FitH 460.8]
/Previous 514 0 R
/Title (Examples)
>>
endobj
516 0 obj
<<
/Parent 497 0 R
/Dest [129 0 R /FitH 415.2]
/Previous 513 0 R
/Next 519 0 R
/First 517 0 R
/Last 518 0 R
/Count 2 
/Title (&months_between)
>>
endobj
517 0 obj
<<
/Parent 516 0 R
/Dest [129 0 R /FitH 364.8]
/Next 518 0 R
/Title (Format)
>>
endobj
518 0 obj
<<
/Parent 516 0 R
/Dest [129 0 R /FitH 326.4]
/Previous 517 0 R
/Title (Examples)
>>
endobj
519 0 obj
<<
/Parent 497 0 R
/Dest [129 0 R /FitH 280.8]
/Previous 516 0 R
/Next 522 0 R
/First 520 0 R
/Last 521 0 R
/Count 2 
/Title (&last_day)
>>
endobj
520 0 obj
<<
/Parent 519 0 R
/Dest [129 0 R /FitH 242.4]
/Next 521 0 R
/Title (Format)
>>
endobj
521 0 obj
<<
/Parent 519 0 R
/Dest [129 0 R /FitH 204]
/Previous 520 0 R
/Title (Examples)
>>
endobj
522 0 obj
<<
/Parent 497 0 R
/Dest [129 0 R /FitH 158.4]
/Previous 519 0 R
/Next 525 0 R
/First 523 0 R
/Last 524 0 R
/Count 2 
/Title (&date_last_day)
>>
endobj
523 0 obj
<<
/Parent 522 0 R
/Dest [129 0 R /FitH 120]
/Next 524 0 R
/Title (Format)
>>
endobj
524 0 obj
<<
/Parent 522 0 R
/Dest [129 0 R /FitH 81.6000000000003]
/Previous 523 0 R
/Title (Examples)
>>
endobj
525 0 obj
<<
/Parent 497 0 R
/Dest [133 0 R /FitH 762.6]
/Previous 522 0 R
/Next 528 0 R
/First 526 0 R
/Last 527 0 R
/Count 2 
/Title (&date_next_day)
>>
endobj
526 0 obj
<<
/Parent 525 0 R
/Dest [133 0 R /FitH 712.2]
/Next 527 0 R
/Title (Format)
>>
endobj
527 0 obj
<<
/Parent 525 0 R
/Dest [133 0 R /FitH 673.8]
/Previous 526 0 R
/Title (Examples)
>>
endobj
528 0 obj
<<
/Parent 497 0 R
/Dest [133 0 R /FitH 628.2]
/Previous 525 0 R
/Next 531 0 R
/First 529 0 R
/Last 530 0 R
/Count 2 
/Title (&day_number)
>>
endobj
529 0 obj
<<
/Parent 528 0 R
/Dest [133 0 R /FitH 589.8]
/Next 530 0 R
/Title (Format)
>>
endobj
530 0 obj
<<
/Parent 528 0 R
/Dest [133 0 R /FitH 551.4]
/Previous 529 0 R
/Title (Examples)
>>
endobj
531 0 obj
<<
/Parent 497 0 R
/Dest [133 0 R /FitH 505.8]
/Previous 528 0 R
/Next 534 0 R
/First 532 0 R
/Last 533 0 R
/Count 2 
/Title (&month)
>>
endobj
532 0 obj
<<
/Parent 531 0 R
/Dest [133 0 R /FitH 455.4]
/Next 533 0 R
/Title (Format)
>>
endobj
533 0 obj
<<
/Parent 531 0 R
/Dest [133 0 R /FitH 417]
/Previous 532 0 R
/Title (Examples)
>>
endobj
534 0 obj
<<
/Parent 497 0 R
/Dest [133 0 R /FitH 371.4]
/Previous 531 0 R
/Next 537 0 R
/First 535 0 R
/Last 536 0 R
/Count 2 
/Title (&period)
>>
endobj
535 0 obj
<<
/Parent 534 0 R
/Dest [133 0 R /FitH 321]
/Next 536 0 R
/Title (Format)
>>
endobj
536 0 obj
<<
/Parent 534 0 R
/Dest [133 0 R /FitH 282.6]
/Previous 535 0 R
/Title (Examples)
>>
endobj
537 0 obj
<<
/Parent 497 0 R
/Dest [133 0 R /FitH 237]
/Previous 534 0 R
/Next 540 0 R
/First 538 0 R
/Last 539 0 R
/Count 2 
/Title (&select)
>>
endobj
538 0 obj
<<
/Parent 537 0 R
/Dest [133 0 R /FitH 174.6]
/Next 539 0 R
/Title (Format)
>>
endobj
539 0 obj
<<
/Parent 537 0 R
/Dest [133 0 R /FitH 136.2]
/Previous 538 0 R
/Title (Examples)
>>
endobj
540 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 792]
/Previous 537 0 R
/Next 543 0 R
/First 541 0 R
/Last 542 0 R
/Count 2 
/Title (&map)
>>
endobj
541 0 obj
<<
/Parent 540 0 R
/Dest [137 0 R /FitH 729.6]
/Next 542 0 R
/Title (Format)
>>
endobj
542 0 obj
<<
/Parent 540 0 R
/Dest [137 0 R /FitH 691.2]
/Previous 541 0 R
/Title (Examples)
>>
endobj
543 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 645.6]
/Previous 540 0 R
/Next 546 0 R
/First 544 0 R
/Last 545 0 R
/Count 2 
/Title (&to_array)
>>
endobj
544 0 obj
<<
/Parent 543 0 R
/Dest [137 0 R /FitH 595.2]
/Next 545 0 R
/Title (Format)
>>
endobj
545 0 obj
<<
/Parent 543 0 R
/Dest [137 0 R /FitH 556.8]
/Previous 544 0 R
/Title (Examples)
>>
endobj
546 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 511.2]
/Previous 543 0 R
/Next 549 0 R
/First 547 0 R
/Last 548 0 R
/Count 2 
/Title (&arr_size)
>>
endobj
547 0 obj
<<
/Parent 546 0 R
/Dest [137 0 R /FitH 460.8]
/Next 548 0 R
/Title (Format)
>>
endobj
548 0 obj
<<
/Parent 546 0 R
/Dest [137 0 R /FitH 422.4]
/Previous 547 0 R
/Title (Examples)
>>
endobj
549 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 376.8]
/Previous 546 0 R
/Next 552 0 R
/First 550 0 R
/Last 551 0 R
/Count 2 
/Title (&arr_sort)
>>
endobj
550 0 obj
<<
/Parent 549 0 R
/Dest [137 0 R /FitH 338.4]
/Next 551 0 R
/Title (Format)
>>
endobj
551 0 obj
<<
/Parent 549 0 R
/Dest [137 0 R /FitH 300]
/Previous 550 0 R
/Title (Examples)
>>
endobj
552 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 254.4]
/Previous 549 0 R
/Next 555 0 R
/First 553 0 R
/Last 554 0 R
/Count 2 
/Title (&arr_reverse)
>>
endobj
553 0 obj
<<
/Parent 552 0 R
/Dest [137 0 R /FitH 216]
/Next 554 0 R
/Title (Format)
>>
endobj
554 0 obj
<<
/Parent 552 0 R
/Dest [137 0 R /FitH 177.6]
/Previous 553 0 R
/Title (Examples)
>>
endobj
555 0 obj
<<
/Parent 497 0 R
/Dest [137 0 R /FitH 132]
/Previous 552 0 R
/Next 558 0 R
/First 556 0 R
/Last 557 0 R
/Count 2 
/Title (&arr_first)
>>
endobj
556 0 obj
<<
/Parent 555 0 R
/Dest [137 0 R /FitH 93.6000000000003]
/Next 557 0 R
/Title (Format)
>>
endobj
557 0 obj
<<
/Parent 555 0 R
/Dest [141 0 R /FitH 765.6]
/Previous 556 0 R
/Title (Examples)
>>
endobj
558 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 720]
/Previous 555 0 R
/Next 561 0 R
/First 559 0 R
/Last 560 0 R
/Count 2 
/Title (&arr_last)
>>
endobj
559 0 obj
<<
/Parent 558 0 R
/Dest [141 0 R /FitH 681.6]
/Next 560 0 R
/Title (Format)
>>
endobj
560 0 obj
<<
/Parent 558 0 R
/Dest [141 0 R /FitH 643.2]
/Previous 559 0 R
/Title (Examples)
>>
endobj
561 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 597.6]
/Previous 558 0 R
/Next 564 0 R
/First 562 0 R
/Last 563 0 R
/Count 2 
/Title (&arr_min)
>>
endobj
562 0 obj
<<
/Parent 561 0 R
/Dest [141 0 R /FitH 559.2]
/Next 563 0 R
/Title (Format)
>>
endobj
563 0 obj
<<
/Parent 561 0 R
/Dest [141 0 R /FitH 520.8]
/Previous 562 0 R
/Title (Examples)
>>
endobj
564 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 475.2]
/Previous 561 0 R
/Next 567 0 R
/First 565 0 R
/Last 566 0 R
/Count 2 
/Title (&arr_max)
>>
endobj
565 0 obj
<<
/Parent 564 0 R
/Dest [141 0 R /FitH 436.8]
/Next 566 0 R
/Title (Format)
>>
endobj
566 0 obj
<<
/Parent 564 0 R
/Dest [141 0 R /FitH 398.4]
/Previous 565 0 R
/Title (Examples)
>>
endobj
567 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 352.8]
/Previous 564 0 R
/Next 570 0 R
/First 568 0 R
/Last 569 0 R
/Count 2 
/Title (&arr_avg)
>>
endobj
568 0 obj
<<
/Parent 567 0 R
/Dest [141 0 R /FitH 314.4]
/Next 569 0 R
/Title (Format)
>>
endobj
569 0 obj
<<
/Parent 567 0 R
/Dest [141 0 R /FitH 276]
/Previous 568 0 R
/Title (Examples)
>>
endobj
570 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 230.4]
/Previous 567 0 R
/Next 573 0 R
/First 571 0 R
/Last 572 0 R
/Count 2 
/Title (&arr_sum)
>>
endobj
571 0 obj
<<
/Parent 570 0 R
/Dest [141 0 R /FitH 192]
/Next 572 0 R
/Title (Format)
>>
endobj
572 0 obj
<<
/Parent 570 0 R
/Dest [141 0 R /FitH 153.6]
/Previous 571 0 R
/Title (Examples)
>>
endobj
573 0 obj
<<
/Parent 497 0 R
/Dest [141 0 R /FitH 108]
/Previous 570 0 R
/Next 576 0 R
/First 574 0 R
/Last 575 0 R
/Count 2 
/Title (&arr_median)
>>
endobj
574 0 obj
<<
/Parent 573 0 R
/Dest [145 0 R /FitH 792]
/Next 575 0 R
/Title (Format)
>>
endobj
575 0 obj
<<
/Parent 573 0 R
/Dest [145 0 R /FitH 753.6]
/Previous 574 0 R
/Title (Examples)
>>
endobj
576 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 723.6]
/Previous 573 0 R
/Next 579 0 R
/First 577 0 R
/Last 578 0 R
/Count 2 
/Title (&arr_variance)
>>
endobj
577 0 obj
<<
/Parent 576 0 R
/Dest [145 0 R /FitH 685.2]
/Next 578 0 R
/Title (Format)
>>
endobj
578 0 obj
<<
/Parent 576 0 R
/Dest [145 0 R /FitH 646.8]
/Previous 577 0 R
/Title (Examples)
>>
endobj
579 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 616.8]
/Previous 576 0 R
/Next 582 0 R
/First 580 0 R
/Last 581 0 R
/Count 2 
/Title (&arr_stddev)
>>
endobj
580 0 obj
<<
/Parent 579 0 R
/Dest [145 0 R /FitH 578.4]
/Next 581 0 R
/Title (Format)
>>
endobj
581 0 obj
<<
/Parent 579 0 R
/Dest [145 0 R /FitH 540]
/Previous 580 0 R
/Title (Examples)
>>
endobj
582 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 510]
/Previous 579 0 R
/Next 585 0 R
/First 583 0 R
/Last 584 0 R
/Count 2 
/Title (&arr_range)
>>
endobj
583 0 obj
<<
/Parent 582 0 R
/Dest [145 0 R /FitH 471.6]
/Next 584 0 R
/Title (Format)
>>
endobj
584 0 obj
<<
/Parent 582 0 R
/Dest [145 0 R /FitH 433.2]
/Previous 583 0 R
/Title (Examples)
>>
endobj
585 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 403.2]
/Previous 582 0 R
/Next 588 0 R
/First 586 0 R
/Last 587 0 R
/Count 2 
/Title (&arr_mode)
>>
endobj
586 0 obj
<<
/Parent 585 0 R
/Dest [145 0 R /FitH 364.8]
/Next 587 0 R
/Title (Format)
>>
endobj
587 0 obj
<<
/Parent 585 0 R
/Dest [145 0 R /FitH 326.4]
/Previous 586 0 R
/Title (Examples)
>>
endobj
588 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 296.4]
/Previous 585 0 R
/Next 591 0 R
/First 589 0 R
/Last 590 0 R
/Count 2 
/Title (&arr_values_uniq)
>>
endobj
589 0 obj
<<
/Parent 588 0 R
/Dest [145 0 R /FitH 258]
/Next 590 0 R
/Title (Format)
>>
endobj
590 0 obj
<<
/Parent 588 0 R
/Dest [145 0 R /FitH 219.6]
/Previous 589 0 R
/Title (Examples)
>>
endobj
591 0 obj
<<
/Parent 497 0 R
/Dest [145 0 R /FitH 174]
/Previous 588 0 R
/Next 594 0 R
/First 592 0 R
/Last 593 0 R
/Count 2 
/Title (&arr_shift)
>>
endobj
592 0 obj
<<
/Parent 591 0 R
/Dest [145 0 R /FitH 123.6]
/Next 593 0 R
/Title (Format)
>>
endobj
593 0 obj
<<
/Parent 591 0 R
/Dest [145 0 R /FitH 85.2000000000002]
/Previous 592 0 R
/Title (Examples)
>>
endobj
594 0 obj
<<
/Parent 497 0 R
/Dest [149 0 R /FitH 762.6]
/Previous 591 0 R
/Next 597 0 R
/First 595 0 R
/Last 596 0 R
/Count 2 
/Title (&arr_push)
>>
endobj
595 0 obj
<<
/Parent 594 0 R
/Dest [149 0 R /FitH 712.2]
/Next 596 0 R
/Title (Format)
>>
endobj
596 0 obj
<<
/Parent 594 0 R
/Dest [149 0 R /FitH 673.8]
/Previous 595 0 R
/Title (Examples)
>>
endobj
597 0 obj
<<
/Parent 497 0 R
/Dest [149 0 R /FitH 628.2]
/Previous 594 0 R
/Next 600 0 R
/First 598 0 R
/Last 599 0 R
/Count 2 
/Title (&arr_pop)
>>
endobj
598 0 obj
<<
/Parent 597 0 R
/Dest [149 0 R /FitH 577.8]
/Next 599 0 R
/Title (Format)
>>
endobj
599 0 obj
<<
/Parent 597 0 R
/Dest [149 0 R /FitH 539.4]
/Previous 598 0 R
/Title (Examples)
>>
endobj
600 0 obj
<<
/Parent 497 0 R
/Dest [149 0 R /FitH 493.8]
/Previous 597 0 R
/Next 603 0 R
/First 601 0 R
/Last 602 0 R
/Count 2 
/Title (&arr_lookup)
>>
endobj
601 0 obj
<<
/Parent 600 0 R
/Dest [149 0 R /FitH 443.4]
/Next 602 0 R
/Title (Format)
>>
endobj
602 0 obj
<<
/Parent 600 0 R
/Dest [149 0 R /FitH 405]
/Previous 601 0 R
/Title (Examples)
>>
endobj
603 0 obj
<<
/Parent 497 0 R
/Dest [149 0 R /FitH 359.4]
/Previous 600 0 R
/Next 606 0 R
/First 604 0 R
/Last 605 0 R
/Count 2 
/Title (&extract_init)
>>
endobj
604 0 obj
<<
/Parent 603 0 R
/Dest [149 0 R /FitH 297]
/Next 605 0 R
/Title (Format)
>>
endobj
605 0 obj
<<
/Parent 603 0 R
/Dest [149 0 R /FitH 258.6]
/Previous 604 0 R
/Title (Examples)
>>
endobj
606 0 obj
<<
/Parent 497 0 R
/Dest [149 0 R /FitH 213]
/Previous 603 0 R
/Next 609 0 R
/First 607 0 R
/Last 608 0 R
/Count 2 
/Title (&remove_numeric)
>>
endobj
607 0 obj
<<
/Parent 606 0 R
/Dest [149 0 R /FitH 174.6]
/Next 608 0 R
/Title (Format)
>>
endobj
608 0 obj
<<
/Parent 606 0 R
/Dest [149 0 R /FitH 136.2]
/Previous 607 0 R
/Title (Examples)
>>
endobj
609 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 792]
/Previous 606 0 R
/Next 612 0 R
/First 610 0 R
/Last 611 0 R
/Count 2 
/Title (&remove_special)
>>
endobj
610 0 obj
<<
/Parent 609 0 R
/Dest [153 0 R /FitH 741.6]
/Next 611 0 R
/Title (Format)
>>
endobj
611 0 obj
<<
/Parent 609 0 R
/Dest [153 0 R /FitH 703.2]
/Previous 610 0 R
/Title (Examples)
>>
endobj
612 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 657.6]
/Previous 609 0 R
/Next 615 0 R
/First 613 0 R
/Last 614 0 R
/Count 2 
/Title (&remove_spaces)
>>
endobj
613 0 obj
<<
/Parent 612 0 R
/Dest [153 0 R /FitH 619.2]
/Next 614 0 R
/Title (Format)
>>
endobj
614 0 obj
<<
/Parent 612 0 R
/Dest [153 0 R /FitH 580.8]
/Previous 613 0 R
/Title (Examples)
>>
endobj
615 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 535.2]
/Previous 612 0 R
/Next 618 0 R
/First 616 0 R
/Last 617 0 R
/Count 2 
/Title (&match, &match_all)
>>
endobj
616 0 obj
<<
/Parent 615 0 R
/Dest [153 0 R /FitH 484.8]
/Next 617 0 R
/Title (Format)
>>
endobj
617 0 obj
<<
/Parent 615 0 R
/Dest [153 0 R /FitH 446.4]
/Previous 616 0 R
/Title (Examples)
>>
endobj
618 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 400.8]
/Previous 615 0 R
/Next 621 0 R
/First 619 0 R
/Last 620 0 R
/Count 2 
/Title (&remove_non_numeric, &extract_numeric, &to_number)
>>
endobj
619 0 obj
<<
/Parent 618 0 R
/Dest [153 0 R /FitH 350.4]
/Next 620 0 R
/Title (Format)
>>
endobj
620 0 obj
<<
/Parent 618 0 R
/Dest [153 0 R /FitH 312]
/Previous 619 0 R
/Title (Examples)
>>
endobj
621 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 266.4]
/Previous 618 0 R
/Next 624 0 R
/First 622 0 R
/Last 623 0 R
/Count 2 
/Title (&length)
>>
endobj
622 0 obj
<<
/Parent 621 0 R
/Dest [153 0 R /FitH 228]
/Next 623 0 R
/Title (Format)
>>
endobj
623 0 obj
<<
/Parent 621 0 R
/Dest [153 0 R /FitH 189.6]
/Previous 622 0 R
/Title (Examples)
>>
endobj
624 0 obj
<<
/Parent 497 0 R
/Dest [153 0 R /FitH 144]
/Previous 621 0 R
/Next 627 0 R
/First 625 0 R
/Last 626 0 R
/Count 2 
/Title (&substr)
>>
endobj
625 0 obj
<<
/Parent 624 0 R
/Dest [153 0 R /FitH 93.6000000000003]
/Next 626 0 R
/Title (Format)
>>
endobj
626 0 obj
<<
/Parent 624 0 R
/Dest [157 0 R /FitH 765.6]
/Previous 625 0 R
/Title (Examples)
>>
endobj
627 0 obj
<<
/Parent 497 0 R
/Dest [157 0 R /FitH 720]
/Previous 624 0 R
/Next 630 0 R
/First 628 0 R
/Last 629 0 R
/Count 2 
/Title (&index)
>>
endobj
628 0 obj
<<
/Parent 627 0 R
/Dest [157 0 R /FitH 669.6]
/Next 629 0 R
/Title (Format)
>>
endobj
629 0 obj
<<
/Parent 627 0 R
/Dest [157 0 R /FitH 631.2]
/Previous 628 0 R
/Title (Examples)
>>
endobj
630 0 obj
<<
/Parent 497 0 R
/Dest [157 0 R /FitH 585.6]
/Previous 627 0 R
/Next 633 0 R
/First 631 0 R
/Last 632 0 R
/Count 2 
/Title (&rindex)
>>
endobj
631 0 obj
<<
/Parent 630 0 R
/Dest [157 0 R /FitH 547.2]
/Next 632 0 R
/Title (Format)
>>
endobj
632 0 obj
<<
/Parent 630 0 R
/Dest [157 0 R /FitH 508.8]
/Previous 631 0 R
/Title (Examples)
>>
endobj
633 0 obj
<<
/Parent 497 0 R
/Dest [157 0 R /FitH 478.8]
/Previous 630 0 R
/Next 636 0 R
/First 634 0 R
/Last 635 0 R
/Count 2 
/Title (&lc)
>>
endobj
634 0 obj
<<
/Parent 633 0 R
/Dest [157 0 R /FitH 440.4]
/Next 635 0 R
/Title (Format)
>>
endobj
635 0 obj
<<
/Parent 633 0 R
/Dest [157 0 R /FitH 402]
/Previous 634 0 R
/Title (Examples)
>>
endobj
636 0 obj
<<
/Parent 497 0 R
/Dest [157 0 R /FitH 314.4]
/Previous 633 0 R
/Next 639 0 R
/First 637 0 R
/Last 638 0 R
/Count 2 
/Title (&lc_first)
>>
endobj
637 0 obj
<<
/Parent 636 0 R
/Dest [157 0 R /FitH 276]
/Next 638 0 R
/Title (Format)
>>
endobj
638 0 obj
<<
/Parent 636 0 R
/Dest [157 0 R /FitH 237.6]
/Previous 637 0 R
/Title (Examples)
>>
endobj
639 0 obj
<<
/Parent 497 0 R
/Dest [157 0 R /FitH 207.6]
/Previous 636 0 R
/Next 642 0 R
/First 640 0 R
/Last 641 0 R
/Count 2 
/Title (&uc)
>>
endobj
640 0 obj
<<
/Parent 639 0 R
/Dest [157 0 R /FitH 169.2]
/Next 641 0 R
/Title (Format)
>>
endobj
641 0 obj
<<
/Parent 639 0 R
/Dest [157 0 R /FitH 130.8]
/Previous 640 0 R
/Title (Examples)
>>
endobj
642 0 obj
<<
/Parent 497 0 R
/Dest [161 0 R /FitH 754.2]
/Previous 639 0 R
/Next 645 0 R
/First 643 0 R
/Last 644 0 R
/Count 2 
/Title (&uc_first)
>>
endobj
643 0 obj
<<
/Parent 642 0 R
/Dest [161 0 R /FitH 715.8]
/Next 644 0 R
/Title (Format)
>>
endobj
644 0 obj
<<
/Parent 642 0 R
/Dest [161 0 R /FitH 677.4]
/Previous 643 0 R
/Title (Examples)
>>
endobj
645 0 obj
<<
/Parent 497 0 R
/Dest [161 0 R /FitH 589.8]
/Previous 642 0 R
/Next 648 0 R
/First 646 0 R
/Last 647 0 R
/Count 2 
/Title (&clip_str)
>>
endobj
646 0 obj
<<
/Parent 645 0 R
/Dest [161 0 R /FitH 551.4]
/Next 647 0 R
/Title (Format)
>>
endobj
647 0 obj
<<
/Parent 645 0 R
/Dest [161 0 R /FitH 513]
/Previous 646 0 R
/Title (Examples)
>>
endobj
648 0 obj
<<
/Parent 497 0 R
/Dest [161 0 R /FitH 425.4]
/Previous 645 0 R
/Next 651 0 R
/First 649 0 R
/Last 650 0 R
/Count 2 
/Title (&left_clip_str)
>>
endobj
649 0 obj
<<
/Parent 648 0 R
/Dest [161 0 R /FitH 387]
/Next 650 0 R
/Title (Format)
>>
endobj
650 0 obj
<<
/Parent 648 0 R
/Dest [161 0 R /FitH 348.6]
/Previous 649 0 R
/Title (Examples)
>>
endobj
651 0 obj
<<
/Parent 497 0 R
/Dest [161 0 R /FitH 261.000000000001]
/Previous 648 0 R
/Next 654 0 R
/First 652 0 R
/Last 653 0 R
/Count 2 
/Title (&right_clip_str)
>>
endobj
652 0 obj
<<
/Parent 651 0 R
/Dest [161 0 R /FitH 222.600000000001]
/Next 653 0 R
/Title (Format)
>>
endobj
653 0 obj
<<
/Parent 651 0 R
/Dest [161 0 R /FitH 184.200000000001]
/Previous 652 0 R
/Title (Examples)
>>
endobj
654 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 792]
/Previous 651 0 R
/Next 657 0 R
/First 655 0 R
/Last 656 0 R
/Count 2 
/Title (&left_pad_str)
>>
endobj
655 0 obj
<<
/Parent 654 0 R
/Dest [165 0 R /FitH 741.6]
/Next 656 0 R
/Title (Format)
>>
endobj
656 0 obj
<<
/Parent 654 0 R
/Dest [165 0 R /FitH 703.2]
/Previous 655 0 R
/Title (Examples)
>>
endobj
657 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 657.6]
/Previous 654 0 R
/Next 660 0 R
/First 658 0 R
/Last 659 0 R
/Count 2 
/Title (&right_pad_str)
>>
endobj
658 0 obj
<<
/Parent 657 0 R
/Dest [165 0 R /FitH 607.2]
/Next 659 0 R
/Title (Format)
>>
endobj
659 0 obj
<<
/Parent 657 0 R
/Dest [165 0 R /FitH 568.8]
/Previous 658 0 R
/Title (Examples)
>>
endobj
660 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 523.2]
/Previous 657 0 R
/Next 663 0 R
/First 661 0 R
/Last 662 0 R
/Count 2 
/Title (&trim)
>>
endobj
661 0 obj
<<
/Parent 660 0 R
/Dest [165 0 R /FitH 472.8]
/Next 662 0 R
/Title (Format)
>>
endobj
662 0 obj
<<
/Parent 660 0 R
/Dest [165 0 R /FitH 434.4]
/Previous 661 0 R
/Title (Examples)
>>
endobj
663 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 388.8]
/Previous 660 0 R
/Next 666 0 R
/First 664 0 R
/Last 665 0 R
/Count 2 
/Title (&trim_leading)
>>
endobj
664 0 obj
<<
/Parent 663 0 R
/Dest [165 0 R /FitH 338.4]
/Next 665 0 R
/Title (Format)
>>
endobj
665 0 obj
<<
/Parent 663 0 R
/Dest [165 0 R /FitH 300]
/Previous 664 0 R
/Title (Examples)
>>
endobj
666 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 254.4]
/Previous 663 0 R
/Next 669 0 R
/First 667 0 R
/Last 668 0 R
/Count 2 
/Title (&trim_trailing)
>>
endobj
667 0 obj
<<
/Parent 666 0 R
/Dest [165 0 R /FitH 204]
/Next 668 0 R
/Title (Format)
>>
endobj
668 0 obj
<<
/Parent 666 0 R
/Dest [165 0 R /FitH 165.6]
/Previous 667 0 R
/Title (Examples)
>>
endobj
669 0 obj
<<
/Parent 497 0 R
/Dest [165 0 R /FitH 120]
/Previous 666 0 R
/Next 672 0 R
/First 670 0 R
/Last 671 0 R
/Count 2 
/Title (&translate)
>>
endobj
670 0 obj
<<
/Parent 669 0 R
/Dest [169 0 R /FitH 741.6]
/Next 671 0 R
/Title (Format)
>>
endobj
671 0 obj
<<
/Parent 669 0 R
/Dest [169 0 R /FitH 703.2]
/Previous 670 0 R
/Title (Examples)
>>
endobj
672 0 obj
<<
/Parent 497 0 R
/Dest [169 0 R /FitH 615.6]
/Previous 669 0 R
/Next 675 0 R
/First 673 0 R
/Last 674 0 R
/Count 2 
/Title (&soundex)
>>
endobj
673 0 obj
<<
/Parent 672 0 R
/Dest [169 0 R /FitH 403.92]
/Next 674 0 R
/Title (Format)
>>
endobj
674 0 obj
<<
/Parent 672 0 R
/Dest [169 0 R /FitH 365.52]
/Previous 673 0 R
/Title (Examples)
>>
endobj
675 0 obj
<<
/Parent 497 0 R
/Dest [169 0 R /FitH 319.920000000001]
/Previous 672 0 R
/Next 678 0 R
/First 676 0 R
/Last 677 0 R
/Count 2 
/Title (&initcap)
>>
endobj
676 0 obj
<<
/Parent 675 0 R
/Dest [169 0 R /FitH 269.520000000001]
/Next 677 0 R
/Title (Format)
>>
endobj
677 0 obj
<<
/Parent 675 0 R
/Dest [169 0 R /FitH 231.120000000001]
/Previous 676 0 R
/Title (Examples)
>>
endobj
678 0 obj
<<
/Parent 497 0 R
/Dest [169 0 R /FitH 185.520000000001]
/Previous 675 0 R
/Next 681 0 R
/First 679 0 R
/Last 680 0 R
/Count 2 
/Title (&banding)
>>
endobj
679 0 obj
<<
/Parent 678 0 R
/Dest [169 0 R /FitH 123.120000000001]
/Next 680 0 R
/Title (Format)
>>
endobj
680 0 obj
<<
/Parent 678 0 R
/Dest [169 0 R /FitH 84.7200000000005]
/Previous 679 0 R
/Title (Examples)
>>
endobj
681 0 obj
<<
/Parent 497 0 R
/Dest [173 0 R /FitH 762.6]
/Previous 678 0 R
/Next 684 0 R
/First 682 0 R
/Last 683 0 R
/Count 2 
/Title (&env)
>>
endobj
682 0 obj
<<
/Parent 681 0 R
/Dest [173 0 R /FitH 724.2]
/Next 683 0 R
/Title (Format)
>>
endobj
683 0 obj
<<
/Parent 681 0 R
/Dest [173 0 R /FitH 685.8]
/Previous 682 0 R
/Title (Examples)
>>
endobj
684 0 obj
<<
/Parent 497 0 R
/Dest [173 0 R /FitH 640.2]
/Previous 681 0 R
/Next 687 0 R
/First 685 0 R
/Last 686 0 R
/Count 2 
/Title (&option)
>>
endobj
685 0 obj
<<
/Parent 684 0 R
/Dest [173 0 R /FitH 601.8]
/Next 686 0 R
/Title (Format)
>>
endobj
686 0 obj
<<
/Parent 684 0 R
/Dest [173 0 R /FitH 563.4]
/Previous 685 0 R
/Title (Examples)
>>
endobj
687 0 obj
<<
/Parent 497 0 R
/Dest [173 0 R /FitH 517.8]
/Previous 684 0 R
/Next 689 0 R
/First 688 0 R
/Last 688 0 R
/Count 1 
/Title (&sqrt &rand &log &sin &exp &cos &abs &atan2 &ord &chr &int)
>>
endobj
688 0 obj
<<
/Parent 687 0 R
/Dest [173 0 R /FitH 203.4]
/Title (Format)
>>
endobj
689 0 obj
<<
/Parent 497 0 R
/Dest [173 0 R /FitH 149.4]
/Previous 687 0 R
/Next 692 0 R
/First 690 0 R
/Last 691 0 R
/Count 2 
/Title (&sign)
>>
endobj
690 0 obj
<<
/Parent 689 0 R
/Dest [173 0 R /FitH 99.0000000000001]
/Next 691 0 R
/Title (Format)
>>
endobj
691 0 obj
<<
/Parent 689 0 R
/Dest [177 0 R /FitH 792]
/Previous 690 0 R
/Title (Examples)
>>
endobj
692 0 obj
<<
/Parent 497 0 R
/Dest [177 0 R /FitH 762]
/Previous 689 0 R
/Next 695 0 R
/First 693 0 R
/Last 694 0 R
/Count 2 
/Title (&trunc)
>>
endobj
693 0 obj
<<
/Parent 692 0 R
/Dest [177 0 R /FitH 699.6]
/Next 694 0 R
/Title (Format)
>>
endobj
694 0 obj
<<
/Parent 692 0 R
/Dest [177 0 R /FitH 661.2]
/Previous 693 0 R
/Title (Examples)
>>
endobj
695 0 obj
<<
/Parent 497 0 R
/Dest [177 0 R /FitH 631.2]
/Previous 692 0 R
/Next 698 0 R
/First 696 0 R
/Last 697 0 R
/Count 2 
/Title (&arr_set_and)
>>
endobj
696 0 obj
<<
/Parent 695 0 R
/Dest [177 0 R /FitH 592.8]
/Next 697 0 R
/Title (Format)
>>
endobj
697 0 obj
<<
/Parent 695 0 R
/Dest [177 0 R /FitH 554.4]
/Previous 696 0 R
/Title (Examples)
>>
endobj
698 0 obj
<<
/Parent 497 0 R
/Dest [177 0 R /FitH 524.4]
/Previous 695 0 R
/Next 701 0 R
/First 699 0 R
/Last 700 0 R
/Count 2 
/Title (&arr_set_xor)
>>
endobj
699 0 obj
<<
/Parent 698 0 R
/Dest [177 0 R /FitH 486]
/Next 700 0 R
/Title (Format)
>>
endobj
700 0 obj
<<
/Parent 698 0 R
/Dest [177 0 R /FitH 447.6]
/Previous 699 0 R
/Title (Examples)
>>
endobj
701 0 obj
<<
/Parent 497 0 R
/Dest [177 0 R /FitH 417.6]
/Previous 698 0 R
/First 702 0 R
/Last 703 0 R
/Count 2 
/Title (&arr_set_or)
>>
endobj
702 0 obj
<<
/Parent 701 0 R
/Dest [177 0 R /FitH 379.2]
/Next 703 0 R
/Title (Format)
>>
endobj
703 0 obj
<<
/Parent 701 0 R
/Dest [177 0 R /FitH 340.8]
/Previous 702 0 R
/Title (Examples)
>>
endobj
704 0 obj
<<
/Parent 291 0 R
/Dest [181 0 R /FitH 764.4]
/Previous 497 0 R
/Next 725 0 R
/First 705 0 R
/Last 724 0 R
/Count 20 
/Title (EXAMPLE PEQUEL SCRIPTS)
>>
endobj
705 0 obj
<<
/Parent 704 0 R
/Dest [181 0 R /FitH 726]
/Next 706 0 R
/Title (Aggregates Example Script)
>>
endobj
706 0 obj
<<
/Parent 704 0 R
/Dest [185 0 R /FitH 762]
/Previous 705 0 R
/Next 707 0 R
/Title (Apache CLF Log Input Example Script)
>>
endobj
707 0 obj
<<
/Parent 704 0 R
/Dest [189 0 R /FitH 762]
/Previous 706 0 R
/Next 708 0 R
/Title (Array Fields Example Script)
>>
endobj
708 0 obj
<<
/Parent 704 0 R
/Dest [193 0 R /FitH 762]
/Previous 707 0 R
/Next 711 0 R
/First 709 0 R
/Last 710 0 R
/Count 2 
/Title (Pequel Script Chaining Example Scripts)
>>
endobj
709 0 obj
<<
/Parent 708 0 R
/Dest [193 0 R /FitH 675.6]
/Next 710 0 R
/Title (chain_pequel_pt1.pql)
>>
endobj
710 0 obj
<<
/Parent 708 0 R
/Dest [193 0 R /FitH 426.720000000001]
/Previous 709 0 R
/Title (chain_pequel_pt2.pql)
>>
endobj
711 0 obj
<<
/Parent 704 0 R
/Dest [197 0 R /FitH 762]
/Previous 708 0 R
/Next 712 0 R
/Title (Conditional Aggregation Example Script)
>>
endobj
712 0 obj
<<
/Parent 704 0 R
/Dest [201 0 R /FitH 762]
/Previous 711 0 R
/Next 713 0 R
/Title (External Tables Example Script)
>>
endobj
713 0 obj
<<
/Parent 704 0 R
/Dest [205 0 R /FitH 762]
/Previous 712 0 R
/Next 714 0 R
/Title (Filter Regex Example Script)
>>
endobj
714 0 obj
<<
/Parent 704 0 R
/Dest [209 0 R /FitH 762]
/Previous 713 0 R
/Next 717 0 R
/First 715 0 R
/Last 716 0 R
/Count 2 
/Title (Group By Derived Example Scripts)
>>
endobj
715 0 obj
<<
/Parent 714 0 R
/Dest [209 0 R /FitH 651.6]
/Next 716 0 R
/Title (Example Script 1)
>>
endobj
716 0 obj
<<
/Parent 714 0 R
/Dest [209 0 R /FitH 436.320000000001]
/Previous 715 0 R
/Title (Example Script 2)
>>
endobj
717 0 obj
<<
/Parent 704 0 R
/Dest [213 0 R /FitH 762]
/Previous 714 0 R
/Next 718 0 R
/Title (Hash Option Example Script)
>>
endobj
718 0 obj
<<
/Parent 704 0 R
/Dest [217 0 R /FitH 762]
/Previous 717 0 R
/Next 719 0 R
/Title (Local Table Example Script)
>>
endobj
719 0 obj
<<
/Parent 704 0 R
/Dest [221 0 R /FitH 762]
/Previous 718 0 R
/Next 724 0 R
/First 720 0 R
/Last 723 0 R
/Count 4 
/Title (Pequel Tables Example Script)
>>
endobj
720 0 obj
<<
/Parent 719 0 R
/Dest [221 0 R /FitH 675.6]
/Next 721 0 R
/Title (pequel_tables.pql)
>>
endobj
721 0 obj
<<
/Parent 719 0 R
/Dest [221 0 R /FitH 401.520000000001]
/Previous 720 0 R
/Next 722 0 R
/Title (sales_ttl_by_loc.pql)
>>
endobj
722 0 obj
<<
/Parent 719 0 R
/Dest [221 0 R /FitH 144.240000000001]
/Previous 721 0 R
/Next 723 0 R
/Title (top_prod_by_loc.pql)
>>
endobj
723 0 obj
<<
/Parent 719 0 R
/Dest [225 0 R /FitH 626.52]
/Previous 722 0 R
/Title (sales_ttl_by_prod.pql)
>>
endobj
724 0 obj
<<
/Parent 704 0 R
/Dest [229 0 R /FitH 762]
/Previous 719 0 R
/Title (Oracle Tables Example Script)
>>
endobj
725 0 obj
<<
/Parent 291 0 R
/Dest [233 0 R /FitH 764.4]
/Previous 704 0 R
/Next 729 0 R
/First 726 0 R
/Last 728 0 R
/Count 3 
/Title (INSTALLATION INSTRUCTIONS)
>>
endobj
726 0 obj
<<
/Parent 725 0 R
/Dest [233 0 R /FitH 628.2]
/Next 727 0 R
/Title (Installation Troubleshooting)
>>
endobj
727 0 obj
<<
/Parent 725 0 R
/Dest [233 0 R /FitH 457.2]
/Previous 726 0 R
/Next 728 0 R
/Title (Example Installation)
>>
endobj
728 0 obj
<<
/Parent 725 0 R
/Dest [241 0 R /FitH 409.800000000001]
/Previous 727 0 R
/Title (Using Inline)
>>
endobj
729 0 obj
<<
/Parent 291 0 R
/Dest [245 0 R /FitH 764.4]
/Previous 725 0 R
/Next 730 0 R
/Title (BUGS)
>>
endobj
730 0 obj
<<
/Parent 291 0 R
/Dest [245 0 R /FitH 489.12]
/Previous 729 0 R
/Next 731 0 R
/Title (AUTHOR)
>>
endobj
731 0 obj
<<
/Parent 291 0 R
/Dest [245 0 R /FitH 444.72]
/Previous 730 0 R
/Title (COPYRIGHT)
>>
endobj
290 0 obj
<<
/Type /Outlines
/Count 441
/First 291 0 R
/Last 731 0 R
>>
endobj
3 0 obj
<<
/Type /Catalog
/Pages 4 0 R
/PageMode /UseOutlines
/Outlines 290 0 R
>>
endobj
4 0 obj
<<
/Type /Pages
/Kids [ 282 0 R 289 0 R 253 0 R 257 0 R 261 0 R 265 0 R 269 0 R 273 0 R 277 0 R 281 0 R 21 0 R 25 0 R 29 0 R 33 0 R 37 0 R 41 0 R 45 0 R 49 0 R 53 0 R 57 0 R 61 0 R 65 0 R 69 0 R 73 0 R 77 0 R 81 0 R 85 0 R 89 0 R 93 0 R 97 0 R 101 0 R 105 0 R 109 0 R 113 0 R 117 0 R 121 0 R 125 0 R 129 0 R 133 0 R 137 0 R 141 0 R 145 0 R 149 0 R 153 0 R 157 0 R 161 0 R 165 0 R 169 0 R 173 0 R 177 0 R 181 0 R 185 0 R 189 0 R 193 0 R 197 0 R 201 0 R 205 0 R 209 0 R 213 0 R 217 0 R 221 0 R 225 0 R 229 0 R 233 0 R 237 0 R 241 0 R 245 0 R 249 0 R ]
/Count 68
/MediaBox [0 0 595 842]
>>
endobj
xref
0 732
0000000000 65535 f 
0000000015 00000 n 
0000000171 00000 n 
0000424642 00000 n 
0000424732 00000 n 
0000000269 00000 n 
0000002369 00000 n 
0000002468 00000 n 
0000002566 00000 n 
0000002666 00000 n 
0000002770 00000 n 
0000002866 00000 n 
0000002967 00000 n 
0000003071 00000 n 
0000003179 00000 n 
0000003277 00000 n 
0000003380 00000 n 
0000003486 00000 n 
0000003600 00000 n 
0000009271 00000 n 
0000009292 00000 n 
0000009442 00000 n 
0000009525 00000 n 
0000012935 00000 n 
0000012956 00000 n 
0000013094 00000 n 
0000013177 00000 n 
0000016153 00000 n 
0000016174 00000 n 
0000016312 00000 n 
0000016395 00000 n 
0000022515 00000 n 
0000022536 00000 n 
0000022698 00000 n 
0000022781 00000 n 
0000029237 00000 n 
0000029258 00000 n 
0000029408 00000 n 
0000029491 00000 n 
0000035738 00000 n 
0000035759 00000 n 
0000035909 00000 n 
0000035992 00000 n 
0000042765 00000 n 
0000042786 00000 n 
0000042924 00000 n 
0000043007 00000 n 
0000048671 00000 n 
0000048692 00000 n 
0000048830 00000 n 
0000048913 00000 n 
0000052758 00000 n 
0000052779 00000 n 
0000052929 00000 n 
0000053012 00000 n 
0000053671 00000 n 
0000053691 00000 n 
0000053817 00000 n 
0000053900 00000 n 
0000057311 00000 n 
0000057332 00000 n 
0000057458 00000 n 
0000057541 00000 n 
0000064108 00000 n 
0000064129 00000 n 
0000064279 00000 n 
0000064362 00000 n 
0000070589 00000 n 
0000070610 00000 n 
0000070760 00000 n 
0000070843 00000 n 
0000077422 00000 n 
0000077443 00000 n 
0000077593 00000 n 
0000077676 00000 n 
0000083672 00000 n 
0000083693 00000 n 
0000083831 00000 n 
0000083914 00000 n 
0000090026 00000 n 
0000090047 00000 n 
0000090197 00000 n 
0000090280 00000 n 
0000097897 00000 n 
0000097918 00000 n 
0000098068 00000 n 
0000098151 00000 n 
0000104905 00000 n 
0000104926 00000 n 
0000105076 00000 n 
0000105159 00000 n 
0000112497 00000 n 
0000112518 00000 n 
0000112668 00000 n 
0000112751 00000 n 
0000121413 00000 n 
0000121434 00000 n 
0000121584 00000 n 
0000121667 00000 n 
0000129360 00000 n 
0000129381 00000 n 
0000129520 00000 n 
0000129605 00000 n 
0000136635 00000 n 
0000136657 00000 n 
0000136808 00000 n 
0000136894 00000 n 
0000138700 00000 n 
0000138722 00000 n 
0000138873 00000 n 
0000138959 00000 n 
0000141926 00000 n 
0000141948 00000 n 
0000142087 00000 n 
0000142173 00000 n 
0000142594 00000 n 
0000142615 00000 n 
0000142730 00000 n 
0000142816 00000 n 
0000143650 00000 n 
0000143671 00000 n 
0000143786 00000 n 
0000143872 00000 n 
0000152195 00000 n 
0000152217 00000 n 
0000152368 00000 n 
0000152454 00000 n 
0000158919 00000 n 
0000158941 00000 n 
0000159092 00000 n 
0000159178 00000 n 
0000165184 00000 n 
0000165206 00000 n 
0000165357 00000 n 
0000165443 00000 n 
0000171578 00000 n 
0000171600 00000 n 
0000171751 00000 n 
0000171837 00000 n 
0000177250 00000 n 
0000177272 00000 n 
0000177423 00000 n 
0000177509 00000 n 
0000183018 00000 n 
0000183040 00000 n 
0000183191 00000 n 
0000183277 00000 n 
0000189117 00000 n 
0000189139 00000 n 
0000189290 00000 n 
0000189376 00000 n 
0000195249 00000 n 
0000195271 00000 n 
0000195422 00000 n 
0000195508 00000 n 
0000201744 00000 n 
0000201766 00000 n 
0000201917 00000 n 
0000202003 00000 n 
0000208431 00000 n 
0000208453 00000 n 
0000208604 00000 n 
0000208690 00000 n 
0000216200 00000 n 
0000216222 00000 n 
0000216373 00000 n 
0000216459 00000 n 
0000223522 00000 n 
0000223544 00000 n 
0000223695 00000 n 
0000223781 00000 n 
0000230752 00000 n 
0000230774 00000 n 
0000230925 00000 n 
0000231011 00000 n 
0000234747 00000 n 
0000234769 00000 n 
0000234908 00000 n 
0000234994 00000 n 
0000238436 00000 n 
0000238458 00000 n 
0000238597 00000 n 
0000238683 00000 n 
0000242023 00000 n 
0000242045 00000 n 
0000242172 00000 n 
0000242258 00000 n 
0000245885 00000 n 
0000245907 00000 n 
0000246034 00000 n 
0000246120 00000 n 
0000250347 00000 n 
0000250369 00000 n 
0000250508 00000 n 
0000250594 00000 n 
0000254040 00000 n 
0000254062 00000 n 
0000254189 00000 n 
0000254275 00000 n 
0000259039 00000 n 
0000259061 00000 n 
0000259188 00000 n 
0000259274 00000 n 
0000263340 00000 n 
0000263362 00000 n 
0000263489 00000 n 
0000263575 00000 n 
0000269803 00000 n 
0000269825 00000 n 
0000269964 00000 n 
0000270050 00000 n 
0000273019 00000 n 
0000273041 00000 n 
0000273168 00000 n 
0000273254 00000 n 
0000277031 00000 n 
0000277053 00000 n 
0000277180 00000 n 
0000277266 00000 n 
0000283651 00000 n 
0000283673 00000 n 
0000283812 00000 n 
0000283898 00000 n 
0000287030 00000 n 
0000287052 00000 n 
0000287191 00000 n 
0000287277 00000 n 
0000293598 00000 n 
0000293620 00000 n 
0000293747 00000 n 
0000293833 00000 n 
0000300153 00000 n 
0000300175 00000 n 
0000300326 00000 n 
0000300412 00000 n 
0000307688 00000 n 
0000307710 00000 n 
0000307825 00000 n 
0000307911 00000 n 
0000313782 00000 n 
0000313804 00000 n 
0000313955 00000 n 
0000314041 00000 n 
0000318121 00000 n 
0000318143 00000 n 
0000318282 00000 n 
0000318368 00000 n 
0000318672 00000 n 
0000318693 00000 n 
0000318796 00000 n 
0000318882 00000 n 
0000325152 00000 n 
0000325174 00000 n 
0000325289 00000 n 
0000325375 00000 n 
0000331919 00000 n 
0000331941 00000 n 
0000332056 00000 n 
0000332142 00000 n 
0000338579 00000 n 
0000338601 00000 n 
0000338716 00000 n 
0000338802 00000 n 
0000345231 00000 n 
0000345253 00000 n 
0000345368 00000 n 
0000345454 00000 n 
0000351508 00000 n 
0000351530 00000 n 
0000351645 00000 n 
0000351731 00000 n 
0000357836 00000 n 
0000357858 00000 n 
0000357973 00000 n 
0000358059 00000 n 
0000364171 00000 n 
0000364193 00000 n 
0000364308 00000 n 
0000364394 00000 n 
0000368339 00000 n 
0000368361 00000 n 
0000368476 00000 n 
0000368562 00000 n 
0000368648 00000 n 
0000369026 00000 n 
0000369047 00000 n 
0000369174 00000 n 
0000369473 00000 n 
0000369494 00000 n 
0000369597 00000 n 
0000424563 00000 n 
0000369683 00000 n 
0000369811 00000 n 
0000369905 00000 n 
0000370080 00000 n 
0000370201 00000 n 
0000370332 00000 n 
0000370450 00000 n 
0000370571 00000 n 
0000370701 00000 n 
0000370819 00000 n 
0000370942 00000 n 
0000371077 00000 n 
0000371206 00000 n 
0000371332 00000 n 
0000371477 00000 n 
0000371619 00000 n 
0000371736 00000 n 
0000371888 00000 n 
0000372025 00000 n 
0000372158 00000 n 
0000372298 00000 n 
0000372438 00000 n 
0000372556 00000 n 
0000372678 00000 n 
0000372817 00000 n 
0000372973 00000 n 
0000373081 00000 n 
0000373212 00000 n 
0000373341 00000 n 
0000373475 00000 n 
0000373608 00000 n 
0000373745 00000 n 
0000373890 00000 n 
0000374032 00000 n 
0000374182 00000 n 
0000374338 00000 n 
0000374506 00000 n 
0000374627 00000 n 
0000374750 00000 n 
0000374886 00000 n 
0000375021 00000 n 
0000375180 00000 n 
0000375314 00000 n 
0000375440 00000 n 
0000375589 00000 n 
0000375716 00000 n 
0000375839 00000 n 
0000375968 00000 n 
0000376092 00000 n 
0000376221 00000 n 
0000376350 00000 n 
0000376476 00000 n 
0000376610 00000 n 
0000376744 00000 n 
0000376891 00000 n 
0000377021 00000 n 
0000377189 00000 n 
0000377307 00000 n 
0000377436 00000 n 
0000377581 00000 n 
0000377727 00000 n 
0000377845 00000 n 
0000377992 00000 n 
0000378144 00000 n 
0000378263 00000 n 
0000378394 00000 n 
0000378523 00000 n 
0000378662 00000 n 
0000378805 00000 n 
0000378932 00000 n 
0000379049 00000 n 
0000379223 00000 n 
0000379321 00000 n 
0000379442 00000 n 
0000379605 00000 n 
0000379701 00000 n 
0000379816 00000 n 
0000379933 00000 n 
0000380057 00000 n 
0000380182 00000 n 
0000380306 00000 n 
0000380426 00000 n 
0000380547 00000 n 
0000380664 00000 n 
0000380778 00000 n 
0000380893 00000 n 
0000381010 00000 n 
0000381126 00000 n 
0000381244 00000 n 
0000381361 00000 n 
0000381479 00000 n 
0000381593 00000 n 
0000381708 00000 n 
0000381825 00000 n 
0000381942 00000 n 
0000382060 00000 n 
0000382180 00000 n 
0000382297 00000 n 
0000382422 00000 n 
0000382550 00000 n 
0000382668 00000 n 
0000382797 00000 n 
0000382923 00000 n 
0000383040 00000 n 
0000383155 00000 n 
0000383272 00000 n 
0000383377 00000 n 
0000383539 00000 n 
0000383640 00000 n 
0000383769 00000 n 
0000383902 00000 n 
0000384034 00000 n 
0000384160 00000 n 
0000384287 00000 n 
0000384415 00000 n 
0000384542 00000 n 
0000384667 00000 n 
0000384785 00000 n 
0000384919 00000 n 
0000385041 00000 n 
0000385160 00000 n 
0000385278 00000 n 
0000385402 00000 n 
0000385505 00000 n 
0000385669 00000 n 
0000385765 00000 n 
0000385867 00000 n 
0000386032 00000 n 
0000386128 00000 n 
0000386229 00000 n 
0000386392 00000 n 
0000386499 00000 n 
0000386613 00000 n 
0000386715 00000 n 
0000386880 00000 n 
0000386976 00000 n 
0000387078 00000 n 
0000387244 00000 n 
0000387338 00000 n 
0000387440 00000 n 
0000387598 00000 n 
0000387694 00000 n 
0000387795 00000 n 
0000387925 00000 n 
0000388056 00000 n 
0000388216 00000 n 
0000388312 00000 n 
0000388414 00000 n 
0000388575 00000 n 
0000388669 00000 n 
0000388771 00000 n 
0000388932 00000 n 
0000389028 00000 n 
0000389130 00000 n 
0000389293 00000 n 
0000389387 00000 n 
0000389489 00000 n 
0000389613 00000 n 
0000389774 00000 n 
0000389854 00000 n 
0000390010 00000 n 
0000390117 00000 n 
0000390251 00000 n 
0000390385 00000 n 
0000390522 00000 n 
0000390655 00000 n 
0000390790 00000 n 
0000390918 00000 n 
0000391043 00000 n 
0000391191 00000 n 
0000391320 00000 n 
0000391451 00000 n 
0000391580 00000 n 
0000391706 00000 n 
0000391833 00000 n 
0000391966 00000 n 
0000392100 00000 n 
0000392219 00000 n 
0000392346 00000 n 
0000392461 00000 n 
0000392588 00000 n 
0000392720 00000 n 
0000392853 00000 n 
0000392983 00000 n 
0000393116 00000 n 
0000393243 00000 n 
0000393378 00000 n 
0000393481 00000 n 
0000393643 00000 n 
0000393738 00000 n 
0000393841 00000 n 
0000394001 00000 n 
0000394098 00000 n 
0000394201 00000 n 
0000394374 00000 n 
0000394483 00000 n 
0000394612 00000 n 
0000394744 00000 n 
0000394902 00000 n 
0000395042 00000 n 
0000395172 00000 n 
0000395284 00000 n 
0000395405 00000 n 
0000395574 00000 n 
0000395695 00000 n 
0000395834 00000 n 
0000395958 00000 n 
0000396114 00000 n 
0000396251 00000 n 
0000396348 00000 n 
0000396451 00000 n 
0000396604 00000 n 
0000396701 00000 n 
0000396804 00000 n 
0000396960 00000 n 
0000397057 00000 n 
0000397158 00000 n 
0000397323 00000 n 
0000397418 00000 n 
0000397521 00000 n 
0000397680 00000 n 
0000397777 00000 n 
0000397880 00000 n 
0000398039 00000 n 
0000398136 00000 n 
0000398239 00000 n 
0000398402 00000 n 
0000398499 00000 n 
0000398602 00000 n 
0000398759 00000 n 
0000398856 00000 n 
0000398957 00000 n 
0000399119 00000 n 
0000399214 00000 n 
0000399328 00000 n 
0000399490 00000 n 
0000399587 00000 n 
0000399690 00000 n 
0000399849 00000 n 
0000399946 00000 n 
0000400049 00000 n 
0000400203 00000 n 
0000400300 00000 n 
0000400401 00000 n 
0000400556 00000 n 
0000400651 00000 n 
0000400754 00000 n 
0000400907 00000 n 
0000401004 00000 n 
0000401107 00000 n 
0000401257 00000 n 
0000401354 00000 n 
0000401457 00000 n 
0000401614 00000 n 
0000401711 00000 n 
0000401814 00000 n 
0000401971 00000 n 
0000402068 00000 n 
0000402171 00000 n 
0000402328 00000 n 
0000402425 00000 n 
0000402526 00000 n 
0000402686 00000 n 
0000402781 00000 n 
0000402884 00000 n 
0000403040 00000 n 
0000403148 00000 n 
0000403251 00000 n 
0000403406 00000 n 
0000403503 00000 n 
0000403606 00000 n 
0000403762 00000 n 
0000403859 00000 n 
0000403962 00000 n 
0000404118 00000 n 
0000404215 00000 n 
0000404318 00000 n 
0000404474 00000 n 
0000404571 00000 n 
0000404672 00000 n 
0000404828 00000 n 
0000404923 00000 n 
0000405026 00000 n 
0000405183 00000 n 
0000405278 00000 n 
0000405381 00000 n 
0000405542 00000 n 
0000405639 00000 n 
0000405742 00000 n 
0000405901 00000 n 
0000405998 00000 n 
0000406099 00000 n 
0000406255 00000 n 
0000406352 00000 n 
0000406455 00000 n 
0000406612 00000 n 
0000406709 00000 n 
0000406812 00000 n 
0000406976 00000 n 
0000407071 00000 n 
0000407174 00000 n 
0000407330 00000 n 
0000407427 00000 n 
0000407541 00000 n 
0000407698 00000 n 
0000407795 00000 n 
0000407898 00000 n 
0000408054 00000 n 
0000408151 00000 n 
0000408254 00000 n 
0000408413 00000 n 
0000408510 00000 n 
0000408611 00000 n 
0000408772 00000 n 
0000408867 00000 n 
0000408970 00000 n 
0000409131 00000 n 
0000409228 00000 n 
0000409331 00000 n 
0000409492 00000 n 
0000409589 00000 n 
0000409692 00000 n 
0000409854 00000 n 
0000409951 00000 n 
0000410054 00000 n 
0000410220 00000 n 
0000410317 00000 n 
0000410420 00000 n 
0000410617 00000 n 
0000410714 00000 n 
0000410815 00000 n 
0000410970 00000 n 
0000411065 00000 n 
0000411168 00000 n 
0000411321 00000 n 
0000411429 00000 n 
0000411532 00000 n 
0000411684 00000 n 
0000411781 00000 n 
0000411884 00000 n 
0000412039 00000 n 
0000412136 00000 n 
0000412239 00000 n 
0000412390 00000 n 
0000412487 00000 n 
0000412588 00000 n 
0000412745 00000 n 
0000412840 00000 n 
0000412943 00000 n 
0000413094 00000 n 
0000413191 00000 n 
0000413294 00000 n 
0000413451 00000 n 
0000413548 00000 n 
0000413651 00000 n 
0000413808 00000 n 
0000413905 00000 n 
0000414006 00000 n 
0000414168 00000 n 
0000414263 00000 n 
0000414366 00000 n 
0000414540 00000 n 
0000414648 00000 n 
0000414762 00000 n 
0000414921 00000 n 
0000415018 00000 n 
0000415121 00000 n 
0000415283 00000 n 
0000415380 00000 n 
0000415483 00000 n 
0000415636 00000 n 
0000415733 00000 n 
0000415836 00000 n 
0000415997 00000 n 
0000416094 00000 n 
0000416195 00000 n 
0000416357 00000 n 
0000416452 00000 n 
0000416555 00000 n 
0000416711 00000 n 
0000416808 00000 n 
0000416911 00000 n 
0000417067 00000 n 
0000417165 00000 n 
0000417269 00000 n 
0000417436 00000 n 
0000417544 00000 n 
0000417658 00000 n 
0000417825 00000 n 
0000417933 00000 n 
0000418047 00000 n 
0000418199 00000 n 
0000418296 00000 n 
0000418399 00000 n 
0000418554 00000 n 
0000418651 00000 n 
0000418754 00000 n 
0000418960 00000 n 
0000419043 00000 n 
0000419196 00000 n 
0000419304 00000 n 
0000419405 00000 n 
0000419557 00000 n 
0000419654 00000 n 
0000419757 00000 n 
0000419917 00000 n 
0000420014 00000 n 
0000420117 00000 n 
0000420277 00000 n 
0000420372 00000 n 
0000420475 00000 n 
0000420620 00000 n 
0000420717 00000 n 
0000420820 00000 n 
0000420991 00000 n 
0000421105 00000 n 
0000421247 00000 n 
0000421381 00000 n 
0000421565 00000 n 
0000421676 00000 n 
0000421802 00000 n 
0000421947 00000 n 
0000422084 00000 n 
0000422218 00000 n 
0000422396 00000 n 
0000422503 00000 n 
0000422625 00000 n 
0000422758 00000 n 
0000422891 00000 n 
0000423065 00000 n 
0000423173 00000 n 
0000423313 00000 n 
0000423452 00000 n 
0000423569 00000 n 
0000423690 00000 n 
0000423863 00000 n 
0000423982 00000 n 
0000424111 00000 n 
0000424229 00000 n 
0000424342 00000 n 
0000424458 00000 n 
trailer
<<
/Size 732
/Root 3 0 R
/Info 2 0 R
>>
startxref
425334
%%EOF
