// vim: syntax=pequel ts=4 sw=4
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
//  Script       : statistics_aggr.pql
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

options
    header                  // (default) write header record to output.
    optimize                // (default) optimize generated code.
    doc_title("Statistics Aggregates Example Script")
    doc_email("sample@youraddress.com")
    doc_version(2.2)

description section
	Demonstrate various statistical aggregates functions.

input section
    PRODUCT_CODE,
    COST_PRICE,
    DESCRIPTION,
    SALES_CODE,
	SALES_PRICE,
	SALES_QTY,
	SALES_DATE,
	LOCATION

sort by
	SALES_CODE

group by
	SALES_CODE

output section
	string SALES_CODE			SALES_CODE,
	numeric COUNT_LOCATION		distinct LOCATION,
	numeric COUNT_PRODUCTS		distinct PRODUCT_CODE,
	decimal TOTAL_SALES_PRICE	sum SALES_PRICE,
	decimal TOTAL_SALES_QTY		sum SALES_QTY,
	numeric MEDIAN_QTY			median SALES_QTY,
	numeric VARIANCE_QTY		variance SALES_QTY,
	numeric STDDEV_QTY			stddev SALES_QTY,
	numeric RANGE_QTY			range SALES_QTY
	numeric RANGE_QTY_2			= RANGE_QTY * 2
	numeric RANGE_QTY_3			= RANGE_QTY * 3
	decimal TEST_1				= MEDIAN_QTY + 100

